// Compiled by ClojureScript 0.0-3058 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3058";
cljs.core._STAR_unchecked_if_STAR_ = false;
/**
 * @define {string}
 */
cljs.core._STAR_target_STAR_ = "default";
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
 * Each runtime environment provides a different way to print output.
 * Whatever function *print-fn* is bound to will be passed any
 * Strings which should be printed.
 */
cljs.core._STAR_print_fn_STAR_ = (function cljs$core$_STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
 * Set *print-fn* to f.
 */
cljs.core.set_print_fn_BANG_ = (function cljs$core$set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function cljs$core$pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$_COLON_flush_on_newline,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$_COLON_readably,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$_COLON_meta,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$_COLON_dup,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$_COLON_print_length,cljs.core._STAR_print_length_STAR_], null);
});
/**
 * Set *print-fn* to console.log
 */
cljs.core.enable_console_print_BANG_ = (function cljs$core$enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__6097__delegate = function (args){
return console.log.apply(console,(function (){var G__6096 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__6096) : cljs.core.into_array.call(null,G__6096));
})());
};
var G__6097 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__6098__i = 0, G__6098__a = new Array(arguments.length -  0);
while (G__6098__i < G__6098__a.length) {G__6098__a[G__6098__i] = arguments[G__6098__i + 0]; ++G__6098__i;}
  args = new cljs.core.IndexedSeq(G__6098__a,0);
} 
return G__6097__delegate.call(this,args);};
G__6097.cljs$lang$maxFixedArity = 0;
G__6097.cljs$lang$applyTo = (function (arglist__6099){
var args = cljs.core.seq(arglist__6099);
return G__6097__delegate(args);
});
G__6097.cljs$core$IFn$_invoke$arity$variadic = G__6097__delegate;
return G__6097;
})()
;
});
/**
 * Internal - do not use!
 */
cljs.core.truth_ = (function cljs$core$truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
 * Tests if 2 arguments are the same object
 */
cljs.core.identical_QMARK_ = (function cljs$core$identical_QMARK_(x,y){
return (x === y);
});
/**
 * Returns true if x is nil, false otherwise.
 */
cljs.core.nil_QMARK_ = (function cljs$core$nil_QMARK_(x){
return (x == null);
});
/**
 * Returns true if x is a JavaScript array.
 */
cljs.core.array_QMARK_ = (function cljs$core$array_QMARK_(x){
return x instanceof Array;
});
/**
 * Returns true if x is a JavaScript number.
 */
cljs.core.number_QMARK_ = (function cljs$core$number_QMARK_(n){
return typeof n === 'number';
});
/**
 * Returns true if x is logical false, false otherwise.
 */
cljs.core.not = (function cljs$core$not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
 * Returns true if x is not nil, false otherwise.
 */
cljs.core.some_QMARK_ = (function cljs$core$some_QMARK_(x){
return !((x == null));
});
/**
 * Returns true if x's constructor is Object
 */
cljs.core.object_QMARK_ = (function cljs$core$object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
/**
 * Returns true if x is a JavaScript string.
 */
cljs.core.string_QMARK_ = (function cljs$core$string_QMARK_(x){
var G__6101 = x;
return goog.isString(G__6101);
});
/**
 * Internal - do not use!
 */
cljs.core.native_satisfies_QMARK_ = (function cljs$core$native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__6103 = x__$1;
return goog.typeOf(G__6103);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function cljs$core$is_proto_(x){
return (x.constructor.prototype === x);
});
/**
 * When compiled for a command-line target, whatever
 * function *main-fn* is set to will be called with the command-line
 * argv as arguments
 */
cljs.core._STAR_main_cli_fn_STAR_ = null;
/**
 * Return x's constructor.
 */
cljs.core.type = (function cljs$core$type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function cljs$core$missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__4008__auto__ = ty;
if(cljs.core.truth_(and__4008__auto__)){
return ty.cljs$lang$type;
} else {
return and__4008__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__6105 = obj;
return goog.typeOf(G__6105);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function cljs$core$type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function cljs$core$load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__6107 = Symbol;
return goog.typeOf(G__6107);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
/**
 * Construct a JavaScript array of specified size. Accepts ignored type
 * argument for compatibility with Clojure.
 */
cljs.core.make_array = (function() {
var cljs$core$make_array = null;
var cljs$core$make_array__1 = (function (size){
return (new Array(size));
});
var cljs$core$make_array__2 = (function (type,size){
return cljs$core$make_array.cljs$core$IFn$_invoke$arity$1(size);
});
cljs$core$make_array = function(type,size){
switch(arguments.length){
case 1:
return cljs$core$make_array__1.call(this,type);
case 2:
return cljs$core$make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$make_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$make_array__1;
cljs$core$make_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$make_array__2;
return cljs$core$make_array;
})()
;
/**
 * Returns a javascript array, cloned from the passed in array
 */
cljs.core.aclone = (function cljs$core$aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4907__auto___6109 = len;
var i_6110 = (0);
while(true){
if((i_6110 < n__4907__auto___6109)){
(new_arr[i_6110] = (arr[i_6110]));

var G__6111 = (i_6110 + (1));
i_6110 = G__6111;
continue;
} else {
}
break;
}

return new_arr;
});
/**
 * Creates a new javascript array.
 * @param {...*} var_args
 */
cljs.core.array = (function cljs$core$array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__6112 = (i + (1));
i = G__6112;
continue;
} else {
return a;
}
break;
}
});
/**
 * Returns the value at the index.
 * @param {...*} var_args
 */
cljs.core.aget = (function() {
var cljs$core$aget = null;
var cljs$core$aget__2 = (function (array,i){
return (array[i]);
});
var cljs$core$aget__3 = (function() { 
var G__6121__delegate = function (array,i,idxs){
var G__6118 = cljs$core$aget;
var G__6119 = cljs$core$aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__6120 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__6118,G__6119,G__6120) : cljs.core.apply.call(null,G__6118,G__6119,G__6120));
};
var G__6121 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__6122__i = 0, G__6122__a = new Array(arguments.length -  2);
while (G__6122__i < G__6122__a.length) {G__6122__a[G__6122__i] = arguments[G__6122__i + 2]; ++G__6122__i;}
  idxs = new cljs.core.IndexedSeq(G__6122__a,0);
} 
return G__6121__delegate.call(this,array,i,idxs);};
G__6121.cljs$lang$maxFixedArity = 2;
G__6121.cljs$lang$applyTo = (function (arglist__6123){
var array = cljs.core.first(arglist__6123);
arglist__6123 = cljs.core.next(arglist__6123);
var i = cljs.core.first(arglist__6123);
var idxs = cljs.core.rest(arglist__6123);
return G__6121__delegate(array,i,idxs);
});
G__6121.cljs$core$IFn$_invoke$arity$variadic = G__6121__delegate;
return G__6121;
})()
;
cljs$core$aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return cljs$core$aget__2.call(this,array,i);
default:
var G__6124 = null;
if (arguments.length > 2) {
var G__6125__i = 0, G__6125__a = new Array(arguments.length -  2);
while (G__6125__i < G__6125__a.length) {G__6125__a[G__6125__i] = arguments[G__6125__i + 2]; ++G__6125__i;}
G__6124 = new cljs.core.IndexedSeq(G__6125__a,0);
}
return cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__6124);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aget.cljs$lang$maxFixedArity = 2;
cljs$core$aget.cljs$lang$applyTo = cljs$core$aget__3.cljs$lang$applyTo;
cljs$core$aget.cljs$core$IFn$_invoke$arity$2 = cljs$core$aget__2;
cljs$core$aget.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aget;
})()
;
/**
 * Sets the value at the index.
 * @param {...*} var_args
 */
cljs.core.aset = (function() {
var cljs$core$aset = null;
var cljs$core$aset__3 = (function (array,i,val){
return (array[i] = val);
});
var cljs$core$aset__4 = (function() { 
var G__6134__delegate = function (array,idx,idx2,idxv){
var G__6130 = cljs$core$aset;
var G__6131 = (array[idx]);
var G__6132 = idx2;
var G__6133 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__6130,G__6131,G__6132,G__6133) : cljs.core.apply.call(null,G__6130,G__6131,G__6132,G__6133));
};
var G__6134 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__6135__i = 0, G__6135__a = new Array(arguments.length -  3);
while (G__6135__i < G__6135__a.length) {G__6135__a[G__6135__i] = arguments[G__6135__i + 3]; ++G__6135__i;}
  idxv = new cljs.core.IndexedSeq(G__6135__a,0);
} 
return G__6134__delegate.call(this,array,idx,idx2,idxv);};
G__6134.cljs$lang$maxFixedArity = 3;
G__6134.cljs$lang$applyTo = (function (arglist__6136){
var array = cljs.core.first(arglist__6136);
arglist__6136 = cljs.core.next(arglist__6136);
var idx = cljs.core.first(arglist__6136);
arglist__6136 = cljs.core.next(arglist__6136);
var idx2 = cljs.core.first(arglist__6136);
var idxv = cljs.core.rest(arglist__6136);
return G__6134__delegate(array,idx,idx2,idxv);
});
G__6134.cljs$core$IFn$_invoke$arity$variadic = G__6134__delegate;
return G__6134;
})()
;
cljs$core$aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return cljs$core$aset__3.call(this,array,idx,idx2);
default:
var G__6137 = null;
if (arguments.length > 3) {
var G__6138__i = 0, G__6138__a = new Array(arguments.length -  3);
while (G__6138__i < G__6138__a.length) {G__6138__a[G__6138__i] = arguments[G__6138__i + 3]; ++G__6138__i;}
G__6137 = new cljs.core.IndexedSeq(G__6138__a,0);
}
return cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__6137);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aset.cljs$lang$maxFixedArity = 3;
cljs$core$aset.cljs$lang$applyTo = cljs$core$aset__4.cljs$lang$applyTo;
cljs$core$aset.cljs$core$IFn$_invoke$arity$3 = cljs$core$aset__3;
cljs$core$aset.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aset;
})()
;
/**
 * Returns the length of the array. Works on arrays of all types.
 */
cljs.core.alength = (function cljs$core$alength(array){
return array.length;
});
/**
 * Returns an array with components set to the values in aseq. Optional type
 * argument accepted for compatibility with Clojure.
 */
cljs.core.into_array = (function() {
var cljs$core$into_array = null;
var cljs$core$into_array__1 = (function (aseq){
return cljs$core$into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var cljs$core$into_array__2 = (function (type,aseq){
var G__6144 = (function (a,x){
a.push(x);

return a;
});
var G__6145 = [];
var G__6146 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6144,G__6145,G__6146) : cljs.core.reduce.call(null,G__6144,G__6145,G__6146));
});
cljs$core$into_array = function(type,aseq){
switch(arguments.length){
case 1:
return cljs$core$into_array__1.call(this,type);
case 2:
return cljs$core$into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$into_array__1;
cljs$core$into_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$into_array__2;
return cljs$core$into_array;
})()
;
/**
 * Invoke JavaScript object method via string. Needed when the
 * string is not a valid unquoted property name.
 * @param {...*} var_args
 */
cljs.core.js_invoke = (function() { 
var cljs$core$js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var cljs$core$js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__6147__i = 0, G__6147__a = new Array(arguments.length -  2);
while (G__6147__i < G__6147__a.length) {G__6147__a[G__6147__i] = arguments[G__6147__i + 2]; ++G__6147__i;}
  args = new cljs.core.IndexedSeq(G__6147__a,0);
} 
return cljs$core$js_invoke__delegate.call(this,obj,s,args);};
cljs$core$js_invoke.cljs$lang$maxFixedArity = 2;
cljs$core$js_invoke.cljs$lang$applyTo = (function (arglist__6148){
var obj = cljs.core.first(arglist__6148);
arglist__6148 = cljs.core.next(arglist__6148);
var s = cljs.core.first(arglist__6148);
var args = cljs.core.rest(arglist__6148);
return cljs$core$js_invoke__delegate(obj,s,args);
});
cljs$core$js_invoke.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_invoke__delegate;
return cljs$core$js_invoke;
})()
;

cljs.core.Fn = (function (){var obj6150 = {};
return obj6150;
})();


cljs.core.IFn = (function (){var obj6152 = {};
return obj6152;
})();

cljs.core._invoke = (function() {
var cljs$core$_invoke = null;
var cljs$core$_invoke__1 = (function (this$){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6198 = x__4664__auto__;
return goog.typeOf(G__6198);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var cljs$core$_invoke__2 = (function (this$,a){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6200 = x__4664__auto__;
return goog.typeOf(G__6200);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var cljs$core$_invoke__3 = (function (this$,a,b){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6202 = x__4664__auto__;
return goog.typeOf(G__6202);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var cljs$core$_invoke__4 = (function (this$,a,b,c){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6204 = x__4664__auto__;
return goog.typeOf(G__6204);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var cljs$core$_invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6206 = x__4664__auto__;
return goog.typeOf(G__6206);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var cljs$core$_invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6208 = x__4664__auto__;
return goog.typeOf(G__6208);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var cljs$core$_invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6210 = x__4664__auto__;
return goog.typeOf(G__6210);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var cljs$core$_invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6212 = x__4664__auto__;
return goog.typeOf(G__6212);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var cljs$core$_invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6214 = x__4664__auto__;
return goog.typeOf(G__6214);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var cljs$core$_invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6216 = x__4664__auto__;
return goog.typeOf(G__6216);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var cljs$core$_invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6218 = x__4664__auto__;
return goog.typeOf(G__6218);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var cljs$core$_invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6220 = x__4664__auto__;
return goog.typeOf(G__6220);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var cljs$core$_invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6222 = x__4664__auto__;
return goog.typeOf(G__6222);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var cljs$core$_invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6224 = x__4664__auto__;
return goog.typeOf(G__6224);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var cljs$core$_invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6226 = x__4664__auto__;
return goog.typeOf(G__6226);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var cljs$core$_invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6228 = x__4664__auto__;
return goog.typeOf(G__6228);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var cljs$core$_invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6230 = x__4664__auto__;
return goog.typeOf(G__6230);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var cljs$core$_invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6232 = x__4664__auto__;
return goog.typeOf(G__6232);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var cljs$core$_invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6234 = x__4664__auto__;
return goog.typeOf(G__6234);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var cljs$core$_invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6236 = x__4664__auto__;
return goog.typeOf(G__6236);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var cljs$core$_invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6238 = x__4664__auto__;
return goog.typeOf(G__6238);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var cljs$core$_invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._invoke[(function (){var G__6240 = x__4664__auto__;
return goog.typeOf(G__6240);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._invoke["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
cljs$core$_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return cljs$core$_invoke__1.call(this,this$);
case 2:
return cljs$core$_invoke__2.call(this,this$,a);
case 3:
return cljs$core$_invoke__3.call(this,this$,a,b);
case 4:
return cljs$core$_invoke__4.call(this,this$,a,b,c);
case 5:
return cljs$core$_invoke__5.call(this,this$,a,b,c,d);
case 6:
return cljs$core$_invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return cljs$core$_invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return cljs$core$_invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return cljs$core$_invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return cljs$core$_invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return cljs$core$_invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return cljs$core$_invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return cljs$core$_invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return cljs$core$_invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return cljs$core$_invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return cljs$core$_invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return cljs$core$_invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return cljs$core$_invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return cljs$core$_invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return cljs$core$_invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return cljs$core$_invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return cljs$core$_invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$1 = cljs$core$_invoke__1;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$2 = cljs$core$_invoke__2;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$3 = cljs$core$_invoke__3;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$4 = cljs$core$_invoke__4;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$5 = cljs$core$_invoke__5;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$6 = cljs$core$_invoke__6;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$7 = cljs$core$_invoke__7;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$8 = cljs$core$_invoke__8;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$9 = cljs$core$_invoke__9;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$10 = cljs$core$_invoke__10;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$11 = cljs$core$_invoke__11;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$12 = cljs$core$_invoke__12;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$13 = cljs$core$_invoke__13;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$14 = cljs$core$_invoke__14;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$15 = cljs$core$_invoke__15;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$16 = cljs$core$_invoke__16;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$17 = cljs$core$_invoke__17;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$18 = cljs$core$_invoke__18;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$19 = cljs$core$_invoke__19;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$20 = cljs$core$_invoke__20;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$21 = cljs$core$_invoke__21;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$22 = cljs$core$_invoke__22;
return cljs$core$_invoke;
})()
;


cljs.core.ICloneable = (function (){var obj6242 = {};
return obj6242;
})();

cljs.core._clone = (function cljs$core$_clone(value){
if((function (){var and__4008__auto__ = value;
if(and__4008__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__4008__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4664__auto__ = (((value == null))?null:value);
return (function (){var or__4020__auto__ = (cljs.core._clone[(function (){var G__6246 = x__4664__auto__;
return goog.typeOf(G__6246);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._clone["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj6248 = {};
return obj6248;
})();

cljs.core._count = (function cljs$core$_count(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._count[(function (){var G__6252 = x__4664__auto__;
return goog.typeOf(G__6252);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._count["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj6254 = {};
return obj6254;
})();

cljs.core._empty = (function cljs$core$_empty(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._empty[(function (){var G__6258 = x__4664__auto__;
return goog.typeOf(G__6258);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._empty["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj6260 = {};
return obj6260;
})();

cljs.core._conj = (function cljs$core$_conj(coll,o){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._conj[(function (){var G__6264 = x__4664__auto__;
return goog.typeOf(G__6264);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._conj["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj6266 = {};
return obj6266;
})();

cljs.core._nth = (function() {
var cljs$core$_nth = null;
var cljs$core$_nth__2 = (function (coll,n){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._nth[(function (){var G__6272 = x__4664__auto__;
return goog.typeOf(G__6272);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._nth["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var cljs$core$_nth__3 = (function (coll,n,not_found){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._nth[(function (){var G__6274 = x__4664__auto__;
return goog.typeOf(G__6274);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._nth["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
cljs$core$_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$_nth__2.call(this,coll,n);
case 3:
return cljs$core$_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$_nth__2;
cljs$core$_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$_nth__3;
return cljs$core$_nth;
})()
;


cljs.core.ASeq = (function (){var obj6276 = {};
return obj6276;
})();


cljs.core.ISeq = (function (){var obj6278 = {};
return obj6278;
})();

cljs.core._first = (function cljs$core$_first(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._first[(function (){var G__6282 = x__4664__auto__;
return goog.typeOf(G__6282);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._first["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function cljs$core$_rest(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._rest[(function (){var G__6286 = x__4664__auto__;
return goog.typeOf(G__6286);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._rest["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj6288 = {};
return obj6288;
})();

cljs.core._next = (function cljs$core$_next(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._next[(function (){var G__6292 = x__4664__auto__;
return goog.typeOf(G__6292);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._next["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj6294 = {};
return obj6294;
})();

cljs.core._lookup = (function() {
var cljs$core$_lookup = null;
var cljs$core$_lookup__2 = (function (o,k){
if((function (){var and__4008__auto__ = o;
if(and__4008__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__4008__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4664__auto__ = (((o == null))?null:o);
return (function (){var or__4020__auto__ = (cljs.core._lookup[(function (){var G__6300 = x__4664__auto__;
return goog.typeOf(G__6300);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._lookup["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var cljs$core$_lookup__3 = (function (o,k,not_found){
if((function (){var and__4008__auto__ = o;
if(and__4008__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__4008__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4664__auto__ = (((o == null))?null:o);
return (function (){var or__4020__auto__ = (cljs.core._lookup[(function (){var G__6302 = x__4664__auto__;
return goog.typeOf(G__6302);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._lookup["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
cljs$core$_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$_lookup__2.call(this,o,k);
case 3:
return cljs$core$_lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$2 = cljs$core$_lookup__2;
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$3 = cljs$core$_lookup__3;
return cljs$core$_lookup;
})()
;


cljs.core.IAssociative = (function (){var obj6304 = {};
return obj6304;
})();

cljs.core._contains_key_QMARK_ = (function cljs$core$_contains_key_QMARK_(coll,k){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__6308 = x__4664__auto__;
return goog.typeOf(G__6308);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function cljs$core$_assoc(coll,k,v){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._assoc[(function (){var G__6312 = x__4664__auto__;
return goog.typeOf(G__6312);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._assoc["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj6314 = {};
return obj6314;
})();

cljs.core._dissoc = (function cljs$core$_dissoc(coll,k){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._dissoc[(function (){var G__6318 = x__4664__auto__;
return goog.typeOf(G__6318);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._dissoc["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj6320 = {};
return obj6320;
})();

cljs.core._key = (function cljs$core$_key(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._key[(function (){var G__6324 = x__4664__auto__;
return goog.typeOf(G__6324);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._key["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function cljs$core$_val(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._val[(function (){var G__6328 = x__4664__auto__;
return goog.typeOf(G__6328);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._val["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj6330 = {};
return obj6330;
})();

cljs.core._disjoin = (function cljs$core$_disjoin(coll,v){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._disjoin[(function (){var G__6334 = x__4664__auto__;
return goog.typeOf(G__6334);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._disjoin["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj6336 = {};
return obj6336;
})();

cljs.core._peek = (function cljs$core$_peek(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._peek[(function (){var G__6340 = x__4664__auto__;
return goog.typeOf(G__6340);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._peek["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function cljs$core$_pop(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._pop[(function (){var G__6344 = x__4664__auto__;
return goog.typeOf(G__6344);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._pop["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj6346 = {};
return obj6346;
})();

cljs.core._assoc_n = (function cljs$core$_assoc_n(coll,n,val){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._assoc_n[(function (){var G__6350 = x__4664__auto__;
return goog.typeOf(G__6350);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj6352 = {};
return obj6352;
})();

cljs.core._deref = (function cljs$core$_deref(o){
if((function (){var and__4008__auto__ = o;
if(and__4008__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__4008__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4664__auto__ = (((o == null))?null:o);
return (function (){var or__4020__auto__ = (cljs.core._deref[(function (){var G__6356 = x__4664__auto__;
return goog.typeOf(G__6356);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._deref["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj6358 = {};
return obj6358;
})();

cljs.core._deref_with_timeout = (function cljs$core$_deref_with_timeout(o,msec,timeout_val){
if((function (){var and__4008__auto__ = o;
if(and__4008__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__4008__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4664__auto__ = (((o == null))?null:o);
return (function (){var or__4020__auto__ = (cljs.core._deref_with_timeout[(function (){var G__6362 = x__4664__auto__;
return goog.typeOf(G__6362);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj6364 = {};
return obj6364;
})();

cljs.core._meta = (function cljs$core$_meta(o){
if((function (){var and__4008__auto__ = o;
if(and__4008__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__4008__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4664__auto__ = (((o == null))?null:o);
return (function (){var or__4020__auto__ = (cljs.core._meta[(function (){var G__6368 = x__4664__auto__;
return goog.typeOf(G__6368);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._meta["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj6370 = {};
return obj6370;
})();

cljs.core._with_meta = (function cljs$core$_with_meta(o,meta){
if((function (){var and__4008__auto__ = o;
if(and__4008__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__4008__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4664__auto__ = (((o == null))?null:o);
return (function (){var or__4020__auto__ = (cljs.core._with_meta[(function (){var G__6374 = x__4664__auto__;
return goog.typeOf(G__6374);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._with_meta["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj6376 = {};
return obj6376;
})();

cljs.core._reduce = (function() {
var cljs$core$_reduce = null;
var cljs$core$_reduce__2 = (function (coll,f){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._reduce[(function (){var G__6382 = x__4664__auto__;
return goog.typeOf(G__6382);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._reduce["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var cljs$core$_reduce__3 = (function (coll,f,start){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._reduce[(function (){var G__6384 = x__4664__auto__;
return goog.typeOf(G__6384);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._reduce["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
cljs$core$_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return cljs$core$_reduce__2.call(this,coll,f);
case 3:
return cljs$core$_reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$_reduce__2;
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$_reduce__3;
return cljs$core$_reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj6386 = {};
return obj6386;
})();

cljs.core._kv_reduce = (function cljs$core$_kv_reduce(coll,f,init){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._kv_reduce[(function (){var G__6390 = x__4664__auto__;
return goog.typeOf(G__6390);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj6392 = {};
return obj6392;
})();

cljs.core._equiv = (function cljs$core$_equiv(o,other){
if((function (){var and__4008__auto__ = o;
if(and__4008__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__4008__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4664__auto__ = (((o == null))?null:o);
return (function (){var or__4020__auto__ = (cljs.core._equiv[(function (){var G__6396 = x__4664__auto__;
return goog.typeOf(G__6396);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._equiv["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj6398 = {};
return obj6398;
})();

cljs.core._hash = (function cljs$core$_hash(o){
if((function (){var and__4008__auto__ = o;
if(and__4008__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__4008__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4664__auto__ = (((o == null))?null:o);
return (function (){var or__4020__auto__ = (cljs.core._hash[(function (){var G__6402 = x__4664__auto__;
return goog.typeOf(G__6402);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._hash["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj6404 = {};
return obj6404;
})();

cljs.core._seq = (function cljs$core$_seq(o){
if((function (){var and__4008__auto__ = o;
if(and__4008__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__4008__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4664__auto__ = (((o == null))?null:o);
return (function (){var or__4020__auto__ = (cljs.core._seq[(function (){var G__6408 = x__4664__auto__;
return goog.typeOf(G__6408);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._seq["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj6410 = {};
return obj6410;
})();


cljs.core.IList = (function (){var obj6412 = {};
return obj6412;
})();


cljs.core.IRecord = (function (){var obj6414 = {};
return obj6414;
})();


cljs.core.IReversible = (function (){var obj6416 = {};
return obj6416;
})();

cljs.core._rseq = (function cljs$core$_rseq(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._rseq[(function (){var G__6420 = x__4664__auto__;
return goog.typeOf(G__6420);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._rseq["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj6422 = {};
return obj6422;
})();

cljs.core._sorted_seq = (function cljs$core$_sorted_seq(coll,ascending_QMARK_){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._sorted_seq[(function (){var G__6426 = x__4664__auto__;
return goog.typeOf(G__6426);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function cljs$core$_sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._sorted_seq_from[(function (){var G__6430 = x__4664__auto__;
return goog.typeOf(G__6430);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function cljs$core$_entry_key(coll,entry){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._entry_key[(function (){var G__6434 = x__4664__auto__;
return goog.typeOf(G__6434);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._entry_key["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function cljs$core$_comparator(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._comparator[(function (){var G__6438 = x__4664__auto__;
return goog.typeOf(G__6438);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._comparator["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj6440 = {};
return obj6440;
})();

cljs.core._write = (function cljs$core$_write(writer,s){
if((function (){var and__4008__auto__ = writer;
if(and__4008__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__4008__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4664__auto__ = (((writer == null))?null:writer);
return (function (){var or__4020__auto__ = (cljs.core._write[(function (){var G__6444 = x__4664__auto__;
return goog.typeOf(G__6444);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._write["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function cljs$core$_flush(writer){
if((function (){var and__4008__auto__ = writer;
if(and__4008__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__4008__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4664__auto__ = (((writer == null))?null:writer);
return (function (){var or__4020__auto__ = (cljs.core._flush[(function (){var G__6448 = x__4664__auto__;
return goog.typeOf(G__6448);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._flush["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj6450 = {};
return obj6450;
})();

cljs.core._pr_writer = (function cljs$core$_pr_writer(o,writer,opts){
if((function (){var and__4008__auto__ = o;
if(and__4008__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__4008__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4664__auto__ = (((o == null))?null:o);
return (function (){var or__4020__auto__ = (cljs.core._pr_writer[(function (){var G__6454 = x__4664__auto__;
return goog.typeOf(G__6454);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj6456 = {};
return obj6456;
})();

cljs.core._realized_QMARK_ = (function cljs$core$_realized_QMARK_(d){
if((function (){var and__4008__auto__ = d;
if(and__4008__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__4008__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4664__auto__ = (((d == null))?null:d);
return (function (){var or__4020__auto__ = (cljs.core._realized_QMARK_[(function (){var G__6460 = x__4664__auto__;
return goog.typeOf(G__6460);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj6462 = {};
return obj6462;
})();

cljs.core._notify_watches = (function cljs$core$_notify_watches(this$,oldval,newval){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._notify_watches[(function (){var G__6466 = x__4664__auto__;
return goog.typeOf(G__6466);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function cljs$core$_add_watch(this$,key,f){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._add_watch[(function (){var G__6470 = x__4664__auto__;
return goog.typeOf(G__6470);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._add_watch["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function cljs$core$_remove_watch(this$,key){
if((function (){var and__4008__auto__ = this$;
if(and__4008__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__4008__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4664__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4020__auto__ = (cljs.core._remove_watch[(function (){var G__6474 = x__4664__auto__;
return goog.typeOf(G__6474);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj6476 = {};
return obj6476;
})();

cljs.core._as_transient = (function cljs$core$_as_transient(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._as_transient[(function (){var G__6480 = x__4664__auto__;
return goog.typeOf(G__6480);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._as_transient["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj6482 = {};
return obj6482;
})();

cljs.core._conj_BANG_ = (function cljs$core$_conj_BANG_(tcoll,val){
if((function (){var and__4008__auto__ = tcoll;
if(and__4008__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__4008__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4664__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4020__auto__ = (cljs.core._conj_BANG_[(function (){var G__6486 = x__4664__auto__;
return goog.typeOf(G__6486);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function cljs$core$_persistent_BANG_(tcoll){
if((function (){var and__4008__auto__ = tcoll;
if(and__4008__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__4008__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4664__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4020__auto__ = (cljs.core._persistent_BANG_[(function (){var G__6490 = x__4664__auto__;
return goog.typeOf(G__6490);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj6492 = {};
return obj6492;
})();

cljs.core._assoc_BANG_ = (function cljs$core$_assoc_BANG_(tcoll,key,val){
if((function (){var and__4008__auto__ = tcoll;
if(and__4008__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__4008__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4664__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4020__auto__ = (cljs.core._assoc_BANG_[(function (){var G__6496 = x__4664__auto__;
return goog.typeOf(G__6496);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj6498 = {};
return obj6498;
})();

cljs.core._dissoc_BANG_ = (function cljs$core$_dissoc_BANG_(tcoll,key){
if((function (){var and__4008__auto__ = tcoll;
if(and__4008__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__4008__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4664__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4020__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__6502 = x__4664__auto__;
return goog.typeOf(G__6502);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj6504 = {};
return obj6504;
})();

cljs.core._assoc_n_BANG_ = (function cljs$core$_assoc_n_BANG_(tcoll,n,val){
if((function (){var and__4008__auto__ = tcoll;
if(and__4008__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__4008__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4664__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4020__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__6508 = x__4664__auto__;
return goog.typeOf(G__6508);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function cljs$core$_pop_BANG_(tcoll){
if((function (){var and__4008__auto__ = tcoll;
if(and__4008__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__4008__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4664__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4020__auto__ = (cljs.core._pop_BANG_[(function (){var G__6512 = x__4664__auto__;
return goog.typeOf(G__6512);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj6514 = {};
return obj6514;
})();

cljs.core._disjoin_BANG_ = (function cljs$core$_disjoin_BANG_(tcoll,v){
if((function (){var and__4008__auto__ = tcoll;
if(and__4008__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__4008__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4664__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4020__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__6518 = x__4664__auto__;
return goog.typeOf(G__6518);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj6520 = {};
return obj6520;
})();

cljs.core._compare = (function cljs$core$_compare(x,y){
if((function (){var and__4008__auto__ = x;
if(and__4008__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__4008__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4664__auto__ = (((x == null))?null:x);
return (function (){var or__4020__auto__ = (cljs.core._compare[(function (){var G__6524 = x__4664__auto__;
return goog.typeOf(G__6524);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._compare["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj6526 = {};
return obj6526;
})();

cljs.core._drop_first = (function cljs$core$_drop_first(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._drop_first[(function (){var G__6530 = x__4664__auto__;
return goog.typeOf(G__6530);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._drop_first["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj6532 = {};
return obj6532;
})();

cljs.core._chunked_first = (function cljs$core$_chunked_first(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._chunked_first[(function (){var G__6536 = x__4664__auto__;
return goog.typeOf(G__6536);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function cljs$core$_chunked_rest(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._chunked_rest[(function (){var G__6540 = x__4664__auto__;
return goog.typeOf(G__6540);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj6542 = {};
return obj6542;
})();

cljs.core._chunked_next = (function cljs$core$_chunked_next(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._chunked_next[(function (){var G__6546 = x__4664__auto__;
return goog.typeOf(G__6546);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj6548 = {};
return obj6548;
})();

cljs.core._name = (function cljs$core$_name(x){
if((function (){var and__4008__auto__ = x;
if(and__4008__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__4008__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4664__auto__ = (((x == null))?null:x);
return (function (){var or__4020__auto__ = (cljs.core._name[(function (){var G__6552 = x__4664__auto__;
return goog.typeOf(G__6552);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._name["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function cljs$core$_namespace(x){
if((function (){var and__4008__auto__ = x;
if(and__4008__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__4008__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4664__auto__ = (((x == null))?null:x);
return (function (){var or__4020__auto__ = (cljs.core._namespace[(function (){var G__6556 = x__4664__auto__;
return goog.typeOf(G__6556);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._namespace["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj6558 = {};
return obj6558;
})();


cljs.core.IReset = (function (){var obj6560 = {};
return obj6560;
})();

cljs.core._reset_BANG_ = (function cljs$core$_reset_BANG_(o,new_value){
if((function (){var and__4008__auto__ = o;
if(and__4008__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__4008__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4664__auto__ = (((o == null))?null:o);
return (function (){var or__4020__auto__ = (cljs.core._reset_BANG_[(function (){var G__6564 = x__4664__auto__;
return goog.typeOf(G__6564);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj6566 = {};
return obj6566;
})();

cljs.core._swap_BANG_ = (function() {
var cljs$core$_swap_BANG_ = null;
var cljs$core$_swap_BANG___2 = (function (o,f){
if((function (){var and__4008__auto__ = o;
if(and__4008__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__4008__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4664__auto__ = (((o == null))?null:o);
return (function (){var or__4020__auto__ = (cljs.core._swap_BANG_[(function (){var G__6576 = x__4664__auto__;
return goog.typeOf(G__6576);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var cljs$core$_swap_BANG___3 = (function (o,f,a){
if((function (){var and__4008__auto__ = o;
if(and__4008__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__4008__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4664__auto__ = (((o == null))?null:o);
return (function (){var or__4020__auto__ = (cljs.core._swap_BANG_[(function (){var G__6578 = x__4664__auto__;
return goog.typeOf(G__6578);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var cljs$core$_swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__4008__auto__ = o;
if(and__4008__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__4008__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4664__auto__ = (((o == null))?null:o);
return (function (){var or__4020__auto__ = (cljs.core._swap_BANG_[(function (){var G__6580 = x__4664__auto__;
return goog.typeOf(G__6580);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var cljs$core$_swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__4008__auto__ = o;
if(and__4008__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__4008__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4664__auto__ = (((o == null))?null:o);
return (function (){var or__4020__auto__ = (cljs.core._swap_BANG_[(function (){var G__6582 = x__4664__auto__;
return goog.typeOf(G__6582);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
cljs$core$_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return cljs$core$_swap_BANG___2.call(this,o,f);
case 3:
return cljs$core$_swap_BANG___3.call(this,o,f,a);
case 4:
return cljs$core$_swap_BANG___4.call(this,o,f,a,b);
case 5:
return cljs$core$_swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_swap_BANG___2;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$_swap_BANG___3;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$_swap_BANG___4;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = cljs$core$_swap_BANG___5;
return cljs$core$_swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj6584 = {};
return obj6584;
})();

cljs.core._vreset_BANG_ = (function cljs$core$_vreset_BANG_(o,new_value){
if((function (){var and__4008__auto__ = o;
if(and__4008__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__4008__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4664__auto__ = (((o == null))?null:o);
return (function (){var or__4020__auto__ = (cljs.core._vreset_BANG_[(function (){var G__6588 = x__4664__auto__;
return goog.typeOf(G__6588);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj6590 = {};
return obj6590;
})();

cljs.core._iterator = (function cljs$core$_iterator(coll){
if((function (){var and__4008__auto__ = coll;
if(and__4008__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__4008__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4664__auto__ = (((coll == null))?null:coll);
return (function (){var or__4020__auto__ = (cljs.core._iterator[(function (){var G__6594 = x__4664__auto__;
return goog.typeOf(G__6594);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._iterator["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function cljs$core$__GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
 * Support so that collections can implement toString without
 * loading all the printing machinery.
 */
cljs.core.pr_str_STAR_ = (function cljs$core$pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function cljs$core$int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__6597 = (4294967295);
var G__6598 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6597,G__6598) : Math.imul.call(null,G__6597,G__6598));
})() === (0))))){
cljs.core.imul = (function cljs$core$imul(a,b){
var G__6601 = a;
var G__6602 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6601,G__6602) : Math.imul.call(null,G__6601,G__6602));
});
} else {
cljs.core.imul = (function cljs$core$imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = ((3432918353) | (0));
cljs.core.m3_C2 = ((461845907) | (0));
cljs.core.m3_mix_K1 = (function cljs$core$m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function cljs$core$m3_mix_H1(h1,k1){
return ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));
});
cljs.core.m3_fmix = (function cljs$core$m3_fmix(h1,len){
var h1__$1 = (h1 | (0));
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,((2246822507) | (0)));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,((3266489909) | (0)));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function cljs$core$m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function cljs$core$m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__6603 = (i + (2));
var G__6604 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__6603;
h1 = G__6604;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj6606 = {};
return obj6606;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function cljs$core$hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__6607 = (i + (1));
var G__6608 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__6607;
hash = G__6608;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function cljs$core$add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function cljs$core$hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj6612 = {};
return obj6612;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
/**
 * Returns the hash code of its argument. Note this is the hash code
 * consistent with =.
 */
cljs.core.hash = (function cljs$core$hash(o){
if((function (){var G__6615 = o;
if(G__6615){
var bit__4694__auto__ = (G__6615.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4694__auto__) || (G__6615.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__6616 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6616) : Math.floor.call(null,G__6616));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function cljs$core$hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
/**
 * Evaluates x and tests if it is an instance of the type
 * c. Returns true or false
 */
cljs.core.instance_QMARK_ = (function cljs$core$instance_QMARK_(t,o){
return (o instanceof t);
});
/**
 * Return true if x is a Symbol
 */
cljs.core.symbol_QMARK_ = (function cljs$core$symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function cljs$core$hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function cljs$core$compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__4008__auto__ = cljs.core.not(a.ns);
if(and__4008__auto__){
return b.ns;
} else {
return and__4008__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__6623 = a.ns;
var G__6624 = b.ns;
return goog.array.defaultCompare(G__6623,G__6624);
})();
if(((0) === nsc)){
var G__6625 = a.name;
var G__6626 = b.name;
return goog.array.defaultCompare(G__6625,G__6626);
} else {
return nsc;
}
}
} else {
var G__6627 = a.name;
var G__6628 = b.name;
return goog.array.defaultCompare(G__6627,G__6628);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4441__auto__ = self__._hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__6630 = null;
var G__6630__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__6630__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__6630 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__6630__2.call(this,self__,coll);
case 3:
return G__6630__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6630.cljs$core$IFn$_invoke$arity$2 = G__6630__2;
G__6630.cljs$core$IFn$_invoke$arity$3 = G__6630__3;
return G__6630;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args6629){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6629)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function cljs$core$__GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var cljs$core$symbol = null;
var cljs$core$symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return cljs$core$symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var cljs$core$symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
cljs$core$symbol = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$symbol__1.call(this,ns);
case 2:
return cljs$core$symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$symbol.cljs$core$IFn$_invoke$arity$1 = cljs$core$symbol__1;
cljs$core$symbol.cljs$core$IFn$_invoke$arity$2 = cljs$core$symbol__2;
return cljs$core$symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__6678 = null;
var G__6678__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__6678__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__6678__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__6678__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__6678__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__6678__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__6678__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__6678__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__6678__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__6678__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__6678__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__6678__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__6678__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__6678__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__6678__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__6678__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__6678__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__6678__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__6678__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__6678__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__6678__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__6678__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6634 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6635 = a;
var G__6636 = b;
var G__6637 = c;
var G__6638 = d;
var G__6639 = e;
var G__6640 = f;
var G__6641 = g;
var G__6642 = h;
var G__6643 = i;
var G__6644 = j;
var G__6645 = k;
var G__6646 = l;
var G__6647 = m;
var G__6648 = n;
var G__6649 = o;
var G__6650 = p;
var G__6651 = q;
var G__6652 = r;
var G__6653 = s;
var G__6654 = t;
var G__6655 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6634,G__6635,G__6636,G__6637,G__6638,G__6639,G__6640,G__6641,G__6642,G__6643,G__6644,G__6645,G__6646,G__6647,G__6648,G__6649,G__6650,G__6651,G__6652,G__6653,G__6654,G__6655) : cljs.core.apply.call(null,G__6634,G__6635,G__6636,G__6637,G__6638,G__6639,G__6640,G__6641,G__6642,G__6643,G__6644,G__6645,G__6646,G__6647,G__6648,G__6649,G__6650,G__6651,G__6652,G__6653,G__6654,G__6655));
});
G__6678 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6678__1.call(this,self__);
case 2:
return G__6678__2.call(this,self__,a);
case 3:
return G__6678__3.call(this,self__,a,b);
case 4:
return G__6678__4.call(this,self__,a,b,c);
case 5:
return G__6678__5.call(this,self__,a,b,c,d);
case 6:
return G__6678__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6678__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6678__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6678__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6678__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6678__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6678__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6678__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6678__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6678__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6678__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6678__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6678__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6678__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6678__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6678__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6678__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6678.cljs$core$IFn$_invoke$arity$1 = G__6678__1;
G__6678.cljs$core$IFn$_invoke$arity$2 = G__6678__2;
G__6678.cljs$core$IFn$_invoke$arity$3 = G__6678__3;
G__6678.cljs$core$IFn$_invoke$arity$4 = G__6678__4;
G__6678.cljs$core$IFn$_invoke$arity$5 = G__6678__5;
G__6678.cljs$core$IFn$_invoke$arity$6 = G__6678__6;
G__6678.cljs$core$IFn$_invoke$arity$7 = G__6678__7;
G__6678.cljs$core$IFn$_invoke$arity$8 = G__6678__8;
G__6678.cljs$core$IFn$_invoke$arity$9 = G__6678__9;
G__6678.cljs$core$IFn$_invoke$arity$10 = G__6678__10;
G__6678.cljs$core$IFn$_invoke$arity$11 = G__6678__11;
G__6678.cljs$core$IFn$_invoke$arity$12 = G__6678__12;
G__6678.cljs$core$IFn$_invoke$arity$13 = G__6678__13;
G__6678.cljs$core$IFn$_invoke$arity$14 = G__6678__14;
G__6678.cljs$core$IFn$_invoke$arity$15 = G__6678__15;
G__6678.cljs$core$IFn$_invoke$arity$16 = G__6678__16;
G__6678.cljs$core$IFn$_invoke$arity$17 = G__6678__17;
G__6678.cljs$core$IFn$_invoke$arity$18 = G__6678__18;
G__6678.cljs$core$IFn$_invoke$arity$19 = G__6678__19;
G__6678.cljs$core$IFn$_invoke$arity$20 = G__6678__20;
G__6678.cljs$core$IFn$_invoke$arity$21 = G__6678__21;
G__6678.cljs$core$IFn$_invoke$arity$22 = G__6678__22;
return G__6678;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args6633){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6633)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__6656 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6657 = a;
var G__6658 = b;
var G__6659 = c;
var G__6660 = d;
var G__6661 = e;
var G__6662 = f;
var G__6663 = g;
var G__6664 = h;
var G__6665 = i;
var G__6666 = j;
var G__6667 = k;
var G__6668 = l;
var G__6669 = m;
var G__6670 = n;
var G__6671 = o;
var G__6672 = p;
var G__6673 = q;
var G__6674 = r;
var G__6675 = s;
var G__6676 = t;
var G__6677 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6656,G__6657,G__6658,G__6659,G__6660,G__6661,G__6662,G__6663,G__6664,G__6665,G__6666,G__6667,G__6668,G__6669,G__6670,G__6671,G__6672,G__6673,G__6674,G__6675,G__6676,G__6677) : cljs.core.apply.call(null,G__6656,G__6657,G__6658,G__6659,G__6660,G__6661,G__6662,G__6663,G__6664,G__6665,G__6666,G__6667,G__6668,G__6669,G__6670,G__6671,G__6672,G__6673,G__6674,G__6675,G__6676,G__6677));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function cljs$core$__GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



/**
 * Return true if x implements IIterable protocol.
 */
cljs.core.iterable_QMARK_ = (function cljs$core$iterable_QMARK_(x){
var G__6680 = x;
if(G__6680){
var bit__4701__auto__ = null;
if(cljs.core.truth_((function (){var or__4020__auto__ = bit__4701__auto__;
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return G__6680.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__6680.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6680);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6680);
}
});
/**
 * Clone the supplied value which must implement ICloneable.
 */
cljs.core.clone = (function cljs$core$clone(value){
return cljs.core._clone(value);
});
/**
 * Return true if x implements ICloneable protocol.
 */
cljs.core.cloneable_QMARK_ = (function cljs$core$cloneable_QMARK_(value){
var G__6682 = value;
if(G__6682){
var bit__4701__auto__ = (G__6682.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4701__auto__) || (G__6682.cljs$core$ICloneable$)){
return true;
} else {
if((!G__6682.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6682);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6682);
}
});
/**
 * Returns a seq on the collection. If the collection is
 * empty, returns nil.  (seq nil) returns nil. seq also works on
 * Strings.
 */
cljs.core.seq = (function cljs$core$seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6684 = coll;
if(G__6684){
var bit__4694__auto__ = (G__6684.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4694__auto__) || (G__6684.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
 * Returns the first item in the collection. Calls seq on its
 * argument. If coll is nil, returns nil.
 */
cljs.core.first = (function cljs$core$first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6686 = coll;
if(G__6686){
var bit__4694__auto__ = (G__6686.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4694__auto__) || (G__6686.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
 * Returns a possibly empty seq of the items after the first. Calls seq on its
 * argument.
 */
cljs.core.rest = (function cljs$core$rest(coll){
if(!((coll == null))){
if((function (){var G__6688 = coll;
if(G__6688){
var bit__4694__auto__ = (G__6688.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4694__auto__) || (G__6688.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
 * Returns a seq of the items after the first. Calls seq on its
 * argument.  If there are no more items, returns nil
 */
cljs.core.next = (function cljs$core$next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6690 = coll;
if(G__6690){
var bit__4694__auto__ = (G__6690.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4694__auto__) || (G__6690.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
 * Equality. Returns true if x equals y, false if not. Compares
 * numbers and collections in a type-independent manner.  Clojure's immutable data
 * structures define -equiv (and thus =) as a value, not an identity,
 * comparison.
 * @param {...*} var_args
 */
cljs.core._EQ_ = (function() {
var cljs$core$_EQ_ = null;
var cljs$core$_EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var cljs$core$_EQ___3 = (function() { 
var G__6695__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__6696 = y;
var G__6697 = cljs.core.first(more);
var G__6698 = cljs.core.next(more);
x = G__6696;
y = G__6697;
more = G__6698;
continue;
} else {
return cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6695 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6699__i = 0, G__6699__a = new Array(arguments.length -  2);
while (G__6699__i < G__6699__a.length) {G__6699__a[G__6699__i] = arguments[G__6699__i + 2]; ++G__6699__i;}
  more = new cljs.core.IndexedSeq(G__6699__a,0);
} 
return G__6695__delegate.call(this,x,y,more);};
G__6695.cljs$lang$maxFixedArity = 2;
G__6695.cljs$lang$applyTo = (function (arglist__6700){
var x = cljs.core.first(arglist__6700);
arglist__6700 = cljs.core.next(arglist__6700);
var y = cljs.core.first(arglist__6700);
var more = cljs.core.rest(arglist__6700);
return G__6695__delegate(x,y,more);
});
G__6695.cljs$core$IFn$_invoke$arity$variadic = G__6695__delegate;
return G__6695;
})()
;
cljs$core$_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ___1.call(this,x);
case 2:
return cljs$core$_EQ___2.call(this,x,y);
default:
var G__6701 = null;
if (arguments.length > 2) {
var G__6702__i = 0, G__6702__a = new Array(arguments.length -  2);
while (G__6702__i < G__6702__a.length) {G__6702__a[G__6702__i] = arguments[G__6702__i + 2]; ++G__6702__i;}
G__6701 = new cljs.core.IndexedSeq(G__6702__a,0);
}
return cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6701);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ_.cljs$lang$applyTo = cljs$core$_EQ___3.cljs$lang$applyTo;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ___1;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ___2;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function cljs$core$__GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

/**
 * EXPERIMENTAL: Return a ES2015 compatible iterator for coll.
 */
cljs.core.es6_iterator = (function cljs$core$es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__6703 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__6703) : cljs.core.es6_iterator_seq.call(null,G__6703));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function cljs$core$__GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

/**
 * EXPERIMENTAL: Given an ES2015 compatible iterator return a seq.
 */
cljs.core.es6_iterator_seq = (function cljs$core$es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
 * Mix final collection hash for ordered or unordered collections.
 * hash-basis is the combined collection hash, count is the number
 * of elements included in the basis. Note this is the hash code
 * consistent with =, different from .hashCode.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.mix_collection_hash = (function cljs$core$mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
 * Returns the hash code, consistent with =, for an external ordered
 * collection implementing Iterable.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_ordered_coll = (function cljs$core$hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6704 = (n + (1));
var G__6705 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6706 = cljs.core.next(coll__$1);
n = G__6704;
hash_code = G__6705;
coll__$1 = G__6706;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
 * Returns the hash code, consistent with =, for an external unordered
 * collection implementing Iterable. For maps, the iterator should
 * return map entries whose hash is computed as
 * (hash-ordered-coll [k v]).
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_unordered_coll = (function cljs$core$hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6707 = (n + (1));
var G__6708 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6709 = cljs.core.next(coll__$1);
n = G__6707;
hash_code = G__6708;
coll__$1 = G__6709;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__6710 = o;
return goog.getUid(G__6710);
}));
/**
 * Returns a number one greater than num.
 */
cljs.core.inc = (function cljs$core$inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function cljs$core$__GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
 * Wraps x in a way such that a reduce will terminate with the value x
 */
cljs.core.reduced = (function cljs$core$reduced(x){
return (new cljs.core.Reduced(x));
});
/**
 * Returns true if x is the result of a call to reduced
 */
cljs.core.reduced_QMARK_ = (function cljs$core$reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
 * If x is already reduced?, returns it, else returns (reduced x)
 */
cljs.core.ensure_reduced = (function cljs$core$ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
 * If x is reduced?, returns (deref x), else returns x
 */
cljs.core.unreduced = (function cljs$core$unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__6712 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6712) : cljs.core.deref.call(null,G__6712));
} else {
return x;
}
});
/**
 * Also reader macro: @var/@atom/@delay. Returns the
 * most-recently-committed value of ref. When applied to a var
 * or atom, returns its current state. When applied to a delay, forces
 * it if not already forced. See also - realized?.
 */
cljs.core.deref = (function cljs$core$deref(o){
return cljs.core._deref(o);
});
/**
 * Accepts any collection which satisfies the ICount and IIndexed protocols and
 * reduces them without incurring seq initialization
 */
cljs.core.ci_reduce = (function() {
var cljs$core$ci_reduce = null;
var cljs$core$ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6719 = val;
var G__6720 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6719,G__6720) : f.call(null,G__6719,G__6720));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6725 = nval;
var G__6726 = (n + (1));
val = G__6725;
n = G__6726;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6721 = val__$1;
var G__6722 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6721,G__6722) : f.call(null,G__6721,G__6722));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6727 = nval;
var G__6728 = (n + (1));
val__$1 = G__6727;
n = G__6728;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6723 = val__$1;
var G__6724 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6723,G__6724) : f.call(null,G__6723,G__6724));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6729 = nval;
var G__6730 = (n + (1));
val__$1 = G__6729;
n = G__6730;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$ci_reduce__2.call(this,cicoll,f);
case 3:
return cljs$core$ci_reduce__3.call(this,cicoll,f,val);
case 4:
return cljs$core$ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$ci_reduce__2;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$ci_reduce__3;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$ci_reduce__4;
return cljs$core$ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var cljs$core$array_reduce = null;
var cljs$core$array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6737 = val;
var G__6738 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6737,G__6738) : f.call(null,G__6737,G__6738));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6743 = nval;
var G__6744 = (n + (1));
val = G__6743;
n = G__6744;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6739 = val__$1;
var G__6740 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6739,G__6740) : f.call(null,G__6739,G__6740));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6745 = nval;
var G__6746 = (n + (1));
val__$1 = G__6745;
n = G__6746;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6741 = val__$1;
var G__6742 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6741,G__6742) : f.call(null,G__6741,G__6742));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6747 = nval;
var G__6748 = (n + (1));
val__$1 = G__6747;
n = G__6748;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$array_reduce__2.call(this,arr,f);
case 3:
return cljs$core$array_reduce__3.call(this,arr,f,val);
case 4:
return cljs$core$array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_reduce__2;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_reduce__3;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$array_reduce__4;
return cljs$core$array_reduce;
})()
;



/**
 * Returns true if coll implements count in constant time
 */
cljs.core.counted_QMARK_ = (function cljs$core$counted_QMARK_(x){
var G__6750 = x;
if(G__6750){
var bit__4701__auto__ = (G__6750.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4701__auto__) || (G__6750.cljs$core$ICounted$)){
return true;
} else {
if((!G__6750.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6750);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6750);
}
});
/**
 * Returns true if coll implements nth in constant time
 */
cljs.core.indexed_QMARK_ = (function cljs$core$indexed_QMARK_(x){
var G__6752 = x;
if(G__6752){
var bit__4701__auto__ = (G__6752.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4701__auto__) || (G__6752.cljs$core$IIndexed$)){
return true;
} else {
if((!G__6752.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6752);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6752);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function cljs$core$__GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6753 = coll__$1;
var G__6754 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6753,G__6754) : cljs.core.equiv_sequential.call(null,G__6753,G__6754));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6755 = o;
var G__6756 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6755,G__6756) : cljs.core.cons.call(null,G__6755,G__6756));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function cljs$core$__GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
/**
 * Create seq from a primitive JavaScript Array-like.
 */
cljs.core.prim_seq = (function() {
var cljs$core$prim_seq = null;
var cljs$core$prim_seq__1 = (function (prim){
return cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var cljs$core$prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
cljs$core$prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return cljs$core$prim_seq__1.call(this,prim);
case 2:
return cljs$core$prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$prim_seq__1;
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$prim_seq__2;
return cljs$core$prim_seq;
})()
;
/**
 * Create a seq from a JavaScript array.
 */
cljs.core.array_seq = (function() {
var cljs$core$array_seq = null;
var cljs$core$array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var cljs$core$array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
cljs$core$array_seq = function(array,i){
switch(arguments.length){
case 1:
return cljs$core$array_seq__1.call(this,array);
case 2:
return cljs$core$array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_seq__1;
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_seq__2;
return cljs$core$array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6759 = coll__$1;
var G__6760 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6759,G__6760) : cljs.core.equiv_sequential.call(null,G__6759,G__6760));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__6761 = cljs.core.List.EMPTY;
var G__6762 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__6761,G__6762) : cljs.core.with_meta.call(null,G__6761,G__6762));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__6763 = f;
var G__6764 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__6763,G__6764) : cljs.core.seq_reduce.call(null,G__6763,G__6764));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__6765 = f;
var G__6766 = start;
var G__6767 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__6765,G__6766,G__6767) : cljs.core.seq_reduce.call(null,G__6765,G__6766,G__6767));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6768 = o;
var G__6769 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6768,G__6769) : cljs.core.cons.call(null,G__6768,G__6769));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function cljs$core$__GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
/**
 * Same as (first (next x))
 */
cljs.core.second = (function cljs$core$second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (first (first x))
 */
cljs.core.ffirst = (function cljs$core$ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
 * Same as (next (first x))
 */
cljs.core.nfirst = (function cljs$core$nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
 * Same as (first (next x))
 */
cljs.core.fnext = (function cljs$core$fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (next (next x))
 */
cljs.core.nnext = (function cljs$core$nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
 * Return the last item in coll, in linear time
 */
cljs.core.last = (function cljs$core$last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__6770 = sn;
s = G__6770;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
 * conj[oin]. Returns a new collection with the xs
 * 'added'. (conj nil item) returns (item).  The 'addition' may
 * happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj = (function() {
var cljs$core$conj = null;
var cljs$core$conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var cljs$core$conj__1 = (function (coll){
return coll;
});
var cljs$core$conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var cljs$core$conj__3 = (function() { 
var G__6775__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__6776 = cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__6777 = cljs.core.first(xs);
var G__6778 = cljs.core.next(xs);
coll = G__6776;
x = G__6777;
xs = G__6778;
continue;
} else {
return cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__6775 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__6779__i = 0, G__6779__a = new Array(arguments.length -  2);
while (G__6779__i < G__6779__a.length) {G__6779__a[G__6779__i] = arguments[G__6779__i + 2]; ++G__6779__i;}
  xs = new cljs.core.IndexedSeq(G__6779__a,0);
} 
return G__6775__delegate.call(this,coll,x,xs);};
G__6775.cljs$lang$maxFixedArity = 2;
G__6775.cljs$lang$applyTo = (function (arglist__6780){
var coll = cljs.core.first(arglist__6780);
arglist__6780 = cljs.core.next(arglist__6780);
var x = cljs.core.first(arglist__6780);
var xs = cljs.core.rest(arglist__6780);
return G__6775__delegate(coll,x,xs);
});
G__6775.cljs$core$IFn$_invoke$arity$variadic = G__6775__delegate;
return G__6775;
})()
;
cljs$core$conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj__0.call(this);
case 1:
return cljs$core$conj__1.call(this,coll);
case 2:
return cljs$core$conj__2.call(this,coll,x);
default:
var G__6781 = null;
if (arguments.length > 2) {
var G__6782__i = 0, G__6782__a = new Array(arguments.length -  2);
while (G__6782__i < G__6782__a.length) {G__6782__a[G__6782__i] = arguments[G__6782__i + 2]; ++G__6782__i;}
G__6781 = new cljs.core.IndexedSeq(G__6782__a,0);
}
return cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__6781);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj.cljs$lang$maxFixedArity = 2;
cljs$core$conj.cljs$lang$applyTo = cljs$core$conj__3.cljs$lang$applyTo;
cljs$core$conj.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj__0;
cljs$core$conj.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj__1;
cljs$core$conj.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj__2;
cljs$core$conj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj;
})()
;
/**
 * Returns an empty collection of the same category as coll, or nil
 */
cljs.core.empty = (function cljs$core$empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function cljs$core$accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__6783 = cljs.core.next(s);
var G__6784 = (acc + (1));
s = G__6783;
acc = G__6784;
continue;
}
break;
}
});
/**
 * Returns the number of items in the collection. (count nil) returns
 * 0.  Also works on strings, arrays, and Maps
 */
cljs.core.count = (function cljs$core$count(coll){
if(!((coll == null))){
if((function (){var G__6786 = coll;
if(G__6786){
var bit__4694__auto__ = (G__6786.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4694__auto__) || (G__6786.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var cljs$core$linear_traversal_nth = null;
var cljs$core$linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__6787 = cljs.core.next(coll);
var G__6788 = (n - (1));
coll = G__6787;
n = G__6788;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var cljs$core$linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__6789 = cljs.core.next(coll);
var G__6790 = (n - (1));
var G__6791 = not_found;
coll = G__6789;
n = G__6790;
not_found = G__6791;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
cljs$core$linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$linear_traversal_nth__2.call(this,coll,n);
case 3:
return cljs$core$linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$linear_traversal_nth__2;
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$linear_traversal_nth__3;
return cljs$core$linear_traversal_nth;
})()
;
/**
 * Returns the value at the index. get returns nil if index out of
 * bounds, nth throws an exception unless not-found is supplied.  nth
 * also works for strings, arrays, regex Matchers and Lists, and,
 * in O(n) time, for sequences.
 */
cljs.core.nth = (function() {
var cljs$core$nth = null;
var cljs$core$nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__6796 = coll;
if(G__6796){
var bit__4694__auto__ = (G__6796.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4694__auto__) || (G__6796.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6797 = coll;
if(G__6797){
var bit__4701__auto__ = (G__6797.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4701__auto__) || (G__6797.cljs$core$ISeq$)){
return true;
} else {
if((!G__6797.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6797);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6797);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var cljs$core$nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__6798 = coll;
if(G__6798){
var bit__4694__auto__ = (G__6798.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4694__auto__) || (G__6798.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6799 = coll;
if(G__6799){
var bit__4701__auto__ = (G__6799.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4701__auto__) || (G__6799.cljs$core$ISeq$)){
return true;
} else {
if((!G__6799.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6799);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6799);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
cljs$core$nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$nth__2.call(this,coll,n);
case 3:
return cljs$core$nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$nth__2;
cljs$core$nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$nth__3;
return cljs$core$nth;
})()
;
/**
 * Returns the nth rest of coll, coll when n is 0.
 */
cljs.core.nthrest = (function cljs$core$nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__6800 = (n__$1 - (1));
var G__6801 = cljs.core.rest(xs);
n__$1 = G__6800;
xs = G__6801;
continue;
} else {
return xs;
}
break;
}
});
/**
 * Returns the value mapped to key, not-found or nil if key not present.
 */
cljs.core.get = (function() {
var cljs$core$get = null;
var cljs$core$get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__6804 = o;
if(G__6804){
var bit__4694__auto__ = (G__6804.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4694__auto__) || (G__6804.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var cljs$core$get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__6805 = o;
if(G__6805){
var bit__4694__auto__ = (G__6805.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4694__auto__) || (G__6805.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
cljs$core$get = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$get__2.call(this,o,k);
case 3:
return cljs$core$get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get.cljs$core$IFn$_invoke$arity$2 = cljs$core$get__2;
cljs$core$get.cljs$core$IFn$_invoke$arity$3 = cljs$core$get__3;
return cljs$core$get;
})()
;
/**
 * assoc[iate]. When applied to a map, returns a new map of the
 * same (hashed/sorted) type, that contains the mapping of key(s) to
 * val(s). When applied to a vector, returns a new vector that
 * contains val at index.
 * @param {...*} var_args
 */
cljs.core.assoc = (function() {
var cljs$core$assoc = null;
var cljs$core$assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var cljs$core$assoc__4 = (function() { 
var G__6809__delegate = function (coll,k,v,kvs){
while(true){
var ret = cljs$core$assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__6810 = ret;
var G__6811 = cljs.core.first(kvs);
var G__6812 = cljs.core.second(kvs);
var G__6813 = cljs.core.nnext(kvs);
coll = G__6810;
k = G__6811;
v = G__6812;
kvs = G__6813;
continue;
} else {
return ret;
}
break;
}
};
var G__6809 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__6814__i = 0, G__6814__a = new Array(arguments.length -  3);
while (G__6814__i < G__6814__a.length) {G__6814__a[G__6814__i] = arguments[G__6814__i + 3]; ++G__6814__i;}
  kvs = new cljs.core.IndexedSeq(G__6814__a,0);
} 
return G__6809__delegate.call(this,coll,k,v,kvs);};
G__6809.cljs$lang$maxFixedArity = 3;
G__6809.cljs$lang$applyTo = (function (arglist__6815){
var coll = cljs.core.first(arglist__6815);
arglist__6815 = cljs.core.next(arglist__6815);
var k = cljs.core.first(arglist__6815);
arglist__6815 = cljs.core.next(arglist__6815);
var v = cljs.core.first(arglist__6815);
var kvs = cljs.core.rest(arglist__6815);
return G__6809__delegate(coll,k,v,kvs);
});
G__6809.cljs$core$IFn$_invoke$arity$variadic = G__6809__delegate;
return G__6809;
})()
;
cljs$core$assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc__3.call(this,coll,k,v);
default:
var G__6816 = null;
if (arguments.length > 3) {
var G__6817__i = 0, G__6817__a = new Array(arguments.length -  3);
while (G__6817__i < G__6817__a.length) {G__6817__a[G__6817__i] = arguments[G__6817__i + 3]; ++G__6817__i;}
G__6816 = new cljs.core.IndexedSeq(G__6817__a,0);
}
return cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__6816);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc.cljs$lang$maxFixedArity = 3;
cljs$core$assoc.cljs$lang$applyTo = cljs$core$assoc__4.cljs$lang$applyTo;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc__3;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc;
})()
;
/**
 * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
 * that does not contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc = (function() {
var cljs$core$dissoc = null;
var cljs$core$dissoc__1 = (function (coll){
return coll;
});
var cljs$core$dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var cljs$core$dissoc__3 = (function() { 
var G__6820__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__6821 = ret;
var G__6822 = cljs.core.first(ks);
var G__6823 = cljs.core.next(ks);
coll = G__6821;
k = G__6822;
ks = G__6823;
continue;
} else {
return ret;
}
}
break;
}
};
var G__6820 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6824__i = 0, G__6824__a = new Array(arguments.length -  2);
while (G__6824__i < G__6824__a.length) {G__6824__a[G__6824__i] = arguments[G__6824__i + 2]; ++G__6824__i;}
  ks = new cljs.core.IndexedSeq(G__6824__a,0);
} 
return G__6820__delegate.call(this,coll,k,ks);};
G__6820.cljs$lang$maxFixedArity = 2;
G__6820.cljs$lang$applyTo = (function (arglist__6825){
var coll = cljs.core.first(arglist__6825);
arglist__6825 = cljs.core.next(arglist__6825);
var k = cljs.core.first(arglist__6825);
var ks = cljs.core.rest(arglist__6825);
return G__6820__delegate(coll,k,ks);
});
G__6820.cljs$core$IFn$_invoke$arity$variadic = G__6820__delegate;
return G__6820;
})()
;
cljs$core$dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$dissoc__1.call(this,coll);
case 2:
return cljs$core$dissoc__2.call(this,coll,k);
default:
var G__6826 = null;
if (arguments.length > 2) {
var G__6827__i = 0, G__6827__a = new Array(arguments.length -  2);
while (G__6827__i < G__6827__a.length) {G__6827__a[G__6827__i] = arguments[G__6827__i + 2]; ++G__6827__i;}
G__6826 = new cljs.core.IndexedSeq(G__6827__a,0);
}
return cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__6826);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc.cljs$lang$applyTo = cljs$core$dissoc__3.cljs$lang$applyTo;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$1 = cljs$core$dissoc__1;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc__2;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc;
})()
;
/**
 * Return true if f is a JavaScript function or satisfies the Fn protocol.
 */
cljs.core.fn_QMARK_ = (function cljs$core$fn_QMARK_(f){
var or__4020__auto__ = (function (){var G__6832 = f;
return goog.isFunction(G__6832);
})();
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
var G__6833 = f;
if(G__6833){
var bit__4701__auto__ = null;
if(cljs.core.truth_((function (){var or__4020__auto____$1 = bit__4701__auto__;
if(cljs.core.truth_(or__4020__auto____$1)){
return or__4020__auto____$1;
} else {
return G__6833.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__6833.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6833);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6833);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__7299 = null;
var G__7299__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__7299__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6835 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6835) : self__.afn.call(null,G__6835));
});
var G__7299__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6836 = a;
var G__6837 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6836,G__6837) : self__.afn.call(null,G__6836,G__6837));
});
var G__7299__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6838 = a;
var G__6839 = b;
var G__6840 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6838,G__6839,G__6840) : self__.afn.call(null,G__6838,G__6839,G__6840));
});
var G__7299__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6841 = a;
var G__6842 = b;
var G__6843 = c;
var G__6844 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6841,G__6842,G__6843,G__6844) : self__.afn.call(null,G__6841,G__6842,G__6843,G__6844));
});
var G__7299__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6845 = a;
var G__6846 = b;
var G__6847 = c;
var G__6848 = d;
var G__6849 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6845,G__6846,G__6847,G__6848,G__6849) : self__.afn.call(null,G__6845,G__6846,G__6847,G__6848,G__6849));
});
var G__7299__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6850 = a;
var G__6851 = b;
var G__6852 = c;
var G__6853 = d;
var G__6854 = e;
var G__6855 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6850,G__6851,G__6852,G__6853,G__6854,G__6855) : self__.afn.call(null,G__6850,G__6851,G__6852,G__6853,G__6854,G__6855));
});
var G__7299__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6856 = a;
var G__6857 = b;
var G__6858 = c;
var G__6859 = d;
var G__6860 = e;
var G__6861 = f;
var G__6862 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6856,G__6857,G__6858,G__6859,G__6860,G__6861,G__6862) : self__.afn.call(null,G__6856,G__6857,G__6858,G__6859,G__6860,G__6861,G__6862));
});
var G__7299__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6863 = a;
var G__6864 = b;
var G__6865 = c;
var G__6866 = d;
var G__6867 = e;
var G__6868 = f;
var G__6869 = g;
var G__6870 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6863,G__6864,G__6865,G__6866,G__6867,G__6868,G__6869,G__6870) : self__.afn.call(null,G__6863,G__6864,G__6865,G__6866,G__6867,G__6868,G__6869,G__6870));
});
var G__7299__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6871 = a;
var G__6872 = b;
var G__6873 = c;
var G__6874 = d;
var G__6875 = e;
var G__6876 = f;
var G__6877 = g;
var G__6878 = h;
var G__6879 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6871,G__6872,G__6873,G__6874,G__6875,G__6876,G__6877,G__6878,G__6879) : self__.afn.call(null,G__6871,G__6872,G__6873,G__6874,G__6875,G__6876,G__6877,G__6878,G__6879));
});
var G__7299__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6880 = a;
var G__6881 = b;
var G__6882 = c;
var G__6883 = d;
var G__6884 = e;
var G__6885 = f;
var G__6886 = g;
var G__6887 = h;
var G__6888 = i;
var G__6889 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6880,G__6881,G__6882,G__6883,G__6884,G__6885,G__6886,G__6887,G__6888,G__6889) : self__.afn.call(null,G__6880,G__6881,G__6882,G__6883,G__6884,G__6885,G__6886,G__6887,G__6888,G__6889));
});
var G__7299__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6890 = a;
var G__6891 = b;
var G__6892 = c;
var G__6893 = d;
var G__6894 = e;
var G__6895 = f;
var G__6896 = g;
var G__6897 = h;
var G__6898 = i;
var G__6899 = j;
var G__6900 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6890,G__6891,G__6892,G__6893,G__6894,G__6895,G__6896,G__6897,G__6898,G__6899,G__6900) : self__.afn.call(null,G__6890,G__6891,G__6892,G__6893,G__6894,G__6895,G__6896,G__6897,G__6898,G__6899,G__6900));
});
var G__7299__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6901 = a;
var G__6902 = b;
var G__6903 = c;
var G__6904 = d;
var G__6905 = e;
var G__6906 = f;
var G__6907 = g;
var G__6908 = h;
var G__6909 = i;
var G__6910 = j;
var G__6911 = k;
var G__6912 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6901,G__6902,G__6903,G__6904,G__6905,G__6906,G__6907,G__6908,G__6909,G__6910,G__6911,G__6912) : self__.afn.call(null,G__6901,G__6902,G__6903,G__6904,G__6905,G__6906,G__6907,G__6908,G__6909,G__6910,G__6911,G__6912));
});
var G__7299__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6913 = a;
var G__6914 = b;
var G__6915 = c;
var G__6916 = d;
var G__6917 = e;
var G__6918 = f;
var G__6919 = g;
var G__6920 = h;
var G__6921 = i;
var G__6922 = j;
var G__6923 = k;
var G__6924 = l;
var G__6925 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6913,G__6914,G__6915,G__6916,G__6917,G__6918,G__6919,G__6920,G__6921,G__6922,G__6923,G__6924,G__6925) : self__.afn.call(null,G__6913,G__6914,G__6915,G__6916,G__6917,G__6918,G__6919,G__6920,G__6921,G__6922,G__6923,G__6924,G__6925));
});
var G__7299__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6926 = a;
var G__6927 = b;
var G__6928 = c;
var G__6929 = d;
var G__6930 = e;
var G__6931 = f;
var G__6932 = g;
var G__6933 = h;
var G__6934 = i;
var G__6935 = j;
var G__6936 = k;
var G__6937 = l;
var G__6938 = m;
var G__6939 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6926,G__6927,G__6928,G__6929,G__6930,G__6931,G__6932,G__6933,G__6934,G__6935,G__6936,G__6937,G__6938,G__6939) : self__.afn.call(null,G__6926,G__6927,G__6928,G__6929,G__6930,G__6931,G__6932,G__6933,G__6934,G__6935,G__6936,G__6937,G__6938,G__6939));
});
var G__7299__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6940 = a;
var G__6941 = b;
var G__6942 = c;
var G__6943 = d;
var G__6944 = e;
var G__6945 = f;
var G__6946 = g;
var G__6947 = h;
var G__6948 = i;
var G__6949 = j;
var G__6950 = k;
var G__6951 = l;
var G__6952 = m;
var G__6953 = n;
var G__6954 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6940,G__6941,G__6942,G__6943,G__6944,G__6945,G__6946,G__6947,G__6948,G__6949,G__6950,G__6951,G__6952,G__6953,G__6954) : self__.afn.call(null,G__6940,G__6941,G__6942,G__6943,G__6944,G__6945,G__6946,G__6947,G__6948,G__6949,G__6950,G__6951,G__6952,G__6953,G__6954));
});
var G__7299__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6955 = a;
var G__6956 = b;
var G__6957 = c;
var G__6958 = d;
var G__6959 = e;
var G__6960 = f;
var G__6961 = g;
var G__6962 = h;
var G__6963 = i;
var G__6964 = j;
var G__6965 = k;
var G__6966 = l;
var G__6967 = m;
var G__6968 = n;
var G__6969 = o;
var G__6970 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6955,G__6956,G__6957,G__6958,G__6959,G__6960,G__6961,G__6962,G__6963,G__6964,G__6965,G__6966,G__6967,G__6968,G__6969,G__6970) : self__.afn.call(null,G__6955,G__6956,G__6957,G__6958,G__6959,G__6960,G__6961,G__6962,G__6963,G__6964,G__6965,G__6966,G__6967,G__6968,G__6969,G__6970));
});
var G__7299__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6971 = a;
var G__6972 = b;
var G__6973 = c;
var G__6974 = d;
var G__6975 = e;
var G__6976 = f;
var G__6977 = g;
var G__6978 = h;
var G__6979 = i;
var G__6980 = j;
var G__6981 = k;
var G__6982 = l;
var G__6983 = m;
var G__6984 = n;
var G__6985 = o;
var G__6986 = p;
var G__6987 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6971,G__6972,G__6973,G__6974,G__6975,G__6976,G__6977,G__6978,G__6979,G__6980,G__6981,G__6982,G__6983,G__6984,G__6985,G__6986,G__6987) : self__.afn.call(null,G__6971,G__6972,G__6973,G__6974,G__6975,G__6976,G__6977,G__6978,G__6979,G__6980,G__6981,G__6982,G__6983,G__6984,G__6985,G__6986,G__6987));
});
var G__7299__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6988 = a;
var G__6989 = b;
var G__6990 = c;
var G__6991 = d;
var G__6992 = e;
var G__6993 = f;
var G__6994 = g;
var G__6995 = h;
var G__6996 = i;
var G__6997 = j;
var G__6998 = k;
var G__6999 = l;
var G__7000 = m;
var G__7001 = n;
var G__7002 = o;
var G__7003 = p;
var G__7004 = q;
var G__7005 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6988,G__6989,G__6990,G__6991,G__6992,G__6993,G__6994,G__6995,G__6996,G__6997,G__6998,G__6999,G__7000,G__7001,G__7002,G__7003,G__7004,G__7005) : self__.afn.call(null,G__6988,G__6989,G__6990,G__6991,G__6992,G__6993,G__6994,G__6995,G__6996,G__6997,G__6998,G__6999,G__7000,G__7001,G__7002,G__7003,G__7004,G__7005));
});
var G__7299__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7006 = a;
var G__7007 = b;
var G__7008 = c;
var G__7009 = d;
var G__7010 = e;
var G__7011 = f;
var G__7012 = g;
var G__7013 = h;
var G__7014 = i;
var G__7015 = j;
var G__7016 = k;
var G__7017 = l;
var G__7018 = m;
var G__7019 = n;
var G__7020 = o;
var G__7021 = p;
var G__7022 = q;
var G__7023 = r;
var G__7024 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7006,G__7007,G__7008,G__7009,G__7010,G__7011,G__7012,G__7013,G__7014,G__7015,G__7016,G__7017,G__7018,G__7019,G__7020,G__7021,G__7022,G__7023,G__7024) : self__.afn.call(null,G__7006,G__7007,G__7008,G__7009,G__7010,G__7011,G__7012,G__7013,G__7014,G__7015,G__7016,G__7017,G__7018,G__7019,G__7020,G__7021,G__7022,G__7023,G__7024));
});
var G__7299__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7025 = a;
var G__7026 = b;
var G__7027 = c;
var G__7028 = d;
var G__7029 = e;
var G__7030 = f;
var G__7031 = g;
var G__7032 = h;
var G__7033 = i;
var G__7034 = j;
var G__7035 = k;
var G__7036 = l;
var G__7037 = m;
var G__7038 = n;
var G__7039 = o;
var G__7040 = p;
var G__7041 = q;
var G__7042 = r;
var G__7043 = s;
var G__7044 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7025,G__7026,G__7027,G__7028,G__7029,G__7030,G__7031,G__7032,G__7033,G__7034,G__7035,G__7036,G__7037,G__7038,G__7039,G__7040,G__7041,G__7042,G__7043,G__7044) : self__.afn.call(null,G__7025,G__7026,G__7027,G__7028,G__7029,G__7030,G__7031,G__7032,G__7033,G__7034,G__7035,G__7036,G__7037,G__7038,G__7039,G__7040,G__7041,G__7042,G__7043,G__7044));
});
var G__7299__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7045 = self__.afn;
var G__7046 = a;
var G__7047 = b;
var G__7048 = c;
var G__7049 = d;
var G__7050 = e;
var G__7051 = f;
var G__7052 = g;
var G__7053 = h;
var G__7054 = i;
var G__7055 = j;
var G__7056 = k;
var G__7057 = l;
var G__7058 = m;
var G__7059 = n;
var G__7060 = o;
var G__7061 = p;
var G__7062 = q;
var G__7063 = r;
var G__7064 = s;
var G__7065 = t;
var G__7066 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7045,G__7046,G__7047,G__7048,G__7049,G__7050,G__7051,G__7052,G__7053,G__7054,G__7055,G__7056,G__7057,G__7058,G__7059,G__7060,G__7061,G__7062,G__7063,G__7064,G__7065,G__7066) : cljs.core.apply.call(null,G__7045,G__7046,G__7047,G__7048,G__7049,G__7050,G__7051,G__7052,G__7053,G__7054,G__7055,G__7056,G__7057,G__7058,G__7059,G__7060,G__7061,G__7062,G__7063,G__7064,G__7065,G__7066));
});
G__7299 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__7299__1.call(this,self__);
case 2:
return G__7299__2.call(this,self__,a);
case 3:
return G__7299__3.call(this,self__,a,b);
case 4:
return G__7299__4.call(this,self__,a,b,c);
case 5:
return G__7299__5.call(this,self__,a,b,c,d);
case 6:
return G__7299__6.call(this,self__,a,b,c,d,e);
case 7:
return G__7299__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__7299__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__7299__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__7299__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__7299__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__7299__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__7299__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__7299__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__7299__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__7299__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__7299__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__7299__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__7299__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__7299__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__7299__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__7299__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7299.cljs$core$IFn$_invoke$arity$1 = G__7299__1;
G__7299.cljs$core$IFn$_invoke$arity$2 = G__7299__2;
G__7299.cljs$core$IFn$_invoke$arity$3 = G__7299__3;
G__7299.cljs$core$IFn$_invoke$arity$4 = G__7299__4;
G__7299.cljs$core$IFn$_invoke$arity$5 = G__7299__5;
G__7299.cljs$core$IFn$_invoke$arity$6 = G__7299__6;
G__7299.cljs$core$IFn$_invoke$arity$7 = G__7299__7;
G__7299.cljs$core$IFn$_invoke$arity$8 = G__7299__8;
G__7299.cljs$core$IFn$_invoke$arity$9 = G__7299__9;
G__7299.cljs$core$IFn$_invoke$arity$10 = G__7299__10;
G__7299.cljs$core$IFn$_invoke$arity$11 = G__7299__11;
G__7299.cljs$core$IFn$_invoke$arity$12 = G__7299__12;
G__7299.cljs$core$IFn$_invoke$arity$13 = G__7299__13;
G__7299.cljs$core$IFn$_invoke$arity$14 = G__7299__14;
G__7299.cljs$core$IFn$_invoke$arity$15 = G__7299__15;
G__7299.cljs$core$IFn$_invoke$arity$16 = G__7299__16;
G__7299.cljs$core$IFn$_invoke$arity$17 = G__7299__17;
G__7299.cljs$core$IFn$_invoke$arity$18 = G__7299__18;
G__7299.cljs$core$IFn$_invoke$arity$19 = G__7299__19;
G__7299.cljs$core$IFn$_invoke$arity$20 = G__7299__20;
G__7299.cljs$core$IFn$_invoke$arity$21 = G__7299__21;
G__7299.cljs$core$IFn$_invoke$arity$22 = G__7299__22;
return G__7299;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args6834){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6834)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__7067 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7067) : self__.afn.call(null,G__7067));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__7068 = a;
var G__7069 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7068,G__7069) : self__.afn.call(null,G__7068,G__7069));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__7070 = a;
var G__7071 = b;
var G__7072 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7070,G__7071,G__7072) : self__.afn.call(null,G__7070,G__7071,G__7072));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__7073 = a;
var G__7074 = b;
var G__7075 = c;
var G__7076 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7073,G__7074,G__7075,G__7076) : self__.afn.call(null,G__7073,G__7074,G__7075,G__7076));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__7077 = a;
var G__7078 = b;
var G__7079 = c;
var G__7080 = d;
var G__7081 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7077,G__7078,G__7079,G__7080,G__7081) : self__.afn.call(null,G__7077,G__7078,G__7079,G__7080,G__7081));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__7082 = a;
var G__7083 = b;
var G__7084 = c;
var G__7085 = d;
var G__7086 = e;
var G__7087 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7082,G__7083,G__7084,G__7085,G__7086,G__7087) : self__.afn.call(null,G__7082,G__7083,G__7084,G__7085,G__7086,G__7087));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__7088 = a;
var G__7089 = b;
var G__7090 = c;
var G__7091 = d;
var G__7092 = e;
var G__7093 = f;
var G__7094 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7088,G__7089,G__7090,G__7091,G__7092,G__7093,G__7094) : self__.afn.call(null,G__7088,G__7089,G__7090,G__7091,G__7092,G__7093,G__7094));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__7095 = a;
var G__7096 = b;
var G__7097 = c;
var G__7098 = d;
var G__7099 = e;
var G__7100 = f;
var G__7101 = g;
var G__7102 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7095,G__7096,G__7097,G__7098,G__7099,G__7100,G__7101,G__7102) : self__.afn.call(null,G__7095,G__7096,G__7097,G__7098,G__7099,G__7100,G__7101,G__7102));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__7103 = a;
var G__7104 = b;
var G__7105 = c;
var G__7106 = d;
var G__7107 = e;
var G__7108 = f;
var G__7109 = g;
var G__7110 = h;
var G__7111 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7103,G__7104,G__7105,G__7106,G__7107,G__7108,G__7109,G__7110,G__7111) : self__.afn.call(null,G__7103,G__7104,G__7105,G__7106,G__7107,G__7108,G__7109,G__7110,G__7111));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__7112 = a;
var G__7113 = b;
var G__7114 = c;
var G__7115 = d;
var G__7116 = e;
var G__7117 = f;
var G__7118 = g;
var G__7119 = h;
var G__7120 = i;
var G__7121 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7112,G__7113,G__7114,G__7115,G__7116,G__7117,G__7118,G__7119,G__7120,G__7121) : self__.afn.call(null,G__7112,G__7113,G__7114,G__7115,G__7116,G__7117,G__7118,G__7119,G__7120,G__7121));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__7122 = a;
var G__7123 = b;
var G__7124 = c;
var G__7125 = d;
var G__7126 = e;
var G__7127 = f;
var G__7128 = g;
var G__7129 = h;
var G__7130 = i;
var G__7131 = j;
var G__7132 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7122,G__7123,G__7124,G__7125,G__7126,G__7127,G__7128,G__7129,G__7130,G__7131,G__7132) : self__.afn.call(null,G__7122,G__7123,G__7124,G__7125,G__7126,G__7127,G__7128,G__7129,G__7130,G__7131,G__7132));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__7133 = a;
var G__7134 = b;
var G__7135 = c;
var G__7136 = d;
var G__7137 = e;
var G__7138 = f;
var G__7139 = g;
var G__7140 = h;
var G__7141 = i;
var G__7142 = j;
var G__7143 = k;
var G__7144 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7133,G__7134,G__7135,G__7136,G__7137,G__7138,G__7139,G__7140,G__7141,G__7142,G__7143,G__7144) : self__.afn.call(null,G__7133,G__7134,G__7135,G__7136,G__7137,G__7138,G__7139,G__7140,G__7141,G__7142,G__7143,G__7144));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__7145 = a;
var G__7146 = b;
var G__7147 = c;
var G__7148 = d;
var G__7149 = e;
var G__7150 = f;
var G__7151 = g;
var G__7152 = h;
var G__7153 = i;
var G__7154 = j;
var G__7155 = k;
var G__7156 = l;
var G__7157 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7145,G__7146,G__7147,G__7148,G__7149,G__7150,G__7151,G__7152,G__7153,G__7154,G__7155,G__7156,G__7157) : self__.afn.call(null,G__7145,G__7146,G__7147,G__7148,G__7149,G__7150,G__7151,G__7152,G__7153,G__7154,G__7155,G__7156,G__7157));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__7158 = a;
var G__7159 = b;
var G__7160 = c;
var G__7161 = d;
var G__7162 = e;
var G__7163 = f;
var G__7164 = g;
var G__7165 = h;
var G__7166 = i;
var G__7167 = j;
var G__7168 = k;
var G__7169 = l;
var G__7170 = m;
var G__7171 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7158,G__7159,G__7160,G__7161,G__7162,G__7163,G__7164,G__7165,G__7166,G__7167,G__7168,G__7169,G__7170,G__7171) : self__.afn.call(null,G__7158,G__7159,G__7160,G__7161,G__7162,G__7163,G__7164,G__7165,G__7166,G__7167,G__7168,G__7169,G__7170,G__7171));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__7172 = a;
var G__7173 = b;
var G__7174 = c;
var G__7175 = d;
var G__7176 = e;
var G__7177 = f;
var G__7178 = g;
var G__7179 = h;
var G__7180 = i;
var G__7181 = j;
var G__7182 = k;
var G__7183 = l;
var G__7184 = m;
var G__7185 = n;
var G__7186 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7172,G__7173,G__7174,G__7175,G__7176,G__7177,G__7178,G__7179,G__7180,G__7181,G__7182,G__7183,G__7184,G__7185,G__7186) : self__.afn.call(null,G__7172,G__7173,G__7174,G__7175,G__7176,G__7177,G__7178,G__7179,G__7180,G__7181,G__7182,G__7183,G__7184,G__7185,G__7186));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__7187 = a;
var G__7188 = b;
var G__7189 = c;
var G__7190 = d;
var G__7191 = e;
var G__7192 = f;
var G__7193 = g;
var G__7194 = h;
var G__7195 = i;
var G__7196 = j;
var G__7197 = k;
var G__7198 = l;
var G__7199 = m;
var G__7200 = n;
var G__7201 = o;
var G__7202 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7187,G__7188,G__7189,G__7190,G__7191,G__7192,G__7193,G__7194,G__7195,G__7196,G__7197,G__7198,G__7199,G__7200,G__7201,G__7202) : self__.afn.call(null,G__7187,G__7188,G__7189,G__7190,G__7191,G__7192,G__7193,G__7194,G__7195,G__7196,G__7197,G__7198,G__7199,G__7200,G__7201,G__7202));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__7203 = a;
var G__7204 = b;
var G__7205 = c;
var G__7206 = d;
var G__7207 = e;
var G__7208 = f;
var G__7209 = g;
var G__7210 = h;
var G__7211 = i;
var G__7212 = j;
var G__7213 = k;
var G__7214 = l;
var G__7215 = m;
var G__7216 = n;
var G__7217 = o;
var G__7218 = p;
var G__7219 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7203,G__7204,G__7205,G__7206,G__7207,G__7208,G__7209,G__7210,G__7211,G__7212,G__7213,G__7214,G__7215,G__7216,G__7217,G__7218,G__7219) : self__.afn.call(null,G__7203,G__7204,G__7205,G__7206,G__7207,G__7208,G__7209,G__7210,G__7211,G__7212,G__7213,G__7214,G__7215,G__7216,G__7217,G__7218,G__7219));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__7220 = a;
var G__7221 = b;
var G__7222 = c;
var G__7223 = d;
var G__7224 = e;
var G__7225 = f;
var G__7226 = g;
var G__7227 = h;
var G__7228 = i;
var G__7229 = j;
var G__7230 = k;
var G__7231 = l;
var G__7232 = m;
var G__7233 = n;
var G__7234 = o;
var G__7235 = p;
var G__7236 = q;
var G__7237 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7220,G__7221,G__7222,G__7223,G__7224,G__7225,G__7226,G__7227,G__7228,G__7229,G__7230,G__7231,G__7232,G__7233,G__7234,G__7235,G__7236,G__7237) : self__.afn.call(null,G__7220,G__7221,G__7222,G__7223,G__7224,G__7225,G__7226,G__7227,G__7228,G__7229,G__7230,G__7231,G__7232,G__7233,G__7234,G__7235,G__7236,G__7237));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__7238 = a;
var G__7239 = b;
var G__7240 = c;
var G__7241 = d;
var G__7242 = e;
var G__7243 = f;
var G__7244 = g;
var G__7245 = h;
var G__7246 = i;
var G__7247 = j;
var G__7248 = k;
var G__7249 = l;
var G__7250 = m;
var G__7251 = n;
var G__7252 = o;
var G__7253 = p;
var G__7254 = q;
var G__7255 = r;
var G__7256 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7238,G__7239,G__7240,G__7241,G__7242,G__7243,G__7244,G__7245,G__7246,G__7247,G__7248,G__7249,G__7250,G__7251,G__7252,G__7253,G__7254,G__7255,G__7256) : self__.afn.call(null,G__7238,G__7239,G__7240,G__7241,G__7242,G__7243,G__7244,G__7245,G__7246,G__7247,G__7248,G__7249,G__7250,G__7251,G__7252,G__7253,G__7254,G__7255,G__7256));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__7257 = a;
var G__7258 = b;
var G__7259 = c;
var G__7260 = d;
var G__7261 = e;
var G__7262 = f;
var G__7263 = g;
var G__7264 = h;
var G__7265 = i;
var G__7266 = j;
var G__7267 = k;
var G__7268 = l;
var G__7269 = m;
var G__7270 = n;
var G__7271 = o;
var G__7272 = p;
var G__7273 = q;
var G__7274 = r;
var G__7275 = s;
var G__7276 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7257,G__7258,G__7259,G__7260,G__7261,G__7262,G__7263,G__7264,G__7265,G__7266,G__7267,G__7268,G__7269,G__7270,G__7271,G__7272,G__7273,G__7274,G__7275,G__7276) : self__.afn.call(null,G__7257,G__7258,G__7259,G__7260,G__7261,G__7262,G__7263,G__7264,G__7265,G__7266,G__7267,G__7268,G__7269,G__7270,G__7271,G__7272,G__7273,G__7274,G__7275,G__7276));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__7277 = self__.afn;
var G__7278 = a;
var G__7279 = b;
var G__7280 = c;
var G__7281 = d;
var G__7282 = e;
var G__7283 = f;
var G__7284 = g;
var G__7285 = h;
var G__7286 = i;
var G__7287 = j;
var G__7288 = k;
var G__7289 = l;
var G__7290 = m;
var G__7291 = n;
var G__7292 = o;
var G__7293 = p;
var G__7294 = q;
var G__7295 = r;
var G__7296 = s;
var G__7297 = t;
var G__7298 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7277,G__7278,G__7279,G__7280,G__7281,G__7282,G__7283,G__7284,G__7285,G__7286,G__7287,G__7288,G__7289,G__7290,G__7291,G__7292,G__7293,G__7294,G__7295,G__7296,G__7297,G__7298) : cljs.core.apply.call(null,G__7277,G__7278,G__7279,G__7280,G__7281,G__7282,G__7283,G__7284,G__7285,G__7286,G__7287,G__7288,G__7289,G__7290,G__7291,G__7292,G__7293,G__7294,G__7295,G__7296,G__7297,G__7298));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function cljs$core$__GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
 * Returns an object of the same type and value as obj, with
 * map m as its metadata.
 */
cljs.core.with_meta = (function cljs$core$with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__7303 = o;
if(G__7303){
var bit__4701__auto__ = (G__7303.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4701__auto__) || (G__7303.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__7303.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7303);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7303);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
 * Returns the metadata of obj, returns nil if there is no metadata.
 */
cljs.core.meta = (function cljs$core$meta(o){
if((function (){var and__4008__auto__ = !((o == null));
if(and__4008__auto__){
var G__7307 = o;
if(G__7307){
var bit__4701__auto__ = (G__7307.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4701__auto__) || (G__7307.cljs$core$IMeta$)){
return true;
} else {
if((!G__7307.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7307);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7307);
}
} else {
return and__4008__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
 * For a list or queue, same as first, for a vector, same as, but much
 * more efficient than, last. If the collection is empty, returns nil.
 */
cljs.core.peek = (function cljs$core$peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
 * For a list or queue, returns a new list/queue without the first
 * item, for a vector, returns a new vector without the last item.
 * Note - not the same as next/butlast.
 */
cljs.core.pop = (function cljs$core$pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
 * disj[oin]. Returns a new set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj = (function() {
var cljs$core$disj = null;
var cljs$core$disj__1 = (function (coll){
return coll;
});
var cljs$core$disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var cljs$core$disj__3 = (function() { 
var G__7310__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__7311 = ret;
var G__7312 = cljs.core.first(ks);
var G__7313 = cljs.core.next(ks);
coll = G__7311;
k = G__7312;
ks = G__7313;
continue;
} else {
return ret;
}
}
break;
}
};
var G__7310 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7314__i = 0, G__7314__a = new Array(arguments.length -  2);
while (G__7314__i < G__7314__a.length) {G__7314__a[G__7314__i] = arguments[G__7314__i + 2]; ++G__7314__i;}
  ks = new cljs.core.IndexedSeq(G__7314__a,0);
} 
return G__7310__delegate.call(this,coll,k,ks);};
G__7310.cljs$lang$maxFixedArity = 2;
G__7310.cljs$lang$applyTo = (function (arglist__7315){
var coll = cljs.core.first(arglist__7315);
arglist__7315 = cljs.core.next(arglist__7315);
var k = cljs.core.first(arglist__7315);
var ks = cljs.core.rest(arglist__7315);
return G__7310__delegate(coll,k,ks);
});
G__7310.cljs$core$IFn$_invoke$arity$variadic = G__7310__delegate;
return G__7310;
})()
;
cljs$core$disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$disj__1.call(this,coll);
case 2:
return cljs$core$disj__2.call(this,coll,k);
default:
var G__7316 = null;
if (arguments.length > 2) {
var G__7317__i = 0, G__7317__a = new Array(arguments.length -  2);
while (G__7317__i < G__7317__a.length) {G__7317__a[G__7317__i] = arguments[G__7317__i + 2]; ++G__7317__i;}
G__7316 = new cljs.core.IndexedSeq(G__7317__a,0);
}
return cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7316);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj.cljs$lang$maxFixedArity = 2;
cljs$core$disj.cljs$lang$applyTo = cljs$core$disj__3.cljs$lang$applyTo;
cljs$core$disj.cljs$core$IFn$_invoke$arity$1 = cljs$core$disj__1;
cljs$core$disj.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj__2;
cljs$core$disj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj;
})()
;
/**
 * Returns true if coll has no items - same as (not (seq coll)).
 * Please use the idiom (seq x) rather than (not (empty? x))
 */
cljs.core.empty_QMARK_ = (function cljs$core$empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
 * Returns true if x satisfies ICollection
 */
cljs.core.coll_QMARK_ = (function cljs$core$coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7319 = x;
if(G__7319){
var bit__4701__auto__ = (G__7319.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4701__auto__) || (G__7319.cljs$core$ICollection$)){
return true;
} else {
if((!G__7319.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7319);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7319);
}
}
});
/**
 * Returns true if x satisfies ISet
 */
cljs.core.set_QMARK_ = (function cljs$core$set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7321 = x;
if(G__7321){
var bit__4701__auto__ = (G__7321.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4701__auto__) || (G__7321.cljs$core$ISet$)){
return true;
} else {
if((!G__7321.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7321);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7321);
}
}
});
/**
 * Returns true if coll implements Associative
 */
cljs.core.associative_QMARK_ = (function cljs$core$associative_QMARK_(x){
var G__7323 = x;
if(G__7323){
var bit__4701__auto__ = (G__7323.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4701__auto__) || (G__7323.cljs$core$IAssociative$)){
return true;
} else {
if((!G__7323.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7323);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7323);
}
});
/**
 * Returns true if coll satisfies ISequential
 */
cljs.core.sequential_QMARK_ = (function cljs$core$sequential_QMARK_(x){
var G__7325 = x;
if(G__7325){
var bit__4701__auto__ = (G__7325.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4701__auto__) || (G__7325.cljs$core$ISequential$)){
return true;
} else {
if((!G__7325.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7325);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7325);
}
});
/**
 * Returns true if coll satisfies ISorted
 */
cljs.core.sorted_QMARK_ = (function cljs$core$sorted_QMARK_(x){
var G__7327 = x;
if(G__7327){
var bit__4701__auto__ = (G__7327.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4701__auto__) || (G__7327.cljs$core$ISorted$)){
return true;
} else {
if((!G__7327.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7327);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7327);
}
});
/**
 * Returns true if coll satisfies IReduce
 */
cljs.core.reduceable_QMARK_ = (function cljs$core$reduceable_QMARK_(x){
var G__7329 = x;
if(G__7329){
var bit__4701__auto__ = (G__7329.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4701__auto__) || (G__7329.cljs$core$IReduce$)){
return true;
} else {
if((!G__7329.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7329);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7329);
}
});
/**
 * Return true if x satisfies IMap
 */
cljs.core.map_QMARK_ = (function cljs$core$map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7331 = x;
if(G__7331){
var bit__4701__auto__ = (G__7331.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4701__auto__) || (G__7331.cljs$core$IMap$)){
return true;
} else {
if((!G__7331.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7331);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7331);
}
}
});
/**
 * Return true if x satisfies IVector
 */
cljs.core.vector_QMARK_ = (function cljs$core$vector_QMARK_(x){
var G__7333 = x;
if(G__7333){
var bit__4701__auto__ = (G__7333.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4701__auto__) || (G__7333.cljs$core$IVector$)){
return true;
} else {
if((!G__7333.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7333);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7333);
}
});

/**
 * Return true if x is satisfies IChunkedSeq.
 */
cljs.core.chunked_seq_QMARK_ = (function cljs$core$chunked_seq_QMARK_(x){
var G__7335 = x;
if(G__7335){
var bit__4694__auto__ = (G__7335.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4694__auto__) || (G__7335.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
 * Create JavaSript object from an even number arguments representing
 * interleaved keys and values.
 * @param {...*} var_args
 */
cljs.core.js_obj = (function() {
var cljs$core$js_obj = null;
var cljs$core$js_obj__0 = (function (){
var obj7341 = {};
return obj7341;
});
var cljs$core$js_obj__1 = (function() { 
var G__7344__delegate = function (keyvals){
var G__7342 = goog.object.create;
var G__7343 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__7342,G__7343) : cljs.core.apply.call(null,G__7342,G__7343));
};
var G__7344 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__7345__i = 0, G__7345__a = new Array(arguments.length -  0);
while (G__7345__i < G__7345__a.length) {G__7345__a[G__7345__i] = arguments[G__7345__i + 0]; ++G__7345__i;}
  keyvals = new cljs.core.IndexedSeq(G__7345__a,0);
} 
return G__7344__delegate.call(this,keyvals);};
G__7344.cljs$lang$maxFixedArity = 0;
G__7344.cljs$lang$applyTo = (function (arglist__7346){
var keyvals = cljs.core.seq(arglist__7346);
return G__7344__delegate(keyvals);
});
G__7344.cljs$core$IFn$_invoke$arity$variadic = G__7344__delegate;
return G__7344;
})()
;
cljs$core$js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return cljs$core$js_obj__0.call(this);
default:
var G__7347 = null;
if (arguments.length > 0) {
var G__7348__i = 0, G__7348__a = new Array(arguments.length -  0);
while (G__7348__i < G__7348__a.length) {G__7348__a[G__7348__i] = arguments[G__7348__i + 0]; ++G__7348__i;}
G__7347 = new cljs.core.IndexedSeq(G__7348__a,0);
}
return cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__7347);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js_obj.cljs$lang$maxFixedArity = 0;
cljs$core$js_obj.cljs$lang$applyTo = cljs$core$js_obj__1.cljs$lang$applyTo;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$0 = cljs$core$js_obj__0;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js_obj;
})()
;
/**
 * Return the JavaScript keys for an object.
 */
cljs.core.js_keys = (function cljs$core$js_keys(obj){
var keys = [];
var G__7351_7353 = obj;
var G__7352_7354 = ((function (G__7351_7353,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__7351_7353,keys))
;
goog.object.forEach(G__7351_7353,G__7352_7354);

return keys;
});
/**
 * Delete a property from a JavaScript object.
 */
cljs.core.js_delete = (function cljs$core$js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function cljs$core$array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7355 = (i__$1 + (1));
var G__7356 = (j__$1 + (1));
var G__7357 = (len__$1 - (1));
i__$1 = G__7355;
j__$1 = G__7356;
len__$1 = G__7357;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function cljs$core$array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7358 = (i__$1 - (1));
var G__7359 = (j__$1 - (1));
var G__7360 = (len__$1 - (1));
i__$1 = G__7358;
j__$1 = G__7359;
len__$1 = G__7360;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj7362 = {};
return obj7362;
})();
/**
 * Returns true if x is the value false, false otherwise.
 */
cljs.core.false_QMARK_ = (function cljs$core$false_QMARK_(x){
return x === false;
});
/**
 * Returns true if x is the value true, false otherwise.
 */
cljs.core.true_QMARK_ = (function cljs$core$true_QMARK_(x){
return x === true;
});
/**
 * Returns true if x identical to the JavaScript undefined value.
 */
cljs.core.undefined_QMARK_ = (function cljs$core$undefined_QMARK_(x){
return (void 0 === x);
});
/**
 * Return true if s satisfies ISeq
 */
cljs.core.seq_QMARK_ = (function cljs$core$seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__7364 = s;
if(G__7364){
var bit__4701__auto__ = (G__7364.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4701__auto__) || (G__7364.cljs$core$ISeq$)){
return true;
} else {
if((!G__7364.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7364);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7364);
}
}
});
/**
 * Return true if s satisfies ISeqable
 */
cljs.core.seqable_QMARK_ = (function cljs$core$seqable_QMARK_(s){
var G__7366 = s;
if(G__7366){
var bit__4701__auto__ = (G__7366.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4701__auto__) || (G__7366.cljs$core$ISeqable$)){
return true;
} else {
if((!G__7366.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7366);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7366);
}
});
/**
 * Coerce to boolean
 */
cljs.core.boolean$ = (function cljs$core$boolean(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
/**
 * Returns true if f returns true for fn? or satisfies IFn.
 */
cljs.core.ifn_QMARK_ = (function cljs$core$ifn_QMARK_(f){
var or__4020__auto__ = cljs.core.fn_QMARK_(f);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var G__7370 = f;
if(G__7370){
var bit__4701__auto__ = (G__7370.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4701__auto__) || (G__7370.cljs$core$IFn$)){
return true;
} else {
if((!G__7370.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7370);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7370);
}
}
});
/**
 * Returns true if n is an integer.
 */
cljs.core.integer_QMARK_ = (function cljs$core$integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__7383 = n;
return isNaN(G__7383);
})())) && (!((n === Infinity))) && (((function (){var G__7384 = n;
return parseFloat(G__7384);
})() === (function (){var G__7385 = n;
var G__7386 = (10);
return parseInt(G__7385,G__7386);
})()));
});
/**
 * Returns true if key is present in the given collection, otherwise
 * returns false.  Note that for numerically indexed collections like
 * vectors and arrays, this tests if the numeric key is within the
 * range of indexes. 'contains?' operates constant or logarithmic time;
 * it will not perform a linear search for a value.  See also 'some'.
 */
cljs.core.contains_QMARK_ = (function cljs$core$contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
 * Returns the map entry for key, or nil if key not present.
 */
cljs.core.find = (function cljs$core$find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
 * Returns true if no two of the arguments are =
 * @param {...*} var_args
 */
cljs.core.distinct_QMARK_ = (function() {
var cljs$core$distinct_QMARK_ = null;
var cljs$core$distinct_QMARK___1 = (function (x){
return true;
});
var cljs$core$distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$distinct_QMARK___3 = (function() { 
var G__7387__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__7388 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__7389 = etc;
s = G__7388;
xs = G__7389;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__7387 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7390__i = 0, G__7390__a = new Array(arguments.length -  2);
while (G__7390__i < G__7390__a.length) {G__7390__a[G__7390__i] = arguments[G__7390__i + 2]; ++G__7390__i;}
  more = new cljs.core.IndexedSeq(G__7390__a,0);
} 
return G__7387__delegate.call(this,x,y,more);};
G__7387.cljs$lang$maxFixedArity = 2;
G__7387.cljs$lang$applyTo = (function (arglist__7391){
var x = cljs.core.first(arglist__7391);
arglist__7391 = cljs.core.next(arglist__7391);
var y = cljs.core.first(arglist__7391);
var more = cljs.core.rest(arglist__7391);
return G__7387__delegate(x,y,more);
});
G__7387.cljs$core$IFn$_invoke$arity$variadic = G__7387__delegate;
return G__7387;
})()
;
cljs$core$distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$distinct_QMARK___1.call(this,x);
case 2:
return cljs$core$distinct_QMARK___2.call(this,x,y);
default:
var G__7392 = null;
if (arguments.length > 2) {
var G__7393__i = 0, G__7393__a = new Array(arguments.length -  2);
while (G__7393__i < G__7393__a.length) {G__7393__a[G__7393__i] = arguments[G__7393__i + 2]; ++G__7393__i;}
G__7392 = new cljs.core.IndexedSeq(G__7393__a,0);
}
return cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7392);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs$core$distinct_QMARK_.cljs$lang$applyTo = cljs$core$distinct_QMARK___3.cljs$lang$applyTo;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct_QMARK___1;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$distinct_QMARK___2;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$distinct_QMARK_;
})()
;
/**
 * Comparator. Returns a negative number, zero, or a positive number
 * when x is logically 'less than', 'equal to', or 'greater than'
 * y. Uses IComparable if available and google.array.defaultCompare for objects
 * of the same type and special-cases nil to be less than any other object.
 */
cljs.core.compare = (function cljs$core$compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__7397 = x;
if(G__7397){
var bit__4694__auto__ = (G__7397.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4694__auto__) || (G__7397.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__7398 = x;
var G__7399 = y;
return goog.array.defaultCompare(G__7398,G__7399);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
 * Compare indexed collection.
 */
cljs.core.compare_indexed = (function() {
var cljs$core$compare_indexed = null;
var cljs$core$compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var cljs$core$compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__7404 = xs;
var G__7405 = ys;
var G__7406 = len;
var G__7407 = (n + (1));
xs = G__7404;
ys = G__7405;
len = G__7406;
n = G__7407;
continue;
} else {
return d;
}
break;
}
});
cljs$core$compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return cljs$core$compare_indexed__2.call(this,xs,ys);
case 4:
return cljs$core$compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$compare_indexed__2;
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4 = cljs$core$compare_indexed__4;
return cljs$core$compare_indexed;
})()
;
/**
 * Given a fn that might be boolean valued or a comparator,
 * return a fn that is a comparator.
 */
cljs.core.fn__GT_comparator = (function cljs$core$fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__7412 = x;
var G__7413 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7412,G__7413) : f.call(null,G__7412,G__7413));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__7414 = y;
var G__7415 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7414,G__7415) : f.call(null,G__7414,G__7415));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
 * Returns a sorted sequence of the items in coll. Comp can be
 * boolean-valued comparison function, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort = (function() {
var cljs$core$sort = null;
var cljs$core$sort__1 = (function (coll){
return cljs$core$sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var cljs$core$sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__7421 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7421) : cljs.core.to_array.call(null,G__7421));
})();
var G__7422_7424 = a;
var G__7423_7425 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__7422_7424,G__7423_7425);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
cljs$core$sort = function(comp,coll){
switch(arguments.length){
case 1:
return cljs$core$sort__1.call(this,comp);
case 2:
return cljs$core$sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort.cljs$core$IFn$_invoke$arity$1 = cljs$core$sort__1;
cljs$core$sort.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort__2;
return cljs$core$sort;
})()
;
/**
 * Returns a sorted sequence of the items in coll, where the sort
 * order is determined by comparing (keyfn item).  Comp can be
 * boolean-valued comparison funcion, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort_by = (function() {
var cljs$core$sort_by = null;
var cljs$core$sort_by__2 = (function (keyfn,coll){
return cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var cljs$core$sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__7431 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7431) : keyfn.call(null,G__7431));
})(),(function (){var G__7432 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7432) : keyfn.call(null,G__7432));
})());
}),coll);
});
cljs$core$sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return cljs$core$sort_by__2.call(this,keyfn,comp);
case 3:
return cljs$core$sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort_by__2;
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3 = cljs$core$sort_by__3;
return cljs$core$sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var cljs$core$seq_reduce = null;
var cljs$core$seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__7438 = f;
var G__7439 = cljs.core.first(s);
var G__7440 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7438,G__7439,G__7440) : cljs.core.reduce.call(null,G__7438,G__7439,G__7440));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var cljs$core$seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__7441 = val__$1;
var G__7442 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7441,G__7442) : f.call(null,G__7441,G__7442));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7443 = nval;
var G__7444 = cljs.core.next(coll__$1);
val__$1 = G__7443;
coll__$1 = G__7444;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$seq_reduce__2.call(this,f,val);
case 3:
return cljs$core$seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$seq_reduce__2;
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$seq_reduce__3;
return cljs$core$seq_reduce;
})()
;
/**
 * Return a random permutation of coll
 */
cljs.core.shuffle = (function cljs$core$shuffle(coll){
var a = (function (){var G__7448 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7448) : cljs.core.to_array.call(null,G__7448));
})();
var G__7449_7451 = a;
goog.array.shuffle(G__7449_7451);

var G__7450 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__7450) : cljs.core.vec.call(null,G__7450));
});
/**
 * f should be a function of 2 arguments. If val is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc. If coll contains no
 * items, f must accept no arguments as well, and reduce returns the
 * result of calling f with no arguments.  If coll has only 1 item, it
 * is returned and f is not called.  If val is supplied, returns the
 * result of applying f to val and the first item in coll, then
 * applying f to that result and the 2nd item, etc. If coll contains no
 * items, returns val and f is not called.
 */
cljs.core.reduce = (function() {
var cljs$core$reduce = null;
var cljs$core$reduce__2 = (function (f,coll){
if((function (){var G__7454 = coll;
if(G__7454){
var bit__4694__auto__ = (G__7454.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4694__auto__) || (G__7454.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var cljs$core$reduce__3 = (function (f,val,coll){
if((function (){var G__7455 = coll;
if(G__7455){
var bit__4694__auto__ = (G__7455.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4694__auto__) || (G__7455.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
cljs$core$reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$reduce__2.call(this,f,val);
case 3:
return cljs$core$reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$reduce__2;
cljs$core$reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$reduce__3;
return cljs$core$reduce;
})()
;
/**
 * Reduces an associative collection. f should be a function of 3
 * arguments. Returns the result of applying f to init, the first key
 * and the first value in coll, then applying f to that result and the
 * 2nd key and value, etc. If coll contains no entries, returns init
 * and f is not called. Note that reduce-kv is supported on vectors,
 * where the keys will be the ordinals.
 */
cljs.core.reduce_kv = (function cljs$core$reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
/**
 * Returns its argument.
 */
cljs.core.identity = (function cljs$core$identity(x){
return x;
});
/**
 * Takes a reducing function f of 2 args and returns a fn suitable for
 * transduce by adding an arity-1 signature that calls cf (default -
 * identity) on the result argument.
 */
cljs.core.completing = (function() {
var cljs$core$completing = null;
var cljs$core$completing__1 = (function (f){
return cljs$core$completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var cljs$core$completing__2 = (function (f,cf){
return (function() {
var G__7464 = null;
var G__7464__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__7464__1 = (function (x){
var G__7461 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__7461) : cf.call(null,G__7461));
});
var G__7464__2 = (function (x,y){
var G__7462 = x;
var G__7463 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7462,G__7463) : f.call(null,G__7462,G__7463));
});
G__7464 = function(x,y){
switch(arguments.length){
case 0:
return G__7464__0.call(this);
case 1:
return G__7464__1.call(this,x);
case 2:
return G__7464__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7464.cljs$core$IFn$_invoke$arity$0 = G__7464__0;
G__7464.cljs$core$IFn$_invoke$arity$1 = G__7464__1;
G__7464.cljs$core$IFn$_invoke$arity$2 = G__7464__2;
return G__7464;
})()
});
cljs$core$completing = function(f,cf){
switch(arguments.length){
case 1:
return cljs$core$completing__1.call(this,f);
case 2:
return cljs$core$completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$completing.cljs$core$IFn$_invoke$arity$1 = cljs$core$completing__1;
cljs$core$completing.cljs$core$IFn$_invoke$arity$2 = cljs$core$completing__2;
return cljs$core$completing;
})()
;
/**
 * reduce with a transformation of f (xf). If init is not
 * supplied, (f) will be called to produce it. f should be a reducing
 * step function that accepts both 1 and 2 arguments, if it accepts
 * only 2 you can add the arity-1 with 'completing'. Returns the result
 * of applying (the transformed) xf to init and the first item in coll,
 * then applying xf to that result and the 2nd item, etc. If coll
 * contains no items, returns init and f is not called. Note that
 * certain transforms may inject or skip items.
 */
cljs.core.transduce = (function() {
var cljs$core$transduce = null;
var cljs$core$transduce__3 = (function (xform,f,coll){
return cljs$core$transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var cljs$core$transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__7471 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7471) : xform.call(null,G__7471));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__7472 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__7472) : f__$1.call(null,G__7472));
});
cljs$core$transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return cljs$core$transduce__3.call(this,xform,f,init);
case 4:
return cljs$core$transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$transduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$transduce__3;
cljs$core$transduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$transduce__4;
return cljs$core$transduce;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core._PLUS_ = (function() {
var cljs$core$_PLUS_ = null;
var cljs$core$_PLUS___0 = (function (){
return (0);
});
var cljs$core$_PLUS___1 = (function (x){
return x;
});
var cljs$core$_PLUS___2 = (function (x,y){
return (x + y);
});
var cljs$core$_PLUS___3 = (function() { 
var G__7473__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_PLUS_,(x + y),more);
};
var G__7473 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7474__i = 0, G__7474__a = new Array(arguments.length -  2);
while (G__7474__i < G__7474__a.length) {G__7474__a[G__7474__i] = arguments[G__7474__i + 2]; ++G__7474__i;}
  more = new cljs.core.IndexedSeq(G__7474__a,0);
} 
return G__7473__delegate.call(this,x,y,more);};
G__7473.cljs$lang$maxFixedArity = 2;
G__7473.cljs$lang$applyTo = (function (arglist__7475){
var x = cljs.core.first(arglist__7475);
arglist__7475 = cljs.core.next(arglist__7475);
var y = cljs.core.first(arglist__7475);
var more = cljs.core.rest(arglist__7475);
return G__7473__delegate(x,y,more);
});
G__7473.cljs$core$IFn$_invoke$arity$variadic = G__7473__delegate;
return G__7473;
})()
;
cljs$core$_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_PLUS___0.call(this);
case 1:
return cljs$core$_PLUS___1.call(this,x);
case 2:
return cljs$core$_PLUS___2.call(this,x,y);
default:
var G__7476 = null;
if (arguments.length > 2) {
var G__7477__i = 0, G__7477__a = new Array(arguments.length -  2);
while (G__7477__i < G__7477__a.length) {G__7477__a[G__7477__i] = arguments[G__7477__i + 2]; ++G__7477__i;}
G__7476 = new cljs.core.IndexedSeq(G__7477__a,0);
}
return cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7476);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_PLUS_.cljs$lang$maxFixedArity = 2;
cljs$core$_PLUS_.cljs$lang$applyTo = cljs$core$_PLUS___3.cljs$lang$applyTo;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_PLUS___0;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_PLUS___1;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_PLUS___2;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_PLUS_;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core._ = (function() {
var cljs$core$_ = null;
var cljs$core$___1 = (function (x){
return (- x);
});
var cljs$core$___2 = (function (x,y){
return (x - y);
});
var cljs$core$___3 = (function() { 
var G__7478__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_,(x - y),more);
};
var G__7478 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7479__i = 0, G__7479__a = new Array(arguments.length -  2);
while (G__7479__i < G__7479__a.length) {G__7479__a[G__7479__i] = arguments[G__7479__i + 2]; ++G__7479__i;}
  more = new cljs.core.IndexedSeq(G__7479__a,0);
} 
return G__7478__delegate.call(this,x,y,more);};
G__7478.cljs$lang$maxFixedArity = 2;
G__7478.cljs$lang$applyTo = (function (arglist__7480){
var x = cljs.core.first(arglist__7480);
arglist__7480 = cljs.core.next(arglist__7480);
var y = cljs.core.first(arglist__7480);
var more = cljs.core.rest(arglist__7480);
return G__7478__delegate(x,y,more);
});
G__7478.cljs$core$IFn$_invoke$arity$variadic = G__7478__delegate;
return G__7478;
})()
;
cljs$core$_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$___1.call(this,x);
case 2:
return cljs$core$___2.call(this,x,y);
default:
var G__7481 = null;
if (arguments.length > 2) {
var G__7482__i = 0, G__7482__a = new Array(arguments.length -  2);
while (G__7482__i < G__7482__a.length) {G__7482__a[G__7482__i] = arguments[G__7482__i + 2]; ++G__7482__i;}
G__7481 = new cljs.core.IndexedSeq(G__7482__a,0);
}
return cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7481);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_.cljs$lang$maxFixedArity = 2;
cljs$core$_.cljs$lang$applyTo = cljs$core$___3.cljs$lang$applyTo;
cljs$core$_.cljs$core$IFn$_invoke$arity$1 = cljs$core$___1;
cljs$core$_.cljs$core$IFn$_invoke$arity$2 = cljs$core$___2;
cljs$core$_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core._STAR_ = (function() {
var cljs$core$_STAR_ = null;
var cljs$core$_STAR___0 = (function (){
return (1);
});
var cljs$core$_STAR___1 = (function (x){
return x;
});
var cljs$core$_STAR___2 = (function (x,y){
return (x * y);
});
var cljs$core$_STAR___3 = (function() { 
var G__7483__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_STAR_,(x * y),more);
};
var G__7483 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7484__i = 0, G__7484__a = new Array(arguments.length -  2);
while (G__7484__i < G__7484__a.length) {G__7484__a[G__7484__i] = arguments[G__7484__i + 2]; ++G__7484__i;}
  more = new cljs.core.IndexedSeq(G__7484__a,0);
} 
return G__7483__delegate.call(this,x,y,more);};
G__7483.cljs$lang$maxFixedArity = 2;
G__7483.cljs$lang$applyTo = (function (arglist__7485){
var x = cljs.core.first(arglist__7485);
arglist__7485 = cljs.core.next(arglist__7485);
var y = cljs.core.first(arglist__7485);
var more = cljs.core.rest(arglist__7485);
return G__7483__delegate(x,y,more);
});
G__7483.cljs$core$IFn$_invoke$arity$variadic = G__7483__delegate;
return G__7483;
})()
;
cljs$core$_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_STAR___0.call(this);
case 1:
return cljs$core$_STAR___1.call(this,x);
case 2:
return cljs$core$_STAR___2.call(this,x,y);
default:
var G__7486 = null;
if (arguments.length > 2) {
var G__7487__i = 0, G__7487__a = new Array(arguments.length -  2);
while (G__7487__i < G__7487__a.length) {G__7487__a[G__7487__i] = arguments[G__7487__i + 2]; ++G__7487__i;}
G__7486 = new cljs.core.IndexedSeq(G__7487__a,0);
}
return cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7486);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_STAR_.cljs$lang$maxFixedArity = 2;
cljs$core$_STAR_.cljs$lang$applyTo = cljs$core$_STAR___3.cljs$lang$applyTo;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_STAR___0;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_STAR___1;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_STAR___2;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_STAR_;
})()
;
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core._SLASH_ = (function() {
var cljs$core$_SLASH_ = null;
var cljs$core$_SLASH___1 = (function (x){
return cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$_SLASH___2 = (function (x,y){
return (x / y);
});
var cljs$core$_SLASH___3 = (function() { 
var G__7492__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_SLASH_,cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7492 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7493__i = 0, G__7493__a = new Array(arguments.length -  2);
while (G__7493__i < G__7493__a.length) {G__7493__a[G__7493__i] = arguments[G__7493__i + 2]; ++G__7493__i;}
  more = new cljs.core.IndexedSeq(G__7493__a,0);
} 
return G__7492__delegate.call(this,x,y,more);};
G__7492.cljs$lang$maxFixedArity = 2;
G__7492.cljs$lang$applyTo = (function (arglist__7494){
var x = cljs.core.first(arglist__7494);
arglist__7494 = cljs.core.next(arglist__7494);
var y = cljs.core.first(arglist__7494);
var more = cljs.core.rest(arglist__7494);
return G__7492__delegate(x,y,more);
});
G__7492.cljs$core$IFn$_invoke$arity$variadic = G__7492__delegate;
return G__7492;
})()
;
cljs$core$_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_SLASH___1.call(this,x);
case 2:
return cljs$core$_SLASH___2.call(this,x,y);
default:
var G__7495 = null;
if (arguments.length > 2) {
var G__7496__i = 0, G__7496__a = new Array(arguments.length -  2);
while (G__7496__i < G__7496__a.length) {G__7496__a[G__7496__i] = arguments[G__7496__i + 2]; ++G__7496__i;}
G__7495 = new cljs.core.IndexedSeq(G__7496__a,0);
}
return cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7495);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_SLASH_.cljs$lang$maxFixedArity = 2;
cljs$core$_SLASH_.cljs$lang$applyTo = cljs$core$_SLASH___3.cljs$lang$applyTo;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_SLASH___1;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_SLASH___2;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_SLASH_;
})()
;
/**
 * Returns non-nil if nums are in monotonically increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT_ = (function() {
var cljs$core$_LT_ = null;
var cljs$core$_LT___1 = (function (x){
return true;
});
var cljs$core$_LT___2 = (function (x,y){
return (x < y);
});
var cljs$core$_LT___3 = (function() { 
var G__7497__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__7498 = y;
var G__7499 = cljs.core.first(more);
var G__7500 = cljs.core.next(more);
x = G__7498;
y = G__7499;
more = G__7500;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7497 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7501__i = 0, G__7501__a = new Array(arguments.length -  2);
while (G__7501__i < G__7501__a.length) {G__7501__a[G__7501__i] = arguments[G__7501__i + 2]; ++G__7501__i;}
  more = new cljs.core.IndexedSeq(G__7501__a,0);
} 
return G__7497__delegate.call(this,x,y,more);};
G__7497.cljs$lang$maxFixedArity = 2;
G__7497.cljs$lang$applyTo = (function (arglist__7502){
var x = cljs.core.first(arglist__7502);
arglist__7502 = cljs.core.next(arglist__7502);
var y = cljs.core.first(arglist__7502);
var more = cljs.core.rest(arglist__7502);
return G__7497__delegate(x,y,more);
});
G__7497.cljs$core$IFn$_invoke$arity$variadic = G__7497__delegate;
return G__7497;
})()
;
cljs$core$_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT___1.call(this,x);
case 2:
return cljs$core$_LT___2.call(this,x,y);
default:
var G__7503 = null;
if (arguments.length > 2) {
var G__7504__i = 0, G__7504__a = new Array(arguments.length -  2);
while (G__7504__i < G__7504__a.length) {G__7504__a[G__7504__i] = arguments[G__7504__i + 2]; ++G__7504__i;}
G__7503 = new cljs.core.IndexedSeq(G__7504__a,0);
}
return cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7503);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT_.cljs$lang$applyTo = cljs$core$_LT___3.cljs$lang$applyTo;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT___1;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT___2;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT__EQ_ = (function() {
var cljs$core$_LT__EQ_ = null;
var cljs$core$_LT__EQ___1 = (function (x){
return true;
});
var cljs$core$_LT__EQ___2 = (function (x,y){
return (x <= y);
});
var cljs$core$_LT__EQ___3 = (function() { 
var G__7505__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__7506 = y;
var G__7507 = cljs.core.first(more);
var G__7508 = cljs.core.next(more);
x = G__7506;
y = G__7507;
more = G__7508;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7505 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7509__i = 0, G__7509__a = new Array(arguments.length -  2);
while (G__7509__i < G__7509__a.length) {G__7509__a[G__7509__i] = arguments[G__7509__i + 2]; ++G__7509__i;}
  more = new cljs.core.IndexedSeq(G__7509__a,0);
} 
return G__7505__delegate.call(this,x,y,more);};
G__7505.cljs$lang$maxFixedArity = 2;
G__7505.cljs$lang$applyTo = (function (arglist__7510){
var x = cljs.core.first(arglist__7510);
arglist__7510 = cljs.core.next(arglist__7510);
var y = cljs.core.first(arglist__7510);
var more = cljs.core.rest(arglist__7510);
return G__7505__delegate(x,y,more);
});
G__7505.cljs$core$IFn$_invoke$arity$variadic = G__7505__delegate;
return G__7505;
})()
;
cljs$core$_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT__EQ___1.call(this,x);
case 2:
return cljs$core$_LT__EQ___2.call(this,x,y);
default:
var G__7511 = null;
if (arguments.length > 2) {
var G__7512__i = 0, G__7512__a = new Array(arguments.length -  2);
while (G__7512__i < G__7512__a.length) {G__7512__a[G__7512__i] = arguments[G__7512__i + 2]; ++G__7512__i;}
G__7511 = new cljs.core.IndexedSeq(G__7512__a,0);
}
return cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7511);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT__EQ_.cljs$lang$applyTo = cljs$core$_LT__EQ___3.cljs$lang$applyTo;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT__EQ___1;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT__EQ___2;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT__EQ_;
})()
;
/**
 * Returns non-nil if nums are in monotonically decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT_ = (function() {
var cljs$core$_GT_ = null;
var cljs$core$_GT___1 = (function (x){
return true;
});
var cljs$core$_GT___2 = (function (x,y){
return (x > y);
});
var cljs$core$_GT___3 = (function() { 
var G__7513__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__7514 = y;
var G__7515 = cljs.core.first(more);
var G__7516 = cljs.core.next(more);
x = G__7514;
y = G__7515;
more = G__7516;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7513 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7517__i = 0, G__7517__a = new Array(arguments.length -  2);
while (G__7517__i < G__7517__a.length) {G__7517__a[G__7517__i] = arguments[G__7517__i + 2]; ++G__7517__i;}
  more = new cljs.core.IndexedSeq(G__7517__a,0);
} 
return G__7513__delegate.call(this,x,y,more);};
G__7513.cljs$lang$maxFixedArity = 2;
G__7513.cljs$lang$applyTo = (function (arglist__7518){
var x = cljs.core.first(arglist__7518);
arglist__7518 = cljs.core.next(arglist__7518);
var y = cljs.core.first(arglist__7518);
var more = cljs.core.rest(arglist__7518);
return G__7513__delegate(x,y,more);
});
G__7513.cljs$core$IFn$_invoke$arity$variadic = G__7513__delegate;
return G__7513;
})()
;
cljs$core$_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT___1.call(this,x);
case 2:
return cljs$core$_GT___2.call(this,x,y);
default:
var G__7519 = null;
if (arguments.length > 2) {
var G__7520__i = 0, G__7520__a = new Array(arguments.length -  2);
while (G__7520__i < G__7520__a.length) {G__7520__a[G__7520__i] = arguments[G__7520__i + 2]; ++G__7520__i;}
G__7519 = new cljs.core.IndexedSeq(G__7520__a,0);
}
return cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7519);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT_.cljs$lang$applyTo = cljs$core$_GT___3.cljs$lang$applyTo;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT___1;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT___2;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT__EQ_ = (function() {
var cljs$core$_GT__EQ_ = null;
var cljs$core$_GT__EQ___1 = (function (x){
return true;
});
var cljs$core$_GT__EQ___2 = (function (x,y){
return (x >= y);
});
var cljs$core$_GT__EQ___3 = (function() { 
var G__7521__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__7522 = y;
var G__7523 = cljs.core.first(more);
var G__7524 = cljs.core.next(more);
x = G__7522;
y = G__7523;
more = G__7524;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7521 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7525__i = 0, G__7525__a = new Array(arguments.length -  2);
while (G__7525__i < G__7525__a.length) {G__7525__a[G__7525__i] = arguments[G__7525__i + 2]; ++G__7525__i;}
  more = new cljs.core.IndexedSeq(G__7525__a,0);
} 
return G__7521__delegate.call(this,x,y,more);};
G__7521.cljs$lang$maxFixedArity = 2;
G__7521.cljs$lang$applyTo = (function (arglist__7526){
var x = cljs.core.first(arglist__7526);
arglist__7526 = cljs.core.next(arglist__7526);
var y = cljs.core.first(arglist__7526);
var more = cljs.core.rest(arglist__7526);
return G__7521__delegate(x,y,more);
});
G__7521.cljs$core$IFn$_invoke$arity$variadic = G__7521__delegate;
return G__7521;
})()
;
cljs$core$_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT__EQ___1.call(this,x);
case 2:
return cljs$core$_GT__EQ___2.call(this,x,y);
default:
var G__7527 = null;
if (arguments.length > 2) {
var G__7528__i = 0, G__7528__a = new Array(arguments.length -  2);
while (G__7528__i < G__7528__a.length) {G__7528__a[G__7528__i] = arguments[G__7528__i + 2]; ++G__7528__i;}
G__7527 = new cljs.core.IndexedSeq(G__7528__a,0);
}
return cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7527);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT__EQ_.cljs$lang$applyTo = cljs$core$_GT__EQ___3.cljs$lang$applyTo;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT__EQ___1;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT__EQ___2;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT__EQ_;
})()
;
/**
 * Returns a number one less than num.
 */
cljs.core.dec = (function cljs$core$dec(x){
return (x - (1));
});
/**
 * Returns the greatest of the nums.
 * @param {...*} var_args
 */
cljs.core.max = (function() {
var cljs$core$max = null;
var cljs$core$max__1 = (function (x){
return x;
});
var cljs$core$max__2 = (function (x,y){
var x__4337__auto__ = x;
var y__4338__auto__ = y;
return ((x__4337__auto__ > y__4338__auto__) ? x__4337__auto__ : y__4338__auto__);
});
var cljs$core$max__3 = (function() { 
var G__7529__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$max,(function (){var x__4337__auto__ = x;
var y__4338__auto__ = y;
return ((x__4337__auto__ > y__4338__auto__) ? x__4337__auto__ : y__4338__auto__);
})(),more);
};
var G__7529 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7530__i = 0, G__7530__a = new Array(arguments.length -  2);
while (G__7530__i < G__7530__a.length) {G__7530__a[G__7530__i] = arguments[G__7530__i + 2]; ++G__7530__i;}
  more = new cljs.core.IndexedSeq(G__7530__a,0);
} 
return G__7529__delegate.call(this,x,y,more);};
G__7529.cljs$lang$maxFixedArity = 2;
G__7529.cljs$lang$applyTo = (function (arglist__7531){
var x = cljs.core.first(arglist__7531);
arglist__7531 = cljs.core.next(arglist__7531);
var y = cljs.core.first(arglist__7531);
var more = cljs.core.rest(arglist__7531);
return G__7529__delegate(x,y,more);
});
G__7529.cljs$core$IFn$_invoke$arity$variadic = G__7529__delegate;
return G__7529;
})()
;
cljs$core$max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$max__1.call(this,x);
case 2:
return cljs$core$max__2.call(this,x,y);
default:
var G__7532 = null;
if (arguments.length > 2) {
var G__7533__i = 0, G__7533__a = new Array(arguments.length -  2);
while (G__7533__i < G__7533__a.length) {G__7533__a[G__7533__i] = arguments[G__7533__i + 2]; ++G__7533__i;}
G__7532 = new cljs.core.IndexedSeq(G__7533__a,0);
}
return cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max.cljs$lang$maxFixedArity = 2;
cljs$core$max.cljs$lang$applyTo = cljs$core$max__3.cljs$lang$applyTo;
cljs$core$max.cljs$core$IFn$_invoke$arity$1 = cljs$core$max__1;
cljs$core$max.cljs$core$IFn$_invoke$arity$2 = cljs$core$max__2;
cljs$core$max.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max;
})()
;
/**
 * Returns the least of the nums.
 * @param {...*} var_args
 */
cljs.core.min = (function() {
var cljs$core$min = null;
var cljs$core$min__1 = (function (x){
return x;
});
var cljs$core$min__2 = (function (x,y){
var x__4344__auto__ = x;
var y__4345__auto__ = y;
return ((x__4344__auto__ < y__4345__auto__) ? x__4344__auto__ : y__4345__auto__);
});
var cljs$core$min__3 = (function() { 
var G__7534__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$min,(function (){var x__4344__auto__ = x;
var y__4345__auto__ = y;
return ((x__4344__auto__ < y__4345__auto__) ? x__4344__auto__ : y__4345__auto__);
})(),more);
};
var G__7534 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7535__i = 0, G__7535__a = new Array(arguments.length -  2);
while (G__7535__i < G__7535__a.length) {G__7535__a[G__7535__i] = arguments[G__7535__i + 2]; ++G__7535__i;}
  more = new cljs.core.IndexedSeq(G__7535__a,0);
} 
return G__7534__delegate.call(this,x,y,more);};
G__7534.cljs$lang$maxFixedArity = 2;
G__7534.cljs$lang$applyTo = (function (arglist__7536){
var x = cljs.core.first(arglist__7536);
arglist__7536 = cljs.core.next(arglist__7536);
var y = cljs.core.first(arglist__7536);
var more = cljs.core.rest(arglist__7536);
return G__7534__delegate(x,y,more);
});
G__7534.cljs$core$IFn$_invoke$arity$variadic = G__7534__delegate;
return G__7534;
})()
;
cljs$core$min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$min__1.call(this,x);
case 2:
return cljs$core$min__2.call(this,x,y);
default:
var G__7537 = null;
if (arguments.length > 2) {
var G__7538__i = 0, G__7538__a = new Array(arguments.length -  2);
while (G__7538__i < G__7538__a.length) {G__7538__a[G__7538__i] = arguments[G__7538__i + 2]; ++G__7538__i;}
G__7537 = new cljs.core.IndexedSeq(G__7538__a,0);
}
return cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7537);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min.cljs$lang$maxFixedArity = 2;
cljs$core$min.cljs$lang$applyTo = cljs$core$min__3.cljs$lang$applyTo;
cljs$core$min.cljs$core$IFn$_invoke$arity$1 = cljs$core$min__1;
cljs$core$min.cljs$core$IFn$_invoke$arity$2 = cljs$core$min__2;
cljs$core$min.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min;
})()
;
cljs.core.byte$ = (function cljs$core$byte(x){
return x;
});
/**
 * Coerce to char
 */
cljs.core.char$ = (function cljs$core$char(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function cljs$core$short(x){
return x;
});
cljs.core.float$ = (function cljs$core$float(x){
return x;
});
cljs.core.double$ = (function cljs$core$double(x){
return x;
});
cljs.core.unchecked_byte = (function cljs$core$unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function cljs$core$unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function cljs$core$unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function cljs$core$unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function cljs$core$unchecked_double(x){
return x;
});
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add = (function() {
var cljs$core$unchecked_add = null;
var cljs$core$unchecked_add__0 = (function (){
return (0);
});
var cljs$core$unchecked_add__1 = (function (x){
return x;
});
var cljs$core$unchecked_add__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add__3 = (function() { 
var G__7539__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add,(x + y),more);
};
var G__7539 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7540__i = 0, G__7540__a = new Array(arguments.length -  2);
while (G__7540__i < G__7540__a.length) {G__7540__a[G__7540__i] = arguments[G__7540__i + 2]; ++G__7540__i;}
  more = new cljs.core.IndexedSeq(G__7540__a,0);
} 
return G__7539__delegate.call(this,x,y,more);};
G__7539.cljs$lang$maxFixedArity = 2;
G__7539.cljs$lang$applyTo = (function (arglist__7541){
var x = cljs.core.first(arglist__7541);
arglist__7541 = cljs.core.next(arglist__7541);
var y = cljs.core.first(arglist__7541);
var more = cljs.core.rest(arglist__7541);
return G__7539__delegate(x,y,more);
});
G__7539.cljs$core$IFn$_invoke$arity$variadic = G__7539__delegate;
return G__7539;
})()
;
cljs$core$unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add__0.call(this);
case 1:
return cljs$core$unchecked_add__1.call(this,x);
case 2:
return cljs$core$unchecked_add__2.call(this,x,y);
default:
var G__7542 = null;
if (arguments.length > 2) {
var G__7543__i = 0, G__7543__a = new Array(arguments.length -  2);
while (G__7543__i < G__7543__a.length) {G__7543__a[G__7543__i] = arguments[G__7543__i + 2]; ++G__7543__i;}
G__7542 = new cljs.core.IndexedSeq(G__7543__a,0);
}
return cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7542);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add.cljs$lang$applyTo = cljs$core$unchecked_add__3.cljs$lang$applyTo;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add__0;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add__1;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add__2;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add_int = (function() {
var cljs$core$unchecked_add_int = null;
var cljs$core$unchecked_add_int__0 = (function (){
return (0);
});
var cljs$core$unchecked_add_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add_int__3 = (function() { 
var G__7544__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add_int,(x + y),more);
};
var G__7544 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7545__i = 0, G__7545__a = new Array(arguments.length -  2);
while (G__7545__i < G__7545__a.length) {G__7545__a[G__7545__i] = arguments[G__7545__i + 2]; ++G__7545__i;}
  more = new cljs.core.IndexedSeq(G__7545__a,0);
} 
return G__7544__delegate.call(this,x,y,more);};
G__7544.cljs$lang$maxFixedArity = 2;
G__7544.cljs$lang$applyTo = (function (arglist__7546){
var x = cljs.core.first(arglist__7546);
arglist__7546 = cljs.core.next(arglist__7546);
var y = cljs.core.first(arglist__7546);
var more = cljs.core.rest(arglist__7546);
return G__7544__delegate(x,y,more);
});
G__7544.cljs$core$IFn$_invoke$arity$variadic = G__7544__delegate;
return G__7544;
})()
;
cljs$core$unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add_int__0.call(this);
case 1:
return cljs$core$unchecked_add_int__1.call(this,x);
case 2:
return cljs$core$unchecked_add_int__2.call(this,x,y);
default:
var G__7547 = null;
if (arguments.length > 2) {
var G__7548__i = 0, G__7548__a = new Array(arguments.length -  2);
while (G__7548__i < G__7548__a.length) {G__7548__a[G__7548__i] = arguments[G__7548__i + 2]; ++G__7548__i;}
G__7547 = new cljs.core.IndexedSeq(G__7548__a,0);
}
return cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7547);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add_int.cljs$lang$applyTo = cljs$core$unchecked_add_int__3.cljs$lang$applyTo;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add_int__0;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add_int__1;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add_int__2;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add_int;
})()
;
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec = (function cljs$core$unchecked_dec(x){
return (x - (1));
});
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec_int = (function cljs$core$unchecked_dec_int(x){
return (x - (1));
});
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core.unchecked_divide_int = (function() {
var cljs$core$unchecked_divide_int = null;
var cljs$core$unchecked_divide_int__1 = (function (x){
return cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var cljs$core$unchecked_divide_int__3 = (function() { 
var G__7553__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_divide_int,cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7553 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7554__i = 0, G__7554__a = new Array(arguments.length -  2);
while (G__7554__i < G__7554__a.length) {G__7554__a[G__7554__i] = arguments[G__7554__i + 2]; ++G__7554__i;}
  more = new cljs.core.IndexedSeq(G__7554__a,0);
} 
return G__7553__delegate.call(this,x,y,more);};
G__7553.cljs$lang$maxFixedArity = 2;
G__7553.cljs$lang$applyTo = (function (arglist__7555){
var x = cljs.core.first(arglist__7555);
arglist__7555 = cljs.core.next(arglist__7555);
var y = cljs.core.first(arglist__7555);
var more = cljs.core.rest(arglist__7555);
return G__7553__delegate(x,y,more);
});
G__7553.cljs$core$IFn$_invoke$arity$variadic = G__7553__delegate;
return G__7553;
})()
;
cljs$core$unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_divide_int__1.call(this,x);
case 2:
return cljs$core$unchecked_divide_int__2.call(this,x,y);
default:
var G__7556 = null;
if (arguments.length > 2) {
var G__7557__i = 0, G__7557__a = new Array(arguments.length -  2);
while (G__7557__i < G__7557__a.length) {G__7557__a[G__7557__i] = arguments[G__7557__i + 2]; ++G__7557__i;}
G__7556 = new cljs.core.IndexedSeq(G__7557__a,0);
}
return cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7556);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_divide_int.cljs$lang$applyTo = cljs$core$unchecked_divide_int__3.cljs$lang$applyTo;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_divide_int__1;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_divide_int__2;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function cljs$core$unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function cljs$core$unchecked_inc_int(x){
return (x + (1));
});
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply = (function() {
var cljs$core$unchecked_multiply = null;
var cljs$core$unchecked_multiply__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply__3 = (function() { 
var G__7558__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply,(x * y),more);
};
var G__7558 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7559__i = 0, G__7559__a = new Array(arguments.length -  2);
while (G__7559__i < G__7559__a.length) {G__7559__a[G__7559__i] = arguments[G__7559__i + 2]; ++G__7559__i;}
  more = new cljs.core.IndexedSeq(G__7559__a,0);
} 
return G__7558__delegate.call(this,x,y,more);};
G__7558.cljs$lang$maxFixedArity = 2;
G__7558.cljs$lang$applyTo = (function (arglist__7560){
var x = cljs.core.first(arglist__7560);
arglist__7560 = cljs.core.next(arglist__7560);
var y = cljs.core.first(arglist__7560);
var more = cljs.core.rest(arglist__7560);
return G__7558__delegate(x,y,more);
});
G__7558.cljs$core$IFn$_invoke$arity$variadic = G__7558__delegate;
return G__7558;
})()
;
cljs$core$unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply__0.call(this);
case 1:
return cljs$core$unchecked_multiply__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply__2.call(this,x,y);
default:
var G__7561 = null;
if (arguments.length > 2) {
var G__7562__i = 0, G__7562__a = new Array(arguments.length -  2);
while (G__7562__i < G__7562__a.length) {G__7562__a[G__7562__i] = arguments[G__7562__i + 2]; ++G__7562__i;}
G__7561 = new cljs.core.IndexedSeq(G__7562__a,0);
}
return cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7561);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply.cljs$lang$applyTo = cljs$core$unchecked_multiply__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply__0;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply__1;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply__2;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply_int = (function() {
var cljs$core$unchecked_multiply_int = null;
var cljs$core$unchecked_multiply_int__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply_int__3 = (function() { 
var G__7563__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply_int,(x * y),more);
};
var G__7563 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7564__i = 0, G__7564__a = new Array(arguments.length -  2);
while (G__7564__i < G__7564__a.length) {G__7564__a[G__7564__i] = arguments[G__7564__i + 2]; ++G__7564__i;}
  more = new cljs.core.IndexedSeq(G__7564__a,0);
} 
return G__7563__delegate.call(this,x,y,more);};
G__7563.cljs$lang$maxFixedArity = 2;
G__7563.cljs$lang$applyTo = (function (arglist__7565){
var x = cljs.core.first(arglist__7565);
arglist__7565 = cljs.core.next(arglist__7565);
var y = cljs.core.first(arglist__7565);
var more = cljs.core.rest(arglist__7565);
return G__7563__delegate(x,y,more);
});
G__7563.cljs$core$IFn$_invoke$arity$variadic = G__7563__delegate;
return G__7563;
})()
;
cljs$core$unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply_int__0.call(this);
case 1:
return cljs$core$unchecked_multiply_int__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply_int__2.call(this,x,y);
default:
var G__7566 = null;
if (arguments.length > 2) {
var G__7567__i = 0, G__7567__a = new Array(arguments.length -  2);
while (G__7567__i < G__7567__a.length) {G__7567__a[G__7567__i] = arguments[G__7567__i + 2]; ++G__7567__i;}
G__7566 = new cljs.core.IndexedSeq(G__7567__a,0);
}
return cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7566);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply_int.cljs$lang$applyTo = cljs$core$unchecked_multiply_int__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply_int__0;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply_int__1;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply_int__2;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function cljs$core$unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function cljs$core$unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function cljs$core$unchecked_remainder_int(x,n){
var G__7570 = x;
var G__7571 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__7570,G__7571) : cljs.core.mod.call(null,G__7570,G__7571));
});
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract = (function() {
var cljs$core$unchecked_subtract = null;
var cljs$core$unchecked_subtract__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract__3 = (function() { 
var G__7572__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract,(x - y),more);
};
var G__7572 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7573__i = 0, G__7573__a = new Array(arguments.length -  2);
while (G__7573__i < G__7573__a.length) {G__7573__a[G__7573__i] = arguments[G__7573__i + 2]; ++G__7573__i;}
  more = new cljs.core.IndexedSeq(G__7573__a,0);
} 
return G__7572__delegate.call(this,x,y,more);};
G__7572.cljs$lang$maxFixedArity = 2;
G__7572.cljs$lang$applyTo = (function (arglist__7574){
var x = cljs.core.first(arglist__7574);
arglist__7574 = cljs.core.next(arglist__7574);
var y = cljs.core.first(arglist__7574);
var more = cljs.core.rest(arglist__7574);
return G__7572__delegate(x,y,more);
});
G__7572.cljs$core$IFn$_invoke$arity$variadic = G__7572__delegate;
return G__7572;
})()
;
cljs$core$unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract__2.call(this,x,y);
default:
var G__7575 = null;
if (arguments.length > 2) {
var G__7576__i = 0, G__7576__a = new Array(arguments.length -  2);
while (G__7576__i < G__7576__a.length) {G__7576__a[G__7576__i] = arguments[G__7576__i + 2]; ++G__7576__i;}
G__7575 = new cljs.core.IndexedSeq(G__7576__a,0);
}
return cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7575);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract.cljs$lang$applyTo = cljs$core$unchecked_subtract__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract__1;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract__2;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract_int = (function() {
var cljs$core$unchecked_subtract_int = null;
var cljs$core$unchecked_subtract_int__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract_int__3 = (function() { 
var G__7577__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract_int,(x - y),more);
};
var G__7577 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7578__i = 0, G__7578__a = new Array(arguments.length -  2);
while (G__7578__i < G__7578__a.length) {G__7578__a[G__7578__i] = arguments[G__7578__i + 2]; ++G__7578__i;}
  more = new cljs.core.IndexedSeq(G__7578__a,0);
} 
return G__7577__delegate.call(this,x,y,more);};
G__7577.cljs$lang$maxFixedArity = 2;
G__7577.cljs$lang$applyTo = (function (arglist__7579){
var x = cljs.core.first(arglist__7579);
arglist__7579 = cljs.core.next(arglist__7579);
var y = cljs.core.first(arglist__7579);
var more = cljs.core.rest(arglist__7579);
return G__7577__delegate(x,y,more);
});
G__7577.cljs$core$IFn$_invoke$arity$variadic = G__7577__delegate;
return G__7577;
})()
;
cljs$core$unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract_int__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract_int__2.call(this,x,y);
default:
var G__7580 = null;
if (arguments.length > 2) {
var G__7581__i = 0, G__7581__a = new Array(arguments.length -  2);
while (G__7581__i < G__7581__a.length) {G__7581__a[G__7581__i] = arguments[G__7581__i + 2]; ++G__7581__i;}
G__7580 = new cljs.core.IndexedSeq(G__7581__a,0);
}
return cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7580);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract_int.cljs$lang$applyTo = cljs$core$unchecked_subtract_int__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract_int__1;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract_int__2;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract_int;
})()
;
cljs.core.fix = (function cljs$core$fix(q){
if((q >= (0))){
var G__7584 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7584) : Math.floor.call(null,G__7584));
} else {
var G__7585 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__7585) : Math.ceil.call(null,G__7585));
}
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.int$ = (function cljs$core$int(x){
return (x | (0));
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.unchecked_int = (function cljs$core$unchecked_int(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.long$ = (function cljs$core$long(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.unchecked_long = (function cljs$core$unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function cljs$core$booleans(x){
return x;
});
cljs.core.bytes = (function cljs$core$bytes(x){
return x;
});
cljs.core.chars = (function cljs$core$chars(x){
return x;
});
cljs.core.shorts = (function cljs$core$shorts(x){
return x;
});
cljs.core.ints = (function cljs$core$ints(x){
return x;
});
cljs.core.floats = (function cljs$core$floats(x){
return x;
});
cljs.core.doubles = (function cljs$core$doubles(x){
return x;
});
cljs.core.longs = (function cljs$core$longs(x){
return x;
});
/**
 * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
 */
cljs.core.js_mod = (function cljs$core$js_mod(n,d){
return (n % d);
});
/**
 * Modulus of num and div. Truncates toward negative infinity.
 */
cljs.core.mod = (function cljs$core$mod(n,d){
return (((n % d) + d) % d);
});
/**
 * quot[ient] of dividing numerator by denominator.
 */
cljs.core.quot = (function cljs$core$quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
 * remainder of dividing numerator by denominator.
 */
cljs.core.rem = (function cljs$core$rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
 * Bitwise exclusive or
 * @param {...*} var_args
 */
cljs.core.bit_xor = (function() {
var cljs$core$bit_xor = null;
var cljs$core$bit_xor__2 = (function (x,y){
return (x ^ y);
});
var cljs$core$bit_xor__3 = (function() { 
var G__7586__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_xor,(x ^ y),more);
};
var G__7586 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7587__i = 0, G__7587__a = new Array(arguments.length -  2);
while (G__7587__i < G__7587__a.length) {G__7587__a[G__7587__i] = arguments[G__7587__i + 2]; ++G__7587__i;}
  more = new cljs.core.IndexedSeq(G__7587__a,0);
} 
return G__7586__delegate.call(this,x,y,more);};
G__7586.cljs$lang$maxFixedArity = 2;
G__7586.cljs$lang$applyTo = (function (arglist__7588){
var x = cljs.core.first(arglist__7588);
arglist__7588 = cljs.core.next(arglist__7588);
var y = cljs.core.first(arglist__7588);
var more = cljs.core.rest(arglist__7588);
return G__7586__delegate(x,y,more);
});
G__7586.cljs$core$IFn$_invoke$arity$variadic = G__7586__delegate;
return G__7586;
})()
;
cljs$core$bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_xor__2.call(this,x,y);
default:
var G__7589 = null;
if (arguments.length > 2) {
var G__7590__i = 0, G__7590__a = new Array(arguments.length -  2);
while (G__7590__i < G__7590__a.length) {G__7590__a[G__7590__i] = arguments[G__7590__i + 2]; ++G__7590__i;}
G__7589 = new cljs.core.IndexedSeq(G__7590__a,0);
}
return cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7589);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_xor.cljs$lang$maxFixedArity = 2;
cljs$core$bit_xor.cljs$lang$applyTo = cljs$core$bit_xor__3.cljs$lang$applyTo;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_xor__2;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_xor;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and = (function() {
var cljs$core$bit_and = null;
var cljs$core$bit_and__2 = (function (x,y){
return (x & y);
});
var cljs$core$bit_and__3 = (function() { 
var G__7591__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and,(x & y),more);
};
var G__7591 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7592__i = 0, G__7592__a = new Array(arguments.length -  2);
while (G__7592__i < G__7592__a.length) {G__7592__a[G__7592__i] = arguments[G__7592__i + 2]; ++G__7592__i;}
  more = new cljs.core.IndexedSeq(G__7592__a,0);
} 
return G__7591__delegate.call(this,x,y,more);};
G__7591.cljs$lang$maxFixedArity = 2;
G__7591.cljs$lang$applyTo = (function (arglist__7593){
var x = cljs.core.first(arglist__7593);
arglist__7593 = cljs.core.next(arglist__7593);
var y = cljs.core.first(arglist__7593);
var more = cljs.core.rest(arglist__7593);
return G__7591__delegate(x,y,more);
});
G__7591.cljs$core$IFn$_invoke$arity$variadic = G__7591__delegate;
return G__7591;
})()
;
cljs$core$bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and__2.call(this,x,y);
default:
var G__7594 = null;
if (arguments.length > 2) {
var G__7595__i = 0, G__7595__a = new Array(arguments.length -  2);
while (G__7595__i < G__7595__a.length) {G__7595__a[G__7595__i] = arguments[G__7595__i + 2]; ++G__7595__i;}
G__7594 = new cljs.core.IndexedSeq(G__7595__a,0);
}
return cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7594);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and.cljs$lang$applyTo = cljs$core$bit_and__3.cljs$lang$applyTo;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and__2;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and;
})()
;
/**
 * Bitwise or
 * @param {...*} var_args
 */
cljs.core.bit_or = (function() {
var cljs$core$bit_or = null;
var cljs$core$bit_or__2 = (function (x,y){
return (x | y);
});
var cljs$core$bit_or__3 = (function() { 
var G__7596__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_or,(x | y),more);
};
var G__7596 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7597__i = 0, G__7597__a = new Array(arguments.length -  2);
while (G__7597__i < G__7597__a.length) {G__7597__a[G__7597__i] = arguments[G__7597__i + 2]; ++G__7597__i;}
  more = new cljs.core.IndexedSeq(G__7597__a,0);
} 
return G__7596__delegate.call(this,x,y,more);};
G__7596.cljs$lang$maxFixedArity = 2;
G__7596.cljs$lang$applyTo = (function (arglist__7598){
var x = cljs.core.first(arglist__7598);
arglist__7598 = cljs.core.next(arglist__7598);
var y = cljs.core.first(arglist__7598);
var more = cljs.core.rest(arglist__7598);
return G__7596__delegate(x,y,more);
});
G__7596.cljs$core$IFn$_invoke$arity$variadic = G__7596__delegate;
return G__7596;
})()
;
cljs$core$bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_or__2.call(this,x,y);
default:
var G__7599 = null;
if (arguments.length > 2) {
var G__7600__i = 0, G__7600__a = new Array(arguments.length -  2);
while (G__7600__i < G__7600__a.length) {G__7600__a[G__7600__i] = arguments[G__7600__i + 2]; ++G__7600__i;}
G__7599 = new cljs.core.IndexedSeq(G__7600__a,0);
}
return cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7599);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_or.cljs$lang$maxFixedArity = 2;
cljs$core$bit_or.cljs$lang$applyTo = cljs$core$bit_or__3.cljs$lang$applyTo;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_or__2;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_or;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and_not = (function() {
var cljs$core$bit_and_not = null;
var cljs$core$bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var cljs$core$bit_and_not__3 = (function() { 
var G__7601__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and_not,(x & ~y),more);
};
var G__7601 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7602__i = 0, G__7602__a = new Array(arguments.length -  2);
while (G__7602__i < G__7602__a.length) {G__7602__a[G__7602__i] = arguments[G__7602__i + 2]; ++G__7602__i;}
  more = new cljs.core.IndexedSeq(G__7602__a,0);
} 
return G__7601__delegate.call(this,x,y,more);};
G__7601.cljs$lang$maxFixedArity = 2;
G__7601.cljs$lang$applyTo = (function (arglist__7603){
var x = cljs.core.first(arglist__7603);
arglist__7603 = cljs.core.next(arglist__7603);
var y = cljs.core.first(arglist__7603);
var more = cljs.core.rest(arglist__7603);
return G__7601__delegate(x,y,more);
});
G__7601.cljs$core$IFn$_invoke$arity$variadic = G__7601__delegate;
return G__7601;
})()
;
cljs$core$bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and_not__2.call(this,x,y);
default:
var G__7604 = null;
if (arguments.length > 2) {
var G__7605__i = 0, G__7605__a = new Array(arguments.length -  2);
while (G__7605__i < G__7605__a.length) {G__7605__a[G__7605__i] = arguments[G__7605__i + 2]; ++G__7605__i;}
G__7604 = new cljs.core.IndexedSeq(G__7605__a,0);
}
return cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7604);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and_not.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and_not.cljs$lang$applyTo = cljs$core$bit_and_not__3.cljs$lang$applyTo;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and_not__2;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and_not;
})()
;
/**
 * Clear bit at index n
 */
cljs.core.bit_clear = (function cljs$core$bit_clear(x,n){
return (x & ~(1 << n));
});
/**
 * Flip bit at index n
 */
cljs.core.bit_flip = (function cljs$core$bit_flip(x,n){
return (x ^ (1 << n));
});
/**
 * Bitwise complement
 */
cljs.core.bit_not = (function cljs$core$bit_not(x){
return (~ x);
});
/**
 * Set bit at index n
 */
cljs.core.bit_set = (function cljs$core$bit_set(x,n){
return (x | (1 << n));
});
/**
 * Test bit at index n
 */
cljs.core.bit_test = (function cljs$core$bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
 * Bitwise shift left
 */
cljs.core.bit_shift_left = (function cljs$core$bit_shift_left(x,n){
return (x << n);
});
/**
 * Bitwise shift right
 */
cljs.core.bit_shift_right = (function cljs$core$bit_shift_right(x,n){
return (x >> n);
});
/**
 * DEPRECATED: Bitwise shift right with zero fill
 */
cljs.core.bit_shift_right_zero_fill = (function cljs$core$bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
 * Bitwise shift right with zero fill
 */
cljs.core.unsigned_bit_shift_right = (function cljs$core$unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
 * Counts the number of bits set in n
 */
cljs.core.bit_count = (function cljs$core$bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
 * Returns non-nil if nums all have the equivalent
 * value, otherwise false. Behavior on non nums is
 * undefined.
 * @param {...*} var_args
 */
cljs.core._EQ__EQ_ = (function() {
var cljs$core$_EQ__EQ_ = null;
var cljs$core$_EQ__EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var cljs$core$_EQ__EQ___3 = (function() { 
var G__7610__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__7611 = y;
var G__7612 = cljs.core.first(more);
var G__7613 = cljs.core.next(more);
x = G__7611;
y = G__7612;
more = G__7613;
continue;
} else {
return cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7610 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7614__i = 0, G__7614__a = new Array(arguments.length -  2);
while (G__7614__i < G__7614__a.length) {G__7614__a[G__7614__i] = arguments[G__7614__i + 2]; ++G__7614__i;}
  more = new cljs.core.IndexedSeq(G__7614__a,0);
} 
return G__7610__delegate.call(this,x,y,more);};
G__7610.cljs$lang$maxFixedArity = 2;
G__7610.cljs$lang$applyTo = (function (arglist__7615){
var x = cljs.core.first(arglist__7615);
arglist__7615 = cljs.core.next(arglist__7615);
var y = cljs.core.first(arglist__7615);
var more = cljs.core.rest(arglist__7615);
return G__7610__delegate(x,y,more);
});
G__7610.cljs$core$IFn$_invoke$arity$variadic = G__7610__delegate;
return G__7610;
})()
;
cljs$core$_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ__EQ___1.call(this,x);
case 2:
return cljs$core$_EQ__EQ___2.call(this,x,y);
default:
var G__7616 = null;
if (arguments.length > 2) {
var G__7617__i = 0, G__7617__a = new Array(arguments.length -  2);
while (G__7617__i < G__7617__a.length) {G__7617__a[G__7617__i] = arguments[G__7617__i + 2]; ++G__7617__i;}
G__7616 = new cljs.core.IndexedSeq(G__7617__a,0);
}
return cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7616);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ__EQ_.cljs$lang$applyTo = cljs$core$_EQ__EQ___3.cljs$lang$applyTo;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ__EQ___1;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ__EQ___2;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ__EQ_;
})()
;
/**
 * Returns true if num is greater than zero, else false
 */
cljs.core.pos_QMARK_ = (function cljs$core$pos_QMARK_(n){
return (n > (0));
});
/**
 * Returns true if num is zero, else false
 */
cljs.core.zero_QMARK_ = (function cljs$core$zero_QMARK_(n){
return (n === (0));
});
/**
 * Returns true if num is less than zero, else false
 */
cljs.core.neg_QMARK_ = (function cljs$core$neg_QMARK_(x){
return (x < (0));
});
/**
 * Returns the nth next of coll, (seq coll) when n is 0.
 */
cljs.core.nthnext = (function cljs$core$nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__7618 = (n__$1 - (1));
var G__7619 = cljs.core.next(xs);
n__$1 = G__7618;
xs = G__7619;
continue;
} else {
return xs;
}
break;
}
});
/**
 * With no args, returns the empty string. With one arg x, returns
 * x.toString().  (str nil) returns the empty string. With more than
 * one arg, returns the concatenation of the str values of the args.
 * @param {...*} var_args
 */
cljs.core.str = (function() {
var cljs$core$str = null;
var cljs$core$str__0 = (function (){
return "";
});
var cljs$core$str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__7623 = x;
return goog.string.buildString(G__7623);
}
});
var cljs$core$str__2 = (function() { 
var G__7624__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(cljs$core$str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__7625 = sb.append(cljs$core$str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__7626 = cljs.core.next(more);
sb = G__7625;
more = G__7626;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__7624 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__7627__i = 0, G__7627__a = new Array(arguments.length -  1);
while (G__7627__i < G__7627__a.length) {G__7627__a[G__7627__i] = arguments[G__7627__i + 1]; ++G__7627__i;}
  ys = new cljs.core.IndexedSeq(G__7627__a,0);
} 
return G__7624__delegate.call(this,x,ys);};
G__7624.cljs$lang$maxFixedArity = 1;
G__7624.cljs$lang$applyTo = (function (arglist__7628){
var x = cljs.core.first(arglist__7628);
var ys = cljs.core.rest(arglist__7628);
return G__7624__delegate(x,ys);
});
G__7624.cljs$core$IFn$_invoke$arity$variadic = G__7624__delegate;
return G__7624;
})()
;
cljs$core$str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return cljs$core$str__0.call(this);
case 1:
return cljs$core$str__1.call(this,x);
default:
var G__7629 = null;
if (arguments.length > 1) {
var G__7630__i = 0, G__7630__a = new Array(arguments.length -  1);
while (G__7630__i < G__7630__a.length) {G__7630__a[G__7630__i] = arguments[G__7630__i + 1]; ++G__7630__i;}
G__7629 = new cljs.core.IndexedSeq(G__7630__a,0);
}
return cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7629);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$str.cljs$lang$maxFixedArity = 1;
cljs$core$str.cljs$lang$applyTo = cljs$core$str__2.cljs$lang$applyTo;
cljs$core$str.cljs$core$IFn$_invoke$arity$0 = cljs$core$str__0;
cljs$core$str.cljs$core$IFn$_invoke$arity$1 = cljs$core$str__1;
cljs$core$str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$str;
})()
;
/**
 * Returns the substring of s beginning at start inclusive, and ending
 * at end (defaults to length of string), exclusive.
 */
cljs.core.subs = (function() {
var cljs$core$subs = null;
var cljs$core$subs__2 = (function (s,start){
return s.substring(start);
});
var cljs$core$subs__3 = (function (s,start,end){
return s.substring(start,end);
});
cljs$core$subs = function(s,start,end){
switch(arguments.length){
case 2:
return cljs$core$subs__2.call(this,s,start);
case 3:
return cljs$core$subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subs.cljs$core$IFn$_invoke$arity$2 = cljs$core$subs__2;
cljs$core$subs.cljs$core$IFn$_invoke$arity$3 = cljs$core$subs__3;
return cljs$core$subs;
})()
;

/**
 * Assumes x is sequential. Returns true if x equals y, otherwise
 * returns false.
 */
cljs.core.equiv_sequential = (function cljs$core$equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__7631 = cljs.core.next(xs);
var G__7632 = cljs.core.next(ys);
xs = G__7631;
ys = G__7632;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function cljs$core$hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__7633 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__7634 = cljs.core.next(s);
res = G__7633;
s = G__7634;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function cljs$core$hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__7639 = ((h + (cljs.core.hash((function (){var G__7637 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__7637) : cljs.core.key.call(null,G__7637));
})()) ^ cljs.core.hash((function (){var G__7638 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__7638) : cljs.core.val.call(null,G__7638));
})()))) % (4503599627370496));
var G__7640 = cljs.core.next(s);
h = G__7639;
s = G__7640;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function cljs$core$hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__7641 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__7642 = cljs.core.next(s__$1);
h = G__7641;
s__$1 = G__7642;
continue;
} else {
return h;
}
break;
}
});


/**
 * Takes a JavaScript object and a map of names to functions and
 * attaches said functions as methods on the object.  Any references to
 * JavaScript's implicit this (via the this-as macro) will resolve to the
 * object that the function is attached.
 */
cljs.core.extend_object_BANG_ = (function cljs$core$extend_object_BANG_(obj,fn_map){
var seq__7653_7663 = cljs.core.seq(fn_map);
var chunk__7654_7664 = null;
var count__7655_7665 = (0);
var i__7656_7666 = (0);
while(true){
if((i__7656_7666 < count__7655_7665)){
var vec__7657_7667 = chunk__7654_7664.cljs$core$IIndexed$_nth$arity$2(null,i__7656_7666);
var key_name_7668 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7657_7667,(0),null);
var f_7669 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7657_7667,(1),null);
var str_name_7670 = (function (){var G__7658 = key_name_7668;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7658) : cljs.core.name.call(null,G__7658));
})();
(obj[str_name_7670] = f_7669);

var G__7671 = seq__7653_7663;
var G__7672 = chunk__7654_7664;
var G__7673 = count__7655_7665;
var G__7674 = (i__7656_7666 + (1));
seq__7653_7663 = G__7671;
chunk__7654_7664 = G__7672;
count__7655_7665 = G__7673;
i__7656_7666 = G__7674;
continue;
} else {
var temp__4126__auto___7675 = cljs.core.seq(seq__7653_7663);
if(temp__4126__auto___7675){
var seq__7653_7676__$1 = temp__4126__auto___7675;
if(cljs.core.chunked_seq_QMARK_(seq__7653_7676__$1)){
var c__4807__auto___7677 = (function (){var G__7659 = seq__7653_7676__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__7659) : cljs.core.chunk_first.call(null,G__7659));
})();
var G__7678 = (function (){var G__7660 = seq__7653_7676__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__7660) : cljs.core.chunk_rest.call(null,G__7660));
})();
var G__7679 = c__4807__auto___7677;
var G__7680 = cljs.core.count(c__4807__auto___7677);
var G__7681 = (0);
seq__7653_7663 = G__7678;
chunk__7654_7664 = G__7679;
count__7655_7665 = G__7680;
i__7656_7666 = G__7681;
continue;
} else {
var vec__7661_7682 = cljs.core.first(seq__7653_7676__$1);
var key_name_7683 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7661_7682,(0),null);
var f_7684 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7661_7682,(1),null);
var str_name_7685 = (function (){var G__7662 = key_name_7683;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7662) : cljs.core.name.call(null,G__7662));
})();
(obj[str_name_7685] = f_7684);

var G__7686 = cljs.core.next(seq__7653_7676__$1);
var G__7687 = null;
var G__7688 = (0);
var G__7689 = (0);
seq__7653_7663 = G__7686;
chunk__7654_7664 = G__7687;
count__7655_7665 = G__7688;
i__7656_7666 = G__7689;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function cljs$core$__GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function cljs$core$__GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
/**
 * Returns true if coll satisfies? IReversible.
 */
cljs.core.reversible_QMARK_ = (function cljs$core$reversible_QMARK_(coll){
var G__7691 = coll;
if(G__7691){
var bit__4701__auto__ = (G__7691.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4701__auto__) || (G__7691.cljs$core$IReversible$)){
return true;
} else {
if((!G__7691.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7691);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7691);
}
});
/**
 * Returns, in constant time, a seq of the items in rev (which
 * can be a vector or sorted-map), in reverse order. If rev is empty returns nil
 */
cljs.core.rseq = (function cljs$core$rseq(coll){
return cljs.core._rseq(coll);
});
/**
 * Returns a seq of the items in coll in reverse order. Not lazy.
 */
cljs.core.reverse = (function cljs$core$reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
 * Creates a new list containing the items.
 * @param {...*} var_args
 */
cljs.core.list = (function() { 
var cljs$core$list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__7692 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__7692;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__7693 = (i - (1));
var G__7694 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__7693;
r = G__7694;
continue;
} else {
return r;
}
break;
}
};
var cljs$core$list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__7695__i = 0, G__7695__a = new Array(arguments.length -  0);
while (G__7695__i < G__7695__a.length) {G__7695__a[G__7695__i] = arguments[G__7695__i + 0]; ++G__7695__i;}
  xs = new cljs.core.IndexedSeq(G__7695__a,0);
} 
return cljs$core$list__delegate.call(this,xs);};
cljs$core$list.cljs$lang$maxFixedArity = 0;
cljs$core$list.cljs$lang$applyTo = (function (arglist__7696){
var xs = cljs.core.seq(arglist__7696);
return cljs$core$list__delegate(xs);
});
cljs$core$list.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list__delegate;
return cljs$core$list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function cljs$core$__GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
/**
 * Returns a new seq where x is the first element and seq is the rest.
 */
cljs.core.cons = (function cljs$core$cons(x,coll){
if((function (){var or__4020__auto__ = (coll == null);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var G__7700 = coll;
if(G__7700){
var bit__4694__auto__ = (G__7700.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4694__auto__) || (G__7700.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
/**
 * Returns true if x implements IList
 */
cljs.core.list_QMARK_ = (function cljs$core$list_QMARK_(x){
var G__7702 = x;
if(G__7702){
var bit__4701__auto__ = (G__7702.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4701__auto__) || (G__7702.cljs$core$IList$)){
return true;
} else {
if((!G__7702.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7702);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7702);
}
});
cljs.core.hash_keyword = (function cljs$core$hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function cljs$core$compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__4008__auto__ = cljs.core.not(a.ns);
if(and__4008__auto__){
return b.ns;
} else {
return and__4008__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__7709 = a.ns;
var G__7710 = b.ns;
return goog.array.defaultCompare(G__7709,G__7710);
})();
if(((0) === nsc)){
var G__7711 = a.name;
var G__7712 = b.name;
return goog.array.defaultCompare(G__7711,G__7712);
} else {
return nsc;
}
}
} else {
var G__7713 = a.name;
var G__7714 = b.name;
return goog.array.defaultCompare(G__7713,G__7714);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4441__auto__ = self__._hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__7716 = null;
var G__7716__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__7716__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__7716 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__7716__2.call(this,self__,coll);
case 3:
return G__7716__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7716.cljs$core$IFn$_invoke$arity$2 = G__7716__2;
G__7716.cljs$core$IFn$_invoke$arity$3 = G__7716__3;
return G__7716;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args7715){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7715)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function cljs$core$__GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

/**
 * Return true if x is a Keyword
 */
cljs.core.keyword_QMARK_ = (function cljs$core$keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
/**
 * Efficient test to determine that two keywords are identical.
 */
cljs.core.keyword_identical_QMARK_ = (function cljs$core$keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
 * Returns the namespace String of a symbol or keyword, or nil if not present.
 */
cljs.core.namespace = (function cljs$core$namespace(x){
if((function (){var G__7718 = x;
if(G__7718){
var bit__4694__auto__ = (G__7718.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4694__auto__) || (G__7718.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
 * Returns a Keyword with the given namespace and name.  Do not use :
 * in the keyword strings, it will be added automatically.
 */
cljs.core.keyword = (function() {
var cljs$core$keyword = null;
var cljs$core$keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__7720 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7720) : cljs.core.name.call(null,G__7720));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var cljs$core$keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
cljs$core$keyword = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$keyword__1.call(this,ns);
case 2:
return cljs$core$keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keyword.cljs$core$IFn$_invoke$arity$1 = cljs$core$keyword__1;
cljs$core$keyword.cljs$core$IFn$_invoke$arity$2 = cljs$core$keyword__2;
return cljs$core$keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__7721 = ls.sval();
ls = G__7721;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function cljs$core$__GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function cljs$core$__GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function cljs$core$chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function cljs$core$__GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var cljs$core$array_chunk = null;
var cljs$core$array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var cljs$core$array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var cljs$core$array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
cljs$core$array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return cljs$core$array_chunk__1.call(this,arr);
case 2:
return cljs$core$array_chunk__2.call(this,arr,off);
case 3:
return cljs$core$array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_chunk__1;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_chunk__2;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_chunk__3;
return cljs$core$array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function cljs$core$__GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
cljs.core.chunk_cons = (function cljs$core$chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function cljs$core$chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function cljs$core$chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function cljs$core$chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function cljs$core$chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function cljs$core$chunk_next(s){
if((function (){var G__7723 = s;
if(G__7723){
var bit__4694__auto__ = (G__7723.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4694__auto__) || (G__7723.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
 * Naive impl of to-array as a start.
 */
cljs.core.to_array = (function cljs$core$to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__7724 = cljs.core.next(s__$1);
s__$1 = G__7724;
continue;
} else {
return ary;
}
break;
}
});
/**
 * Returns a (potentially-ragged) 2-dimensional array
 * containing the contents of coll.
 */
cljs.core.to_array_2d = (function cljs$core$to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_7725 = (0);
var xs_7726 = cljs.core.seq(coll);
while(true){
if(xs_7726){
(ret[i_7725] = cljs.core.to_array(cljs.core.first(xs_7726)));

var G__7727 = (i_7725 + (1));
var G__7728 = cljs.core.next(xs_7726);
i_7725 = G__7727;
xs_7726 = G__7728;
continue;
} else {
}
break;
}

return ret;
});
/**
 * Creates an array of ints. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.int_array = (function() {
var cljs$core$int_array = null;
var cljs$core$int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7731 = (i + (1));
var G__7732 = cljs.core.next(s__$1);
i = G__7731;
s__$1 = G__7732;
continue;
} else {
return a;
}
break;
}
} else {
var n__4907__auto___7733 = size;
var i_7734 = (0);
while(true){
if((i_7734 < n__4907__auto___7733)){
(a[i_7734] = init_val_or_seq);

var G__7735 = (i_7734 + (1));
i_7734 = G__7735;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$int_array__1.call(this,size);
case 2:
return cljs$core$int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$int_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$int_array__1;
cljs$core$int_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$int_array__2;
return cljs$core$int_array;
})()
;
/**
 * Creates an array of longs. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.long_array = (function() {
var cljs$core$long_array = null;
var cljs$core$long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7738 = (i + (1));
var G__7739 = cljs.core.next(s__$1);
i = G__7738;
s__$1 = G__7739;
continue;
} else {
return a;
}
break;
}
} else {
var n__4907__auto___7740 = size;
var i_7741 = (0);
while(true){
if((i_7741 < n__4907__auto___7740)){
(a[i_7741] = init_val_or_seq);

var G__7742 = (i_7741 + (1));
i_7741 = G__7742;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$long_array__1.call(this,size);
case 2:
return cljs$core$long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$long_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$long_array__1;
cljs$core$long_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$long_array__2;
return cljs$core$long_array;
})()
;
/**
 * Creates an array of doubles. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.double_array = (function() {
var cljs$core$double_array = null;
var cljs$core$double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7745 = (i + (1));
var G__7746 = cljs.core.next(s__$1);
i = G__7745;
s__$1 = G__7746;
continue;
} else {
return a;
}
break;
}
} else {
var n__4907__auto___7747 = size;
var i_7748 = (0);
while(true){
if((i_7748 < n__4907__auto___7747)){
(a[i_7748] = init_val_or_seq);

var G__7749 = (i_7748 + (1));
i_7748 = G__7749;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$double_array__1.call(this,size);
case 2:
return cljs$core$double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$double_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$double_array__1;
cljs$core$double_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$double_array__2;
return cljs$core$double_array;
})()
;
/**
 * Creates an array of objects. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.object_array = (function() {
var cljs$core$object_array = null;
var cljs$core$object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7752 = (i + (1));
var G__7753 = cljs.core.next(s__$1);
i = G__7752;
s__$1 = G__7753;
continue;
} else {
return a;
}
break;
}
} else {
var n__4907__auto___7754 = size;
var i_7755 = (0);
while(true){
if((i_7755 < n__4907__auto___7754)){
(a[i_7755] = init_val_or_seq);

var G__7756 = (i_7755 + (1));
i_7755 = G__7756;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$object_array__1.call(this,size);
case 2:
return cljs$core$object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$object_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$object_array__1;
cljs$core$object_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$object_array__2;
return cljs$core$object_array;
})()
;
cljs.core.bounded_count = (function cljs$core$bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__7757 = cljs.core.next(s__$1);
var G__7758 = (i - (1));
var G__7759 = (sum + (1));
s__$1 = G__7757;
i = G__7758;
sum = G__7759;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function cljs$core$spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),cljs$core$spread(cljs.core.next(arglist)));

}
}
});
/**
 * Returns a lazy seq representing the concatenation of the elements in the supplied colls.
 * @param {...*} var_args
 */
cljs.core.concat = (function() {
var cljs$core$concat = null;
var cljs$core$concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var cljs$core$concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var cljs$core$concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var cljs$core$concat__3 = (function() { 
var G__7779__delegate = function (x,y,zs){
var cat = (function cljs$core$concat_$_cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cljs$core$concat_$_cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cljs$core$concat_$_cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cljs$core$concat_$_cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(cljs$core$concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__7779 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__7780__i = 0, G__7780__a = new Array(arguments.length -  2);
while (G__7780__i < G__7780__a.length) {G__7780__a[G__7780__i] = arguments[G__7780__i + 2]; ++G__7780__i;}
  zs = new cljs.core.IndexedSeq(G__7780__a,0);
} 
return G__7779__delegate.call(this,x,y,zs);};
G__7779.cljs$lang$maxFixedArity = 2;
G__7779.cljs$lang$applyTo = (function (arglist__7781){
var x = cljs.core.first(arglist__7781);
arglist__7781 = cljs.core.next(arglist__7781);
var y = cljs.core.first(arglist__7781);
var zs = cljs.core.rest(arglist__7781);
return G__7779__delegate(x,y,zs);
});
G__7779.cljs$core$IFn$_invoke$arity$variadic = G__7779__delegate;
return G__7779;
})()
;
cljs$core$concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return cljs$core$concat__0.call(this);
case 1:
return cljs$core$concat__1.call(this,x);
case 2:
return cljs$core$concat__2.call(this,x,y);
default:
var G__7782 = null;
if (arguments.length > 2) {
var G__7783__i = 0, G__7783__a = new Array(arguments.length -  2);
while (G__7783__i < G__7783__a.length) {G__7783__a[G__7783__i] = arguments[G__7783__i + 2]; ++G__7783__i;}
G__7782 = new cljs.core.IndexedSeq(G__7783__a,0);
}
return cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7782);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$concat.cljs$lang$maxFixedArity = 2;
cljs$core$concat.cljs$lang$applyTo = cljs$core$concat__3.cljs$lang$applyTo;
cljs$core$concat.cljs$core$IFn$_invoke$arity$0 = cljs$core$concat__0;
cljs$core$concat.cljs$core$IFn$_invoke$arity$1 = cljs$core$concat__1;
cljs$core$concat.cljs$core$IFn$_invoke$arity$2 = cljs$core$concat__2;
cljs$core$concat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$concat;
})()
;
/**
 * Creates a new list containing the items prepended to the rest, the
 * last of which will be treated as a sequence.
 * @param {...*} var_args
 */
cljs.core.list_STAR_ = (function() {
var cljs$core$list_STAR_ = null;
var cljs$core$list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var cljs$core$list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var cljs$core$list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var cljs$core$list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var cljs$core$list_STAR___5 = (function() { 
var G__7784__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__7784 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__7785__i = 0, G__7785__a = new Array(arguments.length -  4);
while (G__7785__i < G__7785__a.length) {G__7785__a[G__7785__i] = arguments[G__7785__i + 4]; ++G__7785__i;}
  more = new cljs.core.IndexedSeq(G__7785__a,0);
} 
return G__7784__delegate.call(this,a,b,c,d,more);};
G__7784.cljs$lang$maxFixedArity = 4;
G__7784.cljs$lang$applyTo = (function (arglist__7786){
var a = cljs.core.first(arglist__7786);
arglist__7786 = cljs.core.next(arglist__7786);
var b = cljs.core.first(arglist__7786);
arglist__7786 = cljs.core.next(arglist__7786);
var c = cljs.core.first(arglist__7786);
arglist__7786 = cljs.core.next(arglist__7786);
var d = cljs.core.first(arglist__7786);
var more = cljs.core.rest(arglist__7786);
return G__7784__delegate(a,b,c,d,more);
});
G__7784.cljs$core$IFn$_invoke$arity$variadic = G__7784__delegate;
return G__7784;
})()
;
cljs$core$list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$list_STAR___1.call(this,a);
case 2:
return cljs$core$list_STAR___2.call(this,a,b);
case 3:
return cljs$core$list_STAR___3.call(this,a,b,c);
case 4:
return cljs$core$list_STAR___4.call(this,a,b,c,d);
default:
var G__7787 = null;
if (arguments.length > 4) {
var G__7788__i = 0, G__7788__a = new Array(arguments.length -  4);
while (G__7788__i < G__7788__a.length) {G__7788__a[G__7788__i] = arguments[G__7788__i + 4]; ++G__7788__i;}
G__7787 = new cljs.core.IndexedSeq(G__7788__a,0);
}
return cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__7787);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$list_STAR_.cljs$lang$maxFixedArity = 4;
cljs$core$list_STAR_.cljs$lang$applyTo = cljs$core$list_STAR___5.cljs$lang$applyTo;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$list_STAR___1;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$list_STAR___2;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$3 = cljs$core$list_STAR___3;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$4 = cljs$core$list_STAR___4;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$list_STAR_;
})()
;
/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core.transient$ = (function cljs$core$transient(coll){
return cljs.core._as_transient(coll);
});
/**
 * Returns a new, persistent version of the transient collection, in
 * constant time. The transient collection cannot be used after this
 * call, any such use will throw an exception.
 */
cljs.core.persistent_BANG_ = (function cljs$core$persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
 * Adds x to the transient collection, and return coll. The 'addition'
 * may happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj_BANG_ = (function() {
var cljs$core$conj_BANG_ = null;
var cljs$core$conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var cljs$core$conj_BANG___1 = (function (coll){
return coll;
});
var cljs$core$conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var cljs$core$conj_BANG___3 = (function() { 
var G__7789__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7790 = ntcoll;
var G__7791 = cljs.core.first(vals);
var G__7792 = cljs.core.next(vals);
tcoll = G__7790;
val = G__7791;
vals = G__7792;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7789 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7793__i = 0, G__7793__a = new Array(arguments.length -  2);
while (G__7793__i < G__7793__a.length) {G__7793__a[G__7793__i] = arguments[G__7793__i + 2]; ++G__7793__i;}
  vals = new cljs.core.IndexedSeq(G__7793__a,0);
} 
return G__7789__delegate.call(this,tcoll,val,vals);};
G__7789.cljs$lang$maxFixedArity = 2;
G__7789.cljs$lang$applyTo = (function (arglist__7794){
var tcoll = cljs.core.first(arglist__7794);
arglist__7794 = cljs.core.next(arglist__7794);
var val = cljs.core.first(arglist__7794);
var vals = cljs.core.rest(arglist__7794);
return G__7789__delegate(tcoll,val,vals);
});
G__7789.cljs$core$IFn$_invoke$arity$variadic = G__7789__delegate;
return G__7789;
})()
;
cljs$core$conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj_BANG___0.call(this);
case 1:
return cljs$core$conj_BANG___1.call(this,tcoll);
case 2:
return cljs$core$conj_BANG___2.call(this,tcoll,val);
default:
var G__7795 = null;
if (arguments.length > 2) {
var G__7796__i = 0, G__7796__a = new Array(arguments.length -  2);
while (G__7796__i < G__7796__a.length) {G__7796__a[G__7796__i] = arguments[G__7796__i + 2]; ++G__7796__i;}
G__7795 = new cljs.core.IndexedSeq(G__7796__a,0);
}
return cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7795);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$conj_BANG_.cljs$lang$applyTo = cljs$core$conj_BANG___3.cljs$lang$applyTo;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj_BANG___0;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj_BANG___1;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj_BANG___2;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj_BANG_;
})()
;
/**
 * When applied to a transient map, adds mapping of key(s) to
 * val(s). When applied to a transient vector, sets the val at index.
 * Note - index must be <= (count vector). Returns coll.
 * @param {...*} var_args
 */
cljs.core.assoc_BANG_ = (function() {
var cljs$core$assoc_BANG_ = null;
var cljs$core$assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var cljs$core$assoc_BANG___4 = (function() { 
var G__7797__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__7798 = ntcoll;
var G__7799 = cljs.core.first(kvs);
var G__7800 = cljs.core.second(kvs);
var G__7801 = cljs.core.nnext(kvs);
tcoll = G__7798;
key = G__7799;
val = G__7800;
kvs = G__7801;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7797 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__7802__i = 0, G__7802__a = new Array(arguments.length -  3);
while (G__7802__i < G__7802__a.length) {G__7802__a[G__7802__i] = arguments[G__7802__i + 3]; ++G__7802__i;}
  kvs = new cljs.core.IndexedSeq(G__7802__a,0);
} 
return G__7797__delegate.call(this,tcoll,key,val,kvs);};
G__7797.cljs$lang$maxFixedArity = 3;
G__7797.cljs$lang$applyTo = (function (arglist__7803){
var tcoll = cljs.core.first(arglist__7803);
arglist__7803 = cljs.core.next(arglist__7803);
var key = cljs.core.first(arglist__7803);
arglist__7803 = cljs.core.next(arglist__7803);
var val = cljs.core.first(arglist__7803);
var kvs = cljs.core.rest(arglist__7803);
return G__7797__delegate(tcoll,key,val,kvs);
});
G__7797.cljs$core$IFn$_invoke$arity$variadic = G__7797__delegate;
return G__7797;
})()
;
cljs$core$assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__7804 = null;
if (arguments.length > 3) {
var G__7805__i = 0, G__7805__a = new Array(arguments.length -  3);
while (G__7805__i < G__7805__a.length) {G__7805__a[G__7805__i] = arguments[G__7805__i + 3]; ++G__7805__i;}
G__7804 = new cljs.core.IndexedSeq(G__7805__a,0);
}
return cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__7804);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs$core$assoc_BANG_.cljs$lang$applyTo = cljs$core$assoc_BANG___4.cljs$lang$applyTo;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc_BANG___3;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc_BANG_;
})()
;
/**
 * Returns a transient map that doesn't contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc_BANG_ = (function() {
var cljs$core$dissoc_BANG_ = null;
var cljs$core$dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var cljs$core$dissoc_BANG___3 = (function() { 
var G__7806__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__7807 = ntcoll;
var G__7808 = cljs.core.first(ks);
var G__7809 = cljs.core.next(ks);
tcoll = G__7807;
key = G__7808;
ks = G__7809;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7806 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7810__i = 0, G__7810__a = new Array(arguments.length -  2);
while (G__7810__i < G__7810__a.length) {G__7810__a[G__7810__i] = arguments[G__7810__i + 2]; ++G__7810__i;}
  ks = new cljs.core.IndexedSeq(G__7810__a,0);
} 
return G__7806__delegate.call(this,tcoll,key,ks);};
G__7806.cljs$lang$maxFixedArity = 2;
G__7806.cljs$lang$applyTo = (function (arglist__7811){
var tcoll = cljs.core.first(arglist__7811);
arglist__7811 = cljs.core.next(arglist__7811);
var key = cljs.core.first(arglist__7811);
var ks = cljs.core.rest(arglist__7811);
return G__7806__delegate(tcoll,key,ks);
});
G__7806.cljs$core$IFn$_invoke$arity$variadic = G__7806__delegate;
return G__7806;
})()
;
cljs$core$dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return cljs$core$dissoc_BANG___2.call(this,tcoll,key);
default:
var G__7812 = null;
if (arguments.length > 2) {
var G__7813__i = 0, G__7813__a = new Array(arguments.length -  2);
while (G__7813__i < G__7813__a.length) {G__7813__a[G__7813__i] = arguments[G__7813__i + 2]; ++G__7813__i;}
G__7812 = new cljs.core.IndexedSeq(G__7813__a,0);
}
return cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__7812);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc_BANG_.cljs$lang$applyTo = cljs$core$dissoc_BANG___3.cljs$lang$applyTo;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc_BANG___2;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc_BANG_;
})()
;
/**
 * Removes the last item from a transient vector. If
 * the collection is empty, throws an exception. Returns coll
 */
cljs.core.pop_BANG_ = (function cljs$core$pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
 * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj_BANG_ = (function() {
var cljs$core$disj_BANG_ = null;
var cljs$core$disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var cljs$core$disj_BANG___3 = (function() { 
var G__7814__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7815 = ntcoll;
var G__7816 = cljs.core.first(vals);
var G__7817 = cljs.core.next(vals);
tcoll = G__7815;
val = G__7816;
vals = G__7817;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7814 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7818__i = 0, G__7818__a = new Array(arguments.length -  2);
while (G__7818__i < G__7818__a.length) {G__7818__a[G__7818__i] = arguments[G__7818__i + 2]; ++G__7818__i;}
  vals = new cljs.core.IndexedSeq(G__7818__a,0);
} 
return G__7814__delegate.call(this,tcoll,val,vals);};
G__7814.cljs$lang$maxFixedArity = 2;
G__7814.cljs$lang$applyTo = (function (arglist__7819){
var tcoll = cljs.core.first(arglist__7819);
arglist__7819 = cljs.core.next(arglist__7819);
var val = cljs.core.first(arglist__7819);
var vals = cljs.core.rest(arglist__7819);
return G__7814__delegate(tcoll,val,vals);
});
G__7814.cljs$core$IFn$_invoke$arity$variadic = G__7814__delegate;
return G__7814;
})()
;
cljs$core$disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return cljs$core$disj_BANG___2.call(this,tcoll,val);
default:
var G__7820 = null;
if (arguments.length > 2) {
var G__7821__i = 0, G__7821__a = new Array(arguments.length -  2);
while (G__7821__i < G__7821__a.length) {G__7821__a[G__7821__i] = arguments[G__7821__i + 2]; ++G__7821__i;}
G__7820 = new cljs.core.IndexedSeq(G__7821__a,0);
}
return cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7820);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$disj_BANG_.cljs$lang$applyTo = cljs$core$disj_BANG___3.cljs$lang$applyTo;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj_BANG___2;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj_BANG_;
})()
;

cljs.core.apply_to = (function cljs$core$apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4951 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4951);
} else {
var G__8032 = a4951;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8032) : f.call(null,G__8032));
}
} else {
var b4952 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4951,b4952);
} else {
var G__8033 = a4951;
var G__8034 = b4952;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8033,G__8034) : f.call(null,G__8033,G__8034));
}
} else {
var c4953 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4951,b4952,c4953);
} else {
var G__8035 = a4951;
var G__8036 = b4952;
var G__8037 = c4953;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8035,G__8036,G__8037) : f.call(null,G__8035,G__8036,G__8037));
}
} else {
var d4954 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4951,b4952,c4953,d4954);
} else {
var G__8038 = a4951;
var G__8039 = b4952;
var G__8040 = c4953;
var G__8041 = d4954;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8038,G__8039,G__8040,G__8041) : f.call(null,G__8038,G__8039,G__8040,G__8041));
}
} else {
var e4955 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4951,b4952,c4953,d4954,e4955);
} else {
var G__8042 = a4951;
var G__8043 = b4952;
var G__8044 = c4953;
var G__8045 = d4954;
var G__8046 = e4955;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8042,G__8043,G__8044,G__8045,G__8046) : f.call(null,G__8042,G__8043,G__8044,G__8045,G__8046));
}
} else {
var f4956 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4951,b4952,c4953,d4954,e4955,f4956);
} else {
var G__8047 = a4951;
var G__8048 = b4952;
var G__8049 = c4953;
var G__8050 = d4954;
var G__8051 = e4955;
var G__8052 = f4956;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8047,G__8048,G__8049,G__8050,G__8051,G__8052) : f.call(null,G__8047,G__8048,G__8049,G__8050,G__8051,G__8052));
}
} else {
var g4957 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4951,b4952,c4953,d4954,e4955,f4956,g4957);
} else {
var G__8053 = a4951;
var G__8054 = b4952;
var G__8055 = c4953;
var G__8056 = d4954;
var G__8057 = e4955;
var G__8058 = f4956;
var G__8059 = g4957;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__8053,G__8054,G__8055,G__8056,G__8057,G__8058,G__8059) : f.call(null,G__8053,G__8054,G__8055,G__8056,G__8057,G__8058,G__8059));
}
} else {
var h4958 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4951,b4952,c4953,d4954,e4955,f4956,g4957,h4958);
} else {
var G__8060 = a4951;
var G__8061 = b4952;
var G__8062 = c4953;
var G__8063 = d4954;
var G__8064 = e4955;
var G__8065 = f4956;
var G__8066 = g4957;
var G__8067 = h4958;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__8060,G__8061,G__8062,G__8063,G__8064,G__8065,G__8066,G__8067) : f.call(null,G__8060,G__8061,G__8062,G__8063,G__8064,G__8065,G__8066,G__8067));
}
} else {
var i4959 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4951,b4952,c4953,d4954,e4955,f4956,g4957,h4958,i4959);
} else {
var G__8068 = a4951;
var G__8069 = b4952;
var G__8070 = c4953;
var G__8071 = d4954;
var G__8072 = e4955;
var G__8073 = f4956;
var G__8074 = g4957;
var G__8075 = h4958;
var G__8076 = i4959;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__8068,G__8069,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076) : f.call(null,G__8068,G__8069,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076));
}
} else {
var j4960 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4951,b4952,c4953,d4954,e4955,f4956,g4957,h4958,i4959,j4960);
} else {
var G__8077 = a4951;
var G__8078 = b4952;
var G__8079 = c4953;
var G__8080 = d4954;
var G__8081 = e4955;
var G__8082 = f4956;
var G__8083 = g4957;
var G__8084 = h4958;
var G__8085 = i4959;
var G__8086 = j4960;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__8077,G__8078,G__8079,G__8080,G__8081,G__8082,G__8083,G__8084,G__8085,G__8086) : f.call(null,G__8077,G__8078,G__8079,G__8080,G__8081,G__8082,G__8083,G__8084,G__8085,G__8086));
}
} else {
var k4961 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4951,b4952,c4953,d4954,e4955,f4956,g4957,h4958,i4959,j4960,k4961);
} else {
var G__8087 = a4951;
var G__8088 = b4952;
var G__8089 = c4953;
var G__8090 = d4954;
var G__8091 = e4955;
var G__8092 = f4956;
var G__8093 = g4957;
var G__8094 = h4958;
var G__8095 = i4959;
var G__8096 = j4960;
var G__8097 = k4961;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__8087,G__8088,G__8089,G__8090,G__8091,G__8092,G__8093,G__8094,G__8095,G__8096,G__8097) : f.call(null,G__8087,G__8088,G__8089,G__8090,G__8091,G__8092,G__8093,G__8094,G__8095,G__8096,G__8097));
}
} else {
var l4962 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4951,b4952,c4953,d4954,e4955,f4956,g4957,h4958,i4959,j4960,k4961,l4962);
} else {
var G__8098 = a4951;
var G__8099 = b4952;
var G__8100 = c4953;
var G__8101 = d4954;
var G__8102 = e4955;
var G__8103 = f4956;
var G__8104 = g4957;
var G__8105 = h4958;
var G__8106 = i4959;
var G__8107 = j4960;
var G__8108 = k4961;
var G__8109 = l4962;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__8098,G__8099,G__8100,G__8101,G__8102,G__8103,G__8104,G__8105,G__8106,G__8107,G__8108,G__8109) : f.call(null,G__8098,G__8099,G__8100,G__8101,G__8102,G__8103,G__8104,G__8105,G__8106,G__8107,G__8108,G__8109));
}
} else {
var m4963 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4951,b4952,c4953,d4954,e4955,f4956,g4957,h4958,i4959,j4960,k4961,l4962,m4963);
} else {
var G__8110 = a4951;
var G__8111 = b4952;
var G__8112 = c4953;
var G__8113 = d4954;
var G__8114 = e4955;
var G__8115 = f4956;
var G__8116 = g4957;
var G__8117 = h4958;
var G__8118 = i4959;
var G__8119 = j4960;
var G__8120 = k4961;
var G__8121 = l4962;
var G__8122 = m4963;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__8110,G__8111,G__8112,G__8113,G__8114,G__8115,G__8116,G__8117,G__8118,G__8119,G__8120,G__8121,G__8122) : f.call(null,G__8110,G__8111,G__8112,G__8113,G__8114,G__8115,G__8116,G__8117,G__8118,G__8119,G__8120,G__8121,G__8122));
}
} else {
var n4964 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4951,b4952,c4953,d4954,e4955,f4956,g4957,h4958,i4959,j4960,k4961,l4962,m4963,n4964);
} else {
var G__8123 = a4951;
var G__8124 = b4952;
var G__8125 = c4953;
var G__8126 = d4954;
var G__8127 = e4955;
var G__8128 = f4956;
var G__8129 = g4957;
var G__8130 = h4958;
var G__8131 = i4959;
var G__8132 = j4960;
var G__8133 = k4961;
var G__8134 = l4962;
var G__8135 = m4963;
var G__8136 = n4964;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__8123,G__8124,G__8125,G__8126,G__8127,G__8128,G__8129,G__8130,G__8131,G__8132,G__8133,G__8134,G__8135,G__8136) : f.call(null,G__8123,G__8124,G__8125,G__8126,G__8127,G__8128,G__8129,G__8130,G__8131,G__8132,G__8133,G__8134,G__8135,G__8136));
}
} else {
var o4965 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4951,b4952,c4953,d4954,e4955,f4956,g4957,h4958,i4959,j4960,k4961,l4962,m4963,n4964,o4965);
} else {
var G__8137 = a4951;
var G__8138 = b4952;
var G__8139 = c4953;
var G__8140 = d4954;
var G__8141 = e4955;
var G__8142 = f4956;
var G__8143 = g4957;
var G__8144 = h4958;
var G__8145 = i4959;
var G__8146 = j4960;
var G__8147 = k4961;
var G__8148 = l4962;
var G__8149 = m4963;
var G__8150 = n4964;
var G__8151 = o4965;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__8137,G__8138,G__8139,G__8140,G__8141,G__8142,G__8143,G__8144,G__8145,G__8146,G__8147,G__8148,G__8149,G__8150,G__8151) : f.call(null,G__8137,G__8138,G__8139,G__8140,G__8141,G__8142,G__8143,G__8144,G__8145,G__8146,G__8147,G__8148,G__8149,G__8150,G__8151));
}
} else {
var p4966 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4951,b4952,c4953,d4954,e4955,f4956,g4957,h4958,i4959,j4960,k4961,l4962,m4963,n4964,o4965,p4966);
} else {
var G__8152 = a4951;
var G__8153 = b4952;
var G__8154 = c4953;
var G__8155 = d4954;
var G__8156 = e4955;
var G__8157 = f4956;
var G__8158 = g4957;
var G__8159 = h4958;
var G__8160 = i4959;
var G__8161 = j4960;
var G__8162 = k4961;
var G__8163 = l4962;
var G__8164 = m4963;
var G__8165 = n4964;
var G__8166 = o4965;
var G__8167 = p4966;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__8152,G__8153,G__8154,G__8155,G__8156,G__8157,G__8158,G__8159,G__8160,G__8161,G__8162,G__8163,G__8164,G__8165,G__8166,G__8167) : f.call(null,G__8152,G__8153,G__8154,G__8155,G__8156,G__8157,G__8158,G__8159,G__8160,G__8161,G__8162,G__8163,G__8164,G__8165,G__8166,G__8167));
}
} else {
var q4967 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4951,b4952,c4953,d4954,e4955,f4956,g4957,h4958,i4959,j4960,k4961,l4962,m4963,n4964,o4965,p4966,q4967);
} else {
var G__8168 = a4951;
var G__8169 = b4952;
var G__8170 = c4953;
var G__8171 = d4954;
var G__8172 = e4955;
var G__8173 = f4956;
var G__8174 = g4957;
var G__8175 = h4958;
var G__8176 = i4959;
var G__8177 = j4960;
var G__8178 = k4961;
var G__8179 = l4962;
var G__8180 = m4963;
var G__8181 = n4964;
var G__8182 = o4965;
var G__8183 = p4966;
var G__8184 = q4967;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__8168,G__8169,G__8170,G__8171,G__8172,G__8173,G__8174,G__8175,G__8176,G__8177,G__8178,G__8179,G__8180,G__8181,G__8182,G__8183,G__8184) : f.call(null,G__8168,G__8169,G__8170,G__8171,G__8172,G__8173,G__8174,G__8175,G__8176,G__8177,G__8178,G__8179,G__8180,G__8181,G__8182,G__8183,G__8184));
}
} else {
var r4968 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4951,b4952,c4953,d4954,e4955,f4956,g4957,h4958,i4959,j4960,k4961,l4962,m4963,n4964,o4965,p4966,q4967,r4968);
} else {
var G__8185 = a4951;
var G__8186 = b4952;
var G__8187 = c4953;
var G__8188 = d4954;
var G__8189 = e4955;
var G__8190 = f4956;
var G__8191 = g4957;
var G__8192 = h4958;
var G__8193 = i4959;
var G__8194 = j4960;
var G__8195 = k4961;
var G__8196 = l4962;
var G__8197 = m4963;
var G__8198 = n4964;
var G__8199 = o4965;
var G__8200 = p4966;
var G__8201 = q4967;
var G__8202 = r4968;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__8185,G__8186,G__8187,G__8188,G__8189,G__8190,G__8191,G__8192,G__8193,G__8194,G__8195,G__8196,G__8197,G__8198,G__8199,G__8200,G__8201,G__8202) : f.call(null,G__8185,G__8186,G__8187,G__8188,G__8189,G__8190,G__8191,G__8192,G__8193,G__8194,G__8195,G__8196,G__8197,G__8198,G__8199,G__8200,G__8201,G__8202));
}
} else {
var s4969 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4951,b4952,c4953,d4954,e4955,f4956,g4957,h4958,i4959,j4960,k4961,l4962,m4963,n4964,o4965,p4966,q4967,r4968,s4969);
} else {
var G__8203 = a4951;
var G__8204 = b4952;
var G__8205 = c4953;
var G__8206 = d4954;
var G__8207 = e4955;
var G__8208 = f4956;
var G__8209 = g4957;
var G__8210 = h4958;
var G__8211 = i4959;
var G__8212 = j4960;
var G__8213 = k4961;
var G__8214 = l4962;
var G__8215 = m4963;
var G__8216 = n4964;
var G__8217 = o4965;
var G__8218 = p4966;
var G__8219 = q4967;
var G__8220 = r4968;
var G__8221 = s4969;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__8203,G__8204,G__8205,G__8206,G__8207,G__8208,G__8209,G__8210,G__8211,G__8212,G__8213,G__8214,G__8215,G__8216,G__8217,G__8218,G__8219,G__8220,G__8221) : f.call(null,G__8203,G__8204,G__8205,G__8206,G__8207,G__8208,G__8209,G__8210,G__8211,G__8212,G__8213,G__8214,G__8215,G__8216,G__8217,G__8218,G__8219,G__8220,G__8221));
}
} else {
var t4970 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4951,b4952,c4953,d4954,e4955,f4956,g4957,h4958,i4959,j4960,k4961,l4962,m4963,n4964,o4965,p4966,q4967,r4968,s4969,t4970);
} else {
var G__8222 = a4951;
var G__8223 = b4952;
var G__8224 = c4953;
var G__8225 = d4954;
var G__8226 = e4955;
var G__8227 = f4956;
var G__8228 = g4957;
var G__8229 = h4958;
var G__8230 = i4959;
var G__8231 = j4960;
var G__8232 = k4961;
var G__8233 = l4962;
var G__8234 = m4963;
var G__8235 = n4964;
var G__8236 = o4965;
var G__8237 = p4966;
var G__8238 = q4967;
var G__8239 = r4968;
var G__8240 = s4969;
var G__8241 = t4970;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__8222,G__8223,G__8224,G__8225,G__8226,G__8227,G__8228,G__8229,G__8230,G__8231,G__8232,G__8233,G__8234,G__8235,G__8236,G__8237,G__8238,G__8239,G__8240,G__8241) : f.call(null,G__8222,G__8223,G__8224,G__8225,G__8226,G__8227,G__8228,G__8229,G__8230,G__8231,G__8232,G__8233,G__8234,G__8235,G__8236,G__8237,G__8238,G__8239,G__8240,G__8241));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
 * Applies fn f to the argument list formed by prepending intervening arguments to args.
 * @param {...*} var_args
 */
cljs.core.apply = (function() {
var cljs$core$apply = null;
var cljs$core$apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var cljs$core$apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__6 = (function() { 
var G__8242__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__8242 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__8243__i = 0, G__8243__a = new Array(arguments.length -  5);
while (G__8243__i < G__8243__a.length) {G__8243__a[G__8243__i] = arguments[G__8243__i + 5]; ++G__8243__i;}
  args = new cljs.core.IndexedSeq(G__8243__a,0);
} 
return G__8242__delegate.call(this,f,a,b,c,d,args);};
G__8242.cljs$lang$maxFixedArity = 5;
G__8242.cljs$lang$applyTo = (function (arglist__8244){
var f = cljs.core.first(arglist__8244);
arglist__8244 = cljs.core.next(arglist__8244);
var a = cljs.core.first(arglist__8244);
arglist__8244 = cljs.core.next(arglist__8244);
var b = cljs.core.first(arglist__8244);
arglist__8244 = cljs.core.next(arglist__8244);
var c = cljs.core.first(arglist__8244);
arglist__8244 = cljs.core.next(arglist__8244);
var d = cljs.core.first(arglist__8244);
var args = cljs.core.rest(arglist__8244);
return G__8242__delegate(f,a,b,c,d,args);
});
G__8242.cljs$core$IFn$_invoke$arity$variadic = G__8242__delegate;
return G__8242;
})()
;
cljs$core$apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$apply__2.call(this,f,a);
case 3:
return cljs$core$apply__3.call(this,f,a,b);
case 4:
return cljs$core$apply__4.call(this,f,a,b,c);
case 5:
return cljs$core$apply__5.call(this,f,a,b,c,d);
default:
var G__8245 = null;
if (arguments.length > 5) {
var G__8246__i = 0, G__8246__a = new Array(arguments.length -  5);
while (G__8246__i < G__8246__a.length) {G__8246__a[G__8246__i] = arguments[G__8246__i + 5]; ++G__8246__i;}
G__8245 = new cljs.core.IndexedSeq(G__8246__a,0);
}
return cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__8245);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$apply.cljs$lang$maxFixedArity = 5;
cljs$core$apply.cljs$lang$applyTo = cljs$core$apply__6.cljs$lang$applyTo;
cljs$core$apply.cljs$core$IFn$_invoke$arity$2 = cljs$core$apply__2;
cljs$core$apply.cljs$core$IFn$_invoke$arity$3 = cljs$core$apply__3;
cljs$core$apply.cljs$core$IFn$_invoke$arity$4 = cljs$core$apply__4;
cljs$core$apply.cljs$core$IFn$_invoke$arity$5 = cljs$core$apply__5;
cljs$core$apply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$apply;
})()
;
/**
 * Returns an object of the same type and value as obj, with
 * (apply f (meta obj) args) as its metadata.
 * @param {...*} var_args
 */
cljs.core.vary_meta = (function() {
var cljs$core$vary_meta = null;
var cljs$core$vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__8262 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8262) : f.call(null,G__8262));
})());
});
var cljs$core$vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__8263 = cljs.core.meta(obj);
var G__8264 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8263,G__8264) : f.call(null,G__8263,G__8264));
})());
});
var cljs$core$vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__8265 = cljs.core.meta(obj);
var G__8266 = a;
var G__8267 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8265,G__8266,G__8267) : f.call(null,G__8265,G__8266,G__8267));
})());
});
var cljs$core$vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__8268 = cljs.core.meta(obj);
var G__8269 = a;
var G__8270 = b;
var G__8271 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8268,G__8269,G__8270,G__8271) : f.call(null,G__8268,G__8269,G__8270,G__8271));
})());
});
var cljs$core$vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__8272 = cljs.core.meta(obj);
var G__8273 = a;
var G__8274 = b;
var G__8275 = c;
var G__8276 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8272,G__8273,G__8274,G__8275,G__8276) : f.call(null,G__8272,G__8273,G__8274,G__8275,G__8276));
})());
});
var cljs$core$vary_meta__7 = (function() { 
var G__8277__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__8277 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__8278__i = 0, G__8278__a = new Array(arguments.length -  6);
while (G__8278__i < G__8278__a.length) {G__8278__a[G__8278__i] = arguments[G__8278__i + 6]; ++G__8278__i;}
  args = new cljs.core.IndexedSeq(G__8278__a,0);
} 
return G__8277__delegate.call(this,obj,f,a,b,c,d,args);};
G__8277.cljs$lang$maxFixedArity = 6;
G__8277.cljs$lang$applyTo = (function (arglist__8279){
var obj = cljs.core.first(arglist__8279);
arglist__8279 = cljs.core.next(arglist__8279);
var f = cljs.core.first(arglist__8279);
arglist__8279 = cljs.core.next(arglist__8279);
var a = cljs.core.first(arglist__8279);
arglist__8279 = cljs.core.next(arglist__8279);
var b = cljs.core.first(arglist__8279);
arglist__8279 = cljs.core.next(arglist__8279);
var c = cljs.core.first(arglist__8279);
arglist__8279 = cljs.core.next(arglist__8279);
var d = cljs.core.first(arglist__8279);
var args = cljs.core.rest(arglist__8279);
return G__8277__delegate(obj,f,a,b,c,d,args);
});
G__8277.cljs$core$IFn$_invoke$arity$variadic = G__8277__delegate;
return G__8277;
})()
;
cljs$core$vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$vary_meta__2.call(this,obj,f);
case 3:
return cljs$core$vary_meta__3.call(this,obj,f,a);
case 4:
return cljs$core$vary_meta__4.call(this,obj,f,a,b);
case 5:
return cljs$core$vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return cljs$core$vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__8280 = null;
if (arguments.length > 6) {
var G__8281__i = 0, G__8281__a = new Array(arguments.length -  6);
while (G__8281__i < G__8281__a.length) {G__8281__a[G__8281__i] = arguments[G__8281__i + 6]; ++G__8281__i;}
G__8280 = new cljs.core.IndexedSeq(G__8281__a,0);
}
return cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__8280);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$vary_meta.cljs$lang$maxFixedArity = 6;
cljs$core$vary_meta.cljs$lang$applyTo = cljs$core$vary_meta__7.cljs$lang$applyTo;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$2 = cljs$core$vary_meta__2;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$3 = cljs$core$vary_meta__3;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$4 = cljs$core$vary_meta__4;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$5 = cljs$core$vary_meta__5;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$6 = cljs$core$vary_meta__6;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$vary_meta;
})()
;
/**
 * Same as (not (= obj1 obj2))
 * @param {...*} var_args
 */
cljs.core.not_EQ_ = (function() {
var cljs$core$not_EQ_ = null;
var cljs$core$not_EQ___1 = (function (x){
return false;
});
var cljs$core$not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$not_EQ___3 = (function() { 
var G__8282__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__8282 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8283__i = 0, G__8283__a = new Array(arguments.length -  2);
while (G__8283__i < G__8283__a.length) {G__8283__a[G__8283__i] = arguments[G__8283__i + 2]; ++G__8283__i;}
  more = new cljs.core.IndexedSeq(G__8283__a,0);
} 
return G__8282__delegate.call(this,x,y,more);};
G__8282.cljs$lang$maxFixedArity = 2;
G__8282.cljs$lang$applyTo = (function (arglist__8284){
var x = cljs.core.first(arglist__8284);
arglist__8284 = cljs.core.next(arglist__8284);
var y = cljs.core.first(arglist__8284);
var more = cljs.core.rest(arglist__8284);
return G__8282__delegate(x,y,more);
});
G__8282.cljs$core$IFn$_invoke$arity$variadic = G__8282__delegate;
return G__8282;
})()
;
cljs$core$not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$not_EQ___1.call(this,x);
case 2:
return cljs$core$not_EQ___2.call(this,x,y);
default:
var G__8285 = null;
if (arguments.length > 2) {
var G__8286__i = 0, G__8286__a = new Array(arguments.length -  2);
while (G__8286__i < G__8286__a.length) {G__8286__a[G__8286__i] = arguments[G__8286__i + 2]; ++G__8286__i;}
G__8285 = new cljs.core.IndexedSeq(G__8286__a,0);
}
return cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8285);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$not_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$not_EQ_.cljs$lang$applyTo = cljs$core$not_EQ___3.cljs$lang$applyTo;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$not_EQ___1;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$not_EQ___2;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$not_EQ_;
})()
;
/**
 * If coll is empty, returns nil, else coll
 */
cljs.core.not_empty = (function cljs$core$not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function cljs$core$nil_iter(){
if(typeof cljs.core.t8290 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t8290 = (function (nil_iter,meta8291){
this.nil_iter = nil_iter;
this.meta8291 = meta8291;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t8290.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t8290.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t8290.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t8290.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_8292){
var self__ = this;
var _8292__$1 = this;
return self__.meta8291;
});

cljs.core.t8290.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_8292,meta8291__$1){
var self__ = this;
var _8292__$1 = this;
return (new cljs.core.t8290(self__.nil_iter,meta8291__$1));
});

cljs.core.t8290.cljs$lang$type = true;

cljs.core.t8290.cljs$lang$ctorStr = "cljs.core/t8290";

cljs.core.t8290.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/t8290");
});

cljs.core.__GT_t8290 = (function cljs$core$nil_iter_$___GT_t8290(nil_iter__$1,meta8291){
return (new cljs.core.t8290(nil_iter__$1,meta8291));
});

}

return (new cljs.core.t8290(cljs$core$nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function cljs$core$__GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function cljs$core$string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function cljs$core$__GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function cljs$core$array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function cljs$core$__GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function cljs$core$seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function cljs$core$iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function cljs$core$lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__4008__auto__ = !((lt.stepper == null));
if(and__4008__auto__){
return self__.iter.hasNext();
} else {
return and__4008__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__8293 = lt;
var G__8294 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__8293,G__8294) : self__.xform.call(null,G__8293,G__8294));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8295 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8295) : self__.xform.call(null,G__8295));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function cljs$core$__GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function cljs$core$stepper(xform,iter){
var stepfn = (function() {
var cljs$core$stepper_$_stepfn = null;
var cljs$core$stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var cljs$core$stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
return cljs$core$stepper_$_stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__8297 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8297) : xform.call(null,G__8297));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__8299 = cljs.core.next(iters__$1);
iters__$1 = G__8299;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4907__auto___8300 = self__.iters.length;
var i_8301 = (0);
while(true){
if((i_8301 < n__4907__auto___8300)){
(self__.nexts[i_8301] = (self__.iters[i_8301]).next());

var G__8302 = (i_8301 + (1));
i_8301 = G__8302;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__4008__auto__ = !((lt.stepper == null));
if(and__4008__auto__){
return this$.hasNext();
} else {
return and__4008__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8298 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8298) : self__.xform.call(null,G__8298));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function cljs$core$__GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var cljs$core$multi_stepper = null;
var cljs$core$multi_stepper__2 = (function (xform,iters){
return cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var cljs$core$multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var cljs$core$multi_stepper_$_stepfn = null;
var cljs$core$multi_stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var cljs$core$multi_stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$multi_stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$multi_stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$multi_stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$multi_stepper_$_stepfn__1;
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper_$_stepfn__2;
return cljs$core$multi_stepper_$_stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__8307 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8307) : xform.call(null,G__8307));
})(),iters,nexts));
});
cljs$core$multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return cljs$core$multi_stepper__2.call(this,xform,iters);
case 3:
return cljs$core$multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper__2;
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3 = cljs$core$multi_stepper__3;
return cljs$core$multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function cljs$core$__GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__8308_8312 = cljs.core.seq(colls);
var chunk__8309_8313 = null;
var count__8310_8314 = (0);
var i__8311_8315 = (0);
while(true){
if((i__8311_8315 < count__8310_8314)){
var coll_8316 = chunk__8309_8313.cljs$core$IIndexed$_nth$arity$2(null,i__8311_8315);
iters.push(cljs.core.iter(coll_8316));

var G__8317 = seq__8308_8312;
var G__8318 = chunk__8309_8313;
var G__8319 = count__8310_8314;
var G__8320 = (i__8311_8315 + (1));
seq__8308_8312 = G__8317;
chunk__8309_8313 = G__8318;
count__8310_8314 = G__8319;
i__8311_8315 = G__8320;
continue;
} else {
var temp__4126__auto___8321 = cljs.core.seq(seq__8308_8312);
if(temp__4126__auto___8321){
var seq__8308_8322__$1 = temp__4126__auto___8321;
if(cljs.core.chunked_seq_QMARK_(seq__8308_8322__$1)){
var c__4807__auto___8323 = cljs.core.chunk_first(seq__8308_8322__$1);
var G__8324 = cljs.core.chunk_rest(seq__8308_8322__$1);
var G__8325 = c__4807__auto___8323;
var G__8326 = cljs.core.count(c__4807__auto___8323);
var G__8327 = (0);
seq__8308_8312 = G__8324;
chunk__8309_8313 = G__8325;
count__8310_8314 = G__8326;
i__8311_8315 = G__8327;
continue;
} else {
var coll_8328 = cljs.core.first(seq__8308_8322__$1);
iters.push(cljs.core.iter(coll_8328));

var G__8329 = cljs.core.next(seq__8308_8322__$1);
var G__8330 = null;
var G__8331 = (0);
var G__8332 = (0);
seq__8308_8312 = G__8329;
chunk__8309_8313 = G__8330;
count__8310_8314 = G__8331;
i__8311_8315 = G__8332;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
 * Coerces coll to a (possibly empty) sequence, if it is not already
 * one. Will not force a lazy seq. (sequence nil) yields (), When a
 * transducer is supplied, returns a lazy sequence of applications of
 * the transform to the items in coll(s), i.e. to the set of first
 * items of each coll, followed by the set of second
 * items in each coll, until any one of the colls is exhausted.  Any
 * remaining items in other colls are ignored. The transform should accept
 * number-of-colls arguments
 * @param {...*} var_args
 */
cljs.core.sequence = (function() {
var cljs$core$sequence = null;
var cljs$core$sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__4020__auto__ = cljs.core.seq(coll);
if(or__4020__auto__){
return or__4020__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var cljs$core$sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var cljs$core$sequence__3 = (function() { 
var G__8333__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__8333 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__8334__i = 0, G__8334__a = new Array(arguments.length -  2);
while (G__8334__i < G__8334__a.length) {G__8334__a[G__8334__i] = arguments[G__8334__i + 2]; ++G__8334__i;}
  colls = new cljs.core.IndexedSeq(G__8334__a,0);
} 
return G__8333__delegate.call(this,xform,coll,colls);};
G__8333.cljs$lang$maxFixedArity = 2;
G__8333.cljs$lang$applyTo = (function (arglist__8335){
var xform = cljs.core.first(arglist__8335);
arglist__8335 = cljs.core.next(arglist__8335);
var coll = cljs.core.first(arglist__8335);
var colls = cljs.core.rest(arglist__8335);
return G__8333__delegate(xform,coll,colls);
});
G__8333.cljs$core$IFn$_invoke$arity$variadic = G__8333__delegate;
return G__8333;
})()
;
cljs$core$sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$sequence__1.call(this,xform);
case 2:
return cljs$core$sequence__2.call(this,xform,coll);
default:
var G__8336 = null;
if (arguments.length > 2) {
var G__8337__i = 0, G__8337__a = new Array(arguments.length -  2);
while (G__8337__i < G__8337__a.length) {G__8337__a[G__8337__i] = arguments[G__8337__i + 2]; ++G__8337__i;}
G__8336 = new cljs.core.IndexedSeq(G__8337__a,0);
}
return cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__8336);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sequence.cljs$lang$maxFixedArity = 2;
cljs$core$sequence.cljs$lang$applyTo = cljs$core$sequence__3.cljs$lang$applyTo;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$1 = cljs$core$sequence__1;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$2 = cljs$core$sequence__2;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$sequence;
})()
;
/**
 * Returns true if (pred x) is logical true for every x in coll, else
 * false.
 */
cljs.core.every_QMARK_ = (function cljs$core$every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__8339 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8339) : pred.call(null,G__8339));
})())){
var G__8340 = pred;
var G__8341 = cljs.core.next(coll);
pred = G__8340;
coll = G__8341;
continue;
} else {
return false;

}
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for every x in
 * coll, else true.
 */
cljs.core.not_every_QMARK_ = (function cljs$core$not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
 * Returns the first logical true value of (pred x) for any x in coll,
 * else nil.  One common idiom is to use a set as pred, for example
 * this will return :fred if :fred is in the sequence, otherwise nil:
 * (some #{:fred} coll)
 */
cljs.core.some = (function cljs$core$some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__4020__auto__ = (function (){var G__8345 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8345) : pred.call(null,G__8345));
})();
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
var G__8346 = pred;
var G__8347 = cljs.core.next(coll);
pred = G__8346;
coll = G__8347;
continue;
}
} else {
return null;
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for any x in coll,
 * else true.
 */
cljs.core.not_any_QMARK_ = (function cljs$core$not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
 * Returns true if n is even, throws an exception if n is not an integer
 */
cljs.core.even_QMARK_ = (function cljs$core$even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
 * Returns true if n is odd, throws an exception if n is not an integer
 */
cljs.core.odd_QMARK_ = (function cljs$core$odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
 * Takes a fn f and returns a fn that takes the same arguments as f,
 * has the same effects, if any, and returns the opposite truth value.
 */
cljs.core.complement = (function cljs$core$complement(f){
return (function() {
var G__8354 = null;
var G__8354__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__8354__1 = (function (x){
return cljs.core.not((function (){var G__8351 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8351) : f.call(null,G__8351));
})());
});
var G__8354__2 = (function (x,y){
return cljs.core.not((function (){var G__8352 = x;
var G__8353 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8352,G__8353) : f.call(null,G__8352,G__8353));
})());
});
var G__8354__3 = (function() { 
var G__8355__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__8355 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__8356__i = 0, G__8356__a = new Array(arguments.length -  2);
while (G__8356__i < G__8356__a.length) {G__8356__a[G__8356__i] = arguments[G__8356__i + 2]; ++G__8356__i;}
  zs = new cljs.core.IndexedSeq(G__8356__a,0);
} 
return G__8355__delegate.call(this,x,y,zs);};
G__8355.cljs$lang$maxFixedArity = 2;
G__8355.cljs$lang$applyTo = (function (arglist__8357){
var x = cljs.core.first(arglist__8357);
arglist__8357 = cljs.core.next(arglist__8357);
var y = cljs.core.first(arglist__8357);
var zs = cljs.core.rest(arglist__8357);
return G__8355__delegate(x,y,zs);
});
G__8355.cljs$core$IFn$_invoke$arity$variadic = G__8355__delegate;
return G__8355;
})()
;
G__8354 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__8354__0.call(this);
case 1:
return G__8354__1.call(this,x);
case 2:
return G__8354__2.call(this,x,y);
default:
var G__8358 = null;
if (arguments.length > 2) {
var G__8359__i = 0, G__8359__a = new Array(arguments.length -  2);
while (G__8359__i < G__8359__a.length) {G__8359__a[G__8359__i] = arguments[G__8359__i + 2]; ++G__8359__i;}
G__8358 = new cljs.core.IndexedSeq(G__8359__a,0);
}
return G__8354__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8358);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8354.cljs$lang$maxFixedArity = 2;
G__8354.cljs$lang$applyTo = G__8354__3.cljs$lang$applyTo;
G__8354.cljs$core$IFn$_invoke$arity$0 = G__8354__0;
G__8354.cljs$core$IFn$_invoke$arity$1 = G__8354__1;
G__8354.cljs$core$IFn$_invoke$arity$2 = G__8354__2;
G__8354.cljs$core$IFn$_invoke$arity$variadic = G__8354__3.cljs$core$IFn$_invoke$arity$variadic;
return G__8354;
})()
});
/**
 * Returns a function that takes any number of arguments and returns x.
 */
cljs.core.constantly = (function cljs$core$constantly(x){
return (function() { 
var G__8360__delegate = function (args){
return x;
};
var G__8360 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8361__i = 0, G__8361__a = new Array(arguments.length -  0);
while (G__8361__i < G__8361__a.length) {G__8361__a[G__8361__i] = arguments[G__8361__i + 0]; ++G__8361__i;}
  args = new cljs.core.IndexedSeq(G__8361__a,0);
} 
return G__8360__delegate.call(this,args);};
G__8360.cljs$lang$maxFixedArity = 0;
G__8360.cljs$lang$applyTo = (function (arglist__8362){
var args = cljs.core.seq(arglist__8362);
return G__8360__delegate(args);
});
G__8360.cljs$core$IFn$_invoke$arity$variadic = G__8360__delegate;
return G__8360;
})()
;
});
/**
 * Takes a set of functions and returns a fn that is the composition
 * of those fns.  The returned fn takes a variable number of args,
 * applies the rightmost of fns to the args, the next
 * fn (right-to-left) to the result, etc.
 * @param {...*} var_args
 */
cljs.core.comp = (function() {
var cljs$core$comp = null;
var cljs$core$comp__0 = (function (){
return cljs.core.identity;
});
var cljs$core$comp__1 = (function (f){
return f;
});
var cljs$core$comp__2 = (function (f,g){
return (function() {
var G__8417 = null;
var G__8417__0 = (function (){
var G__8390 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8390) : f.call(null,G__8390));
});
var G__8417__1 = (function (x){
var G__8391 = (function (){var G__8392 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8392) : g.call(null,G__8392));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8391) : f.call(null,G__8391));
});
var G__8417__2 = (function (x,y){
var G__8393 = (function (){var G__8394 = x;
var G__8395 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__8394,G__8395) : g.call(null,G__8394,G__8395));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8393) : f.call(null,G__8393));
});
var G__8417__3 = (function (x,y,z){
var G__8396 = (function (){var G__8397 = x;
var G__8398 = y;
var G__8399 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__8397,G__8398,G__8399) : g.call(null,G__8397,G__8398,G__8399));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8396) : f.call(null,G__8396));
});
var G__8417__4 = (function() { 
var G__8418__delegate = function (x,y,z,args){
var G__8400 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8400) : f.call(null,G__8400));
};
var G__8418 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8419__i = 0, G__8419__a = new Array(arguments.length -  3);
while (G__8419__i < G__8419__a.length) {G__8419__a[G__8419__i] = arguments[G__8419__i + 3]; ++G__8419__i;}
  args = new cljs.core.IndexedSeq(G__8419__a,0);
} 
return G__8418__delegate.call(this,x,y,z,args);};
G__8418.cljs$lang$maxFixedArity = 3;
G__8418.cljs$lang$applyTo = (function (arglist__8420){
var x = cljs.core.first(arglist__8420);
arglist__8420 = cljs.core.next(arglist__8420);
var y = cljs.core.first(arglist__8420);
arglist__8420 = cljs.core.next(arglist__8420);
var z = cljs.core.first(arglist__8420);
var args = cljs.core.rest(arglist__8420);
return G__8418__delegate(x,y,z,args);
});
G__8418.cljs$core$IFn$_invoke$arity$variadic = G__8418__delegate;
return G__8418;
})()
;
G__8417 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8417__0.call(this);
case 1:
return G__8417__1.call(this,x);
case 2:
return G__8417__2.call(this,x,y);
case 3:
return G__8417__3.call(this,x,y,z);
default:
var G__8421 = null;
if (arguments.length > 3) {
var G__8422__i = 0, G__8422__a = new Array(arguments.length -  3);
while (G__8422__i < G__8422__a.length) {G__8422__a[G__8422__i] = arguments[G__8422__i + 3]; ++G__8422__i;}
G__8421 = new cljs.core.IndexedSeq(G__8422__a,0);
}
return G__8417__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8421);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8417.cljs$lang$maxFixedArity = 3;
G__8417.cljs$lang$applyTo = G__8417__4.cljs$lang$applyTo;
G__8417.cljs$core$IFn$_invoke$arity$0 = G__8417__0;
G__8417.cljs$core$IFn$_invoke$arity$1 = G__8417__1;
G__8417.cljs$core$IFn$_invoke$arity$2 = G__8417__2;
G__8417.cljs$core$IFn$_invoke$arity$3 = G__8417__3;
G__8417.cljs$core$IFn$_invoke$arity$variadic = G__8417__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8417;
})()
});
var cljs$core$comp__3 = (function (f,g,h){
return (function() {
var G__8423 = null;
var G__8423__0 = (function (){
var G__8401 = (function (){var G__8402 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8402) : g.call(null,G__8402));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8401) : f.call(null,G__8401));
});
var G__8423__1 = (function (x){
var G__8403 = (function (){var G__8404 = (function (){var G__8405 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__8405) : h.call(null,G__8405));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8404) : g.call(null,G__8404));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8403) : f.call(null,G__8403));
});
var G__8423__2 = (function (x,y){
var G__8406 = (function (){var G__8407 = (function (){var G__8408 = x;
var G__8409 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__8408,G__8409) : h.call(null,G__8408,G__8409));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8407) : g.call(null,G__8407));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8406) : f.call(null,G__8406));
});
var G__8423__3 = (function (x,y,z){
var G__8410 = (function (){var G__8411 = (function (){var G__8412 = x;
var G__8413 = y;
var G__8414 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__8412,G__8413,G__8414) : h.call(null,G__8412,G__8413,G__8414));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8411) : g.call(null,G__8411));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8410) : f.call(null,G__8410));
});
var G__8423__4 = (function() { 
var G__8424__delegate = function (x,y,z,args){
var G__8415 = (function (){var G__8416 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8416) : g.call(null,G__8416));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8415) : f.call(null,G__8415));
};
var G__8424 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8425__i = 0, G__8425__a = new Array(arguments.length -  3);
while (G__8425__i < G__8425__a.length) {G__8425__a[G__8425__i] = arguments[G__8425__i + 3]; ++G__8425__i;}
  args = new cljs.core.IndexedSeq(G__8425__a,0);
} 
return G__8424__delegate.call(this,x,y,z,args);};
G__8424.cljs$lang$maxFixedArity = 3;
G__8424.cljs$lang$applyTo = (function (arglist__8426){
var x = cljs.core.first(arglist__8426);
arglist__8426 = cljs.core.next(arglist__8426);
var y = cljs.core.first(arglist__8426);
arglist__8426 = cljs.core.next(arglist__8426);
var z = cljs.core.first(arglist__8426);
var args = cljs.core.rest(arglist__8426);
return G__8424__delegate(x,y,z,args);
});
G__8424.cljs$core$IFn$_invoke$arity$variadic = G__8424__delegate;
return G__8424;
})()
;
G__8423 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8423__0.call(this);
case 1:
return G__8423__1.call(this,x);
case 2:
return G__8423__2.call(this,x,y);
case 3:
return G__8423__3.call(this,x,y,z);
default:
var G__8427 = null;
if (arguments.length > 3) {
var G__8428__i = 0, G__8428__a = new Array(arguments.length -  3);
while (G__8428__i < G__8428__a.length) {G__8428__a[G__8428__i] = arguments[G__8428__i + 3]; ++G__8428__i;}
G__8427 = new cljs.core.IndexedSeq(G__8428__a,0);
}
return G__8423__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8427);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8423.cljs$lang$maxFixedArity = 3;
G__8423.cljs$lang$applyTo = G__8423__4.cljs$lang$applyTo;
G__8423.cljs$core$IFn$_invoke$arity$0 = G__8423__0;
G__8423.cljs$core$IFn$_invoke$arity$1 = G__8423__1;
G__8423.cljs$core$IFn$_invoke$arity$2 = G__8423__2;
G__8423.cljs$core$IFn$_invoke$arity$3 = G__8423__3;
G__8423.cljs$core$IFn$_invoke$arity$variadic = G__8423__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8423;
})()
});
var cljs$core$comp__4 = (function() { 
var G__8429__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__8430__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__8431 = cljs.core.first(fs__$2).call(null,ret);
var G__8432 = cljs.core.next(fs__$2);
ret = G__8431;
fs__$2 = G__8432;
continue;
} else {
return ret;
}
break;
}
};
var G__8430 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8433__i = 0, G__8433__a = new Array(arguments.length -  0);
while (G__8433__i < G__8433__a.length) {G__8433__a[G__8433__i] = arguments[G__8433__i + 0]; ++G__8433__i;}
  args = new cljs.core.IndexedSeq(G__8433__a,0);
} 
return G__8430__delegate.call(this,args);};
G__8430.cljs$lang$maxFixedArity = 0;
G__8430.cljs$lang$applyTo = (function (arglist__8434){
var args = cljs.core.seq(arglist__8434);
return G__8430__delegate(args);
});
G__8430.cljs$core$IFn$_invoke$arity$variadic = G__8430__delegate;
return G__8430;
})()
;
;})(fs__$1))
};
var G__8429 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__8435__i = 0, G__8435__a = new Array(arguments.length -  3);
while (G__8435__i < G__8435__a.length) {G__8435__a[G__8435__i] = arguments[G__8435__i + 3]; ++G__8435__i;}
  fs = new cljs.core.IndexedSeq(G__8435__a,0);
} 
return G__8429__delegate.call(this,f1,f2,f3,fs);};
G__8429.cljs$lang$maxFixedArity = 3;
G__8429.cljs$lang$applyTo = (function (arglist__8436){
var f1 = cljs.core.first(arglist__8436);
arglist__8436 = cljs.core.next(arglist__8436);
var f2 = cljs.core.first(arglist__8436);
arglist__8436 = cljs.core.next(arglist__8436);
var f3 = cljs.core.first(arglist__8436);
var fs = cljs.core.rest(arglist__8436);
return G__8429__delegate(f1,f2,f3,fs);
});
G__8429.cljs$core$IFn$_invoke$arity$variadic = G__8429__delegate;
return G__8429;
})()
;
cljs$core$comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return cljs$core$comp__0.call(this);
case 1:
return cljs$core$comp__1.call(this,f1);
case 2:
return cljs$core$comp__2.call(this,f1,f2);
case 3:
return cljs$core$comp__3.call(this,f1,f2,f3);
default:
var G__8437 = null;
if (arguments.length > 3) {
var G__8438__i = 0, G__8438__a = new Array(arguments.length -  3);
while (G__8438__i < G__8438__a.length) {G__8438__a[G__8438__i] = arguments[G__8438__i + 3]; ++G__8438__i;}
G__8437 = new cljs.core.IndexedSeq(G__8438__a,0);
}
return cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__8437);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$comp.cljs$lang$maxFixedArity = 3;
cljs$core$comp.cljs$lang$applyTo = cljs$core$comp__4.cljs$lang$applyTo;
cljs$core$comp.cljs$core$IFn$_invoke$arity$0 = cljs$core$comp__0;
cljs$core$comp.cljs$core$IFn$_invoke$arity$1 = cljs$core$comp__1;
cljs$core$comp.cljs$core$IFn$_invoke$arity$2 = cljs$core$comp__2;
cljs$core$comp.cljs$core$IFn$_invoke$arity$3 = cljs$core$comp__3;
cljs$core$comp.cljs$core$IFn$_invoke$arity$variadic = cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$comp;
})()
;
/**
 * Takes a function f and fewer than the normal arguments to f, and
 * returns a fn that takes a variable number of additional args. When
 * called, the returned function calls f with args + additional args.
 * @param {...*} var_args
 */
cljs.core.partial = (function() {
var cljs$core$partial = null;
var cljs$core$partial__1 = (function (f){
return f;
});
var cljs$core$partial__2 = (function (f,arg1){
return (function() {
var G__8523 = null;
var G__8523__0 = (function (){
var G__8481 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8481) : f.call(null,G__8481));
});
var G__8523__1 = (function (x){
var G__8482 = arg1;
var G__8483 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8482,G__8483) : f.call(null,G__8482,G__8483));
});
var G__8523__2 = (function (x,y){
var G__8484 = arg1;
var G__8485 = x;
var G__8486 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8484,G__8485,G__8486) : f.call(null,G__8484,G__8485,G__8486));
});
var G__8523__3 = (function (x,y,z){
var G__8487 = arg1;
var G__8488 = x;
var G__8489 = y;
var G__8490 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8487,G__8488,G__8489,G__8490) : f.call(null,G__8487,G__8488,G__8489,G__8490));
});
var G__8523__4 = (function() { 
var G__8524__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__8524 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8525__i = 0, G__8525__a = new Array(arguments.length -  3);
while (G__8525__i < G__8525__a.length) {G__8525__a[G__8525__i] = arguments[G__8525__i + 3]; ++G__8525__i;}
  args = new cljs.core.IndexedSeq(G__8525__a,0);
} 
return G__8524__delegate.call(this,x,y,z,args);};
G__8524.cljs$lang$maxFixedArity = 3;
G__8524.cljs$lang$applyTo = (function (arglist__8526){
var x = cljs.core.first(arglist__8526);
arglist__8526 = cljs.core.next(arglist__8526);
var y = cljs.core.first(arglist__8526);
arglist__8526 = cljs.core.next(arglist__8526);
var z = cljs.core.first(arglist__8526);
var args = cljs.core.rest(arglist__8526);
return G__8524__delegate(x,y,z,args);
});
G__8524.cljs$core$IFn$_invoke$arity$variadic = G__8524__delegate;
return G__8524;
})()
;
G__8523 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8523__0.call(this);
case 1:
return G__8523__1.call(this,x);
case 2:
return G__8523__2.call(this,x,y);
case 3:
return G__8523__3.call(this,x,y,z);
default:
var G__8527 = null;
if (arguments.length > 3) {
var G__8528__i = 0, G__8528__a = new Array(arguments.length -  3);
while (G__8528__i < G__8528__a.length) {G__8528__a[G__8528__i] = arguments[G__8528__i + 3]; ++G__8528__i;}
G__8527 = new cljs.core.IndexedSeq(G__8528__a,0);
}
return G__8523__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8527);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8523.cljs$lang$maxFixedArity = 3;
G__8523.cljs$lang$applyTo = G__8523__4.cljs$lang$applyTo;
G__8523.cljs$core$IFn$_invoke$arity$0 = G__8523__0;
G__8523.cljs$core$IFn$_invoke$arity$1 = G__8523__1;
G__8523.cljs$core$IFn$_invoke$arity$2 = G__8523__2;
G__8523.cljs$core$IFn$_invoke$arity$3 = G__8523__3;
G__8523.cljs$core$IFn$_invoke$arity$variadic = G__8523__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8523;
})()
});
var cljs$core$partial__3 = (function (f,arg1,arg2){
return (function() {
var G__8529 = null;
var G__8529__0 = (function (){
var G__8491 = arg1;
var G__8492 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8491,G__8492) : f.call(null,G__8491,G__8492));
});
var G__8529__1 = (function (x){
var G__8493 = arg1;
var G__8494 = arg2;
var G__8495 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8493,G__8494,G__8495) : f.call(null,G__8493,G__8494,G__8495));
});
var G__8529__2 = (function (x,y){
var G__8496 = arg1;
var G__8497 = arg2;
var G__8498 = x;
var G__8499 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8496,G__8497,G__8498,G__8499) : f.call(null,G__8496,G__8497,G__8498,G__8499));
});
var G__8529__3 = (function (x,y,z){
var G__8500 = arg1;
var G__8501 = arg2;
var G__8502 = x;
var G__8503 = y;
var G__8504 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8500,G__8501,G__8502,G__8503,G__8504) : f.call(null,G__8500,G__8501,G__8502,G__8503,G__8504));
});
var G__8529__4 = (function() { 
var G__8530__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__8530 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8531__i = 0, G__8531__a = new Array(arguments.length -  3);
while (G__8531__i < G__8531__a.length) {G__8531__a[G__8531__i] = arguments[G__8531__i + 3]; ++G__8531__i;}
  args = new cljs.core.IndexedSeq(G__8531__a,0);
} 
return G__8530__delegate.call(this,x,y,z,args);};
G__8530.cljs$lang$maxFixedArity = 3;
G__8530.cljs$lang$applyTo = (function (arglist__8532){
var x = cljs.core.first(arglist__8532);
arglist__8532 = cljs.core.next(arglist__8532);
var y = cljs.core.first(arglist__8532);
arglist__8532 = cljs.core.next(arglist__8532);
var z = cljs.core.first(arglist__8532);
var args = cljs.core.rest(arglist__8532);
return G__8530__delegate(x,y,z,args);
});
G__8530.cljs$core$IFn$_invoke$arity$variadic = G__8530__delegate;
return G__8530;
})()
;
G__8529 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8529__0.call(this);
case 1:
return G__8529__1.call(this,x);
case 2:
return G__8529__2.call(this,x,y);
case 3:
return G__8529__3.call(this,x,y,z);
default:
var G__8533 = null;
if (arguments.length > 3) {
var G__8534__i = 0, G__8534__a = new Array(arguments.length -  3);
while (G__8534__i < G__8534__a.length) {G__8534__a[G__8534__i] = arguments[G__8534__i + 3]; ++G__8534__i;}
G__8533 = new cljs.core.IndexedSeq(G__8534__a,0);
}
return G__8529__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8533);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8529.cljs$lang$maxFixedArity = 3;
G__8529.cljs$lang$applyTo = G__8529__4.cljs$lang$applyTo;
G__8529.cljs$core$IFn$_invoke$arity$0 = G__8529__0;
G__8529.cljs$core$IFn$_invoke$arity$1 = G__8529__1;
G__8529.cljs$core$IFn$_invoke$arity$2 = G__8529__2;
G__8529.cljs$core$IFn$_invoke$arity$3 = G__8529__3;
G__8529.cljs$core$IFn$_invoke$arity$variadic = G__8529__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8529;
})()
});
var cljs$core$partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__8535 = null;
var G__8535__0 = (function (){
var G__8505 = arg1;
var G__8506 = arg2;
var G__8507 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8505,G__8506,G__8507) : f.call(null,G__8505,G__8506,G__8507));
});
var G__8535__1 = (function (x){
var G__8508 = arg1;
var G__8509 = arg2;
var G__8510 = arg3;
var G__8511 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8508,G__8509,G__8510,G__8511) : f.call(null,G__8508,G__8509,G__8510,G__8511));
});
var G__8535__2 = (function (x,y){
var G__8512 = arg1;
var G__8513 = arg2;
var G__8514 = arg3;
var G__8515 = x;
var G__8516 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8512,G__8513,G__8514,G__8515,G__8516) : f.call(null,G__8512,G__8513,G__8514,G__8515,G__8516));
});
var G__8535__3 = (function (x,y,z){
var G__8517 = arg1;
var G__8518 = arg2;
var G__8519 = arg3;
var G__8520 = x;
var G__8521 = y;
var G__8522 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8517,G__8518,G__8519,G__8520,G__8521,G__8522) : f.call(null,G__8517,G__8518,G__8519,G__8520,G__8521,G__8522));
});
var G__8535__4 = (function() { 
var G__8536__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__8536 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8537__i = 0, G__8537__a = new Array(arguments.length -  3);
while (G__8537__i < G__8537__a.length) {G__8537__a[G__8537__i] = arguments[G__8537__i + 3]; ++G__8537__i;}
  args = new cljs.core.IndexedSeq(G__8537__a,0);
} 
return G__8536__delegate.call(this,x,y,z,args);};
G__8536.cljs$lang$maxFixedArity = 3;
G__8536.cljs$lang$applyTo = (function (arglist__8538){
var x = cljs.core.first(arglist__8538);
arglist__8538 = cljs.core.next(arglist__8538);
var y = cljs.core.first(arglist__8538);
arglist__8538 = cljs.core.next(arglist__8538);
var z = cljs.core.first(arglist__8538);
var args = cljs.core.rest(arglist__8538);
return G__8536__delegate(x,y,z,args);
});
G__8536.cljs$core$IFn$_invoke$arity$variadic = G__8536__delegate;
return G__8536;
})()
;
G__8535 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8535__0.call(this);
case 1:
return G__8535__1.call(this,x);
case 2:
return G__8535__2.call(this,x,y);
case 3:
return G__8535__3.call(this,x,y,z);
default:
var G__8539 = null;
if (arguments.length > 3) {
var G__8540__i = 0, G__8540__a = new Array(arguments.length -  3);
while (G__8540__i < G__8540__a.length) {G__8540__a[G__8540__i] = arguments[G__8540__i + 3]; ++G__8540__i;}
G__8539 = new cljs.core.IndexedSeq(G__8540__a,0);
}
return G__8535__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8539);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8535.cljs$lang$maxFixedArity = 3;
G__8535.cljs$lang$applyTo = G__8535__4.cljs$lang$applyTo;
G__8535.cljs$core$IFn$_invoke$arity$0 = G__8535__0;
G__8535.cljs$core$IFn$_invoke$arity$1 = G__8535__1;
G__8535.cljs$core$IFn$_invoke$arity$2 = G__8535__2;
G__8535.cljs$core$IFn$_invoke$arity$3 = G__8535__3;
G__8535.cljs$core$IFn$_invoke$arity$variadic = G__8535__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8535;
})()
});
var cljs$core$partial__5 = (function() { 
var G__8541__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__8542__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__8542 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8543__i = 0, G__8543__a = new Array(arguments.length -  0);
while (G__8543__i < G__8543__a.length) {G__8543__a[G__8543__i] = arguments[G__8543__i + 0]; ++G__8543__i;}
  args = new cljs.core.IndexedSeq(G__8543__a,0);
} 
return G__8542__delegate.call(this,args);};
G__8542.cljs$lang$maxFixedArity = 0;
G__8542.cljs$lang$applyTo = (function (arglist__8544){
var args = cljs.core.seq(arglist__8544);
return G__8542__delegate(args);
});
G__8542.cljs$core$IFn$_invoke$arity$variadic = G__8542__delegate;
return G__8542;
})()
;
};
var G__8541 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__8545__i = 0, G__8545__a = new Array(arguments.length -  4);
while (G__8545__i < G__8545__a.length) {G__8545__a[G__8545__i] = arguments[G__8545__i + 4]; ++G__8545__i;}
  more = new cljs.core.IndexedSeq(G__8545__a,0);
} 
return G__8541__delegate.call(this,f,arg1,arg2,arg3,more);};
G__8541.cljs$lang$maxFixedArity = 4;
G__8541.cljs$lang$applyTo = (function (arglist__8546){
var f = cljs.core.first(arglist__8546);
arglist__8546 = cljs.core.next(arglist__8546);
var arg1 = cljs.core.first(arglist__8546);
arglist__8546 = cljs.core.next(arglist__8546);
var arg2 = cljs.core.first(arglist__8546);
arglist__8546 = cljs.core.next(arglist__8546);
var arg3 = cljs.core.first(arglist__8546);
var more = cljs.core.rest(arglist__8546);
return G__8541__delegate(f,arg1,arg2,arg3,more);
});
G__8541.cljs$core$IFn$_invoke$arity$variadic = G__8541__delegate;
return G__8541;
})()
;
cljs$core$partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$partial__1.call(this,f);
case 2:
return cljs$core$partial__2.call(this,f,arg1);
case 3:
return cljs$core$partial__3.call(this,f,arg1,arg2);
case 4:
return cljs$core$partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__8547 = null;
if (arguments.length > 4) {
var G__8548__i = 0, G__8548__a = new Array(arguments.length -  4);
while (G__8548__i < G__8548__a.length) {G__8548__a[G__8548__i] = arguments[G__8548__i + 4]; ++G__8548__i;}
G__8547 = new cljs.core.IndexedSeq(G__8548__a,0);
}
return cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__8547);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partial.cljs$lang$maxFixedArity = 4;
cljs$core$partial.cljs$lang$applyTo = cljs$core$partial__5.cljs$lang$applyTo;
cljs$core$partial.cljs$core$IFn$_invoke$arity$1 = cljs$core$partial__1;
cljs$core$partial.cljs$core$IFn$_invoke$arity$2 = cljs$core$partial__2;
cljs$core$partial.cljs$core$IFn$_invoke$arity$3 = cljs$core$partial__3;
cljs$core$partial.cljs$core$IFn$_invoke$arity$4 = cljs$core$partial__4;
cljs$core$partial.cljs$core$IFn$_invoke$arity$variadic = cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$partial;
})()
;
/**
 * Takes a function f, and returns a function that calls f, replacing
 * a nil first argument to f with the supplied value x. Higher arity
 * versions can replace arguments in the second and third
 * positions (y, z). Note that the function f can take any number of
 * arguments, not just the one(s) being nil-patched.
 */
cljs.core.fnil = (function() {
var cljs$core$fnil = null;
var cljs$core$fnil__2 = (function (f,x){
return (function() {
var G__8581 = null;
var G__8581__1 = (function (a){
var G__8565 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8565) : f.call(null,G__8565));
});
var G__8581__2 = (function (a,b){
var G__8566 = (((a == null))?x:a);
var G__8567 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8566,G__8567) : f.call(null,G__8566,G__8567));
});
var G__8581__3 = (function (a,b,c){
var G__8568 = (((a == null))?x:a);
var G__8569 = b;
var G__8570 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8568,G__8569,G__8570) : f.call(null,G__8568,G__8569,G__8570));
});
var G__8581__4 = (function() { 
var G__8582__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__8582 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8583__i = 0, G__8583__a = new Array(arguments.length -  3);
while (G__8583__i < G__8583__a.length) {G__8583__a[G__8583__i] = arguments[G__8583__i + 3]; ++G__8583__i;}
  ds = new cljs.core.IndexedSeq(G__8583__a,0);
} 
return G__8582__delegate.call(this,a,b,c,ds);};
G__8582.cljs$lang$maxFixedArity = 3;
G__8582.cljs$lang$applyTo = (function (arglist__8584){
var a = cljs.core.first(arglist__8584);
arglist__8584 = cljs.core.next(arglist__8584);
var b = cljs.core.first(arglist__8584);
arglist__8584 = cljs.core.next(arglist__8584);
var c = cljs.core.first(arglist__8584);
var ds = cljs.core.rest(arglist__8584);
return G__8582__delegate(a,b,c,ds);
});
G__8582.cljs$core$IFn$_invoke$arity$variadic = G__8582__delegate;
return G__8582;
})()
;
G__8581 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__8581__1.call(this,a);
case 2:
return G__8581__2.call(this,a,b);
case 3:
return G__8581__3.call(this,a,b,c);
default:
var G__8585 = null;
if (arguments.length > 3) {
var G__8586__i = 0, G__8586__a = new Array(arguments.length -  3);
while (G__8586__i < G__8586__a.length) {G__8586__a[G__8586__i] = arguments[G__8586__i + 3]; ++G__8586__i;}
G__8585 = new cljs.core.IndexedSeq(G__8586__a,0);
}
return G__8581__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8585);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8581.cljs$lang$maxFixedArity = 3;
G__8581.cljs$lang$applyTo = G__8581__4.cljs$lang$applyTo;
G__8581.cljs$core$IFn$_invoke$arity$1 = G__8581__1;
G__8581.cljs$core$IFn$_invoke$arity$2 = G__8581__2;
G__8581.cljs$core$IFn$_invoke$arity$3 = G__8581__3;
G__8581.cljs$core$IFn$_invoke$arity$variadic = G__8581__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8581;
})()
});
var cljs$core$fnil__3 = (function (f,x,y){
return (function() {
var G__8587 = null;
var G__8587__2 = (function (a,b){
var G__8571 = (((a == null))?x:a);
var G__8572 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8571,G__8572) : f.call(null,G__8571,G__8572));
});
var G__8587__3 = (function (a,b,c){
var G__8573 = (((a == null))?x:a);
var G__8574 = (((b == null))?y:b);
var G__8575 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8573,G__8574,G__8575) : f.call(null,G__8573,G__8574,G__8575));
});
var G__8587__4 = (function() { 
var G__8588__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__8588 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8589__i = 0, G__8589__a = new Array(arguments.length -  3);
while (G__8589__i < G__8589__a.length) {G__8589__a[G__8589__i] = arguments[G__8589__i + 3]; ++G__8589__i;}
  ds = new cljs.core.IndexedSeq(G__8589__a,0);
} 
return G__8588__delegate.call(this,a,b,c,ds);};
G__8588.cljs$lang$maxFixedArity = 3;
G__8588.cljs$lang$applyTo = (function (arglist__8590){
var a = cljs.core.first(arglist__8590);
arglist__8590 = cljs.core.next(arglist__8590);
var b = cljs.core.first(arglist__8590);
arglist__8590 = cljs.core.next(arglist__8590);
var c = cljs.core.first(arglist__8590);
var ds = cljs.core.rest(arglist__8590);
return G__8588__delegate(a,b,c,ds);
});
G__8588.cljs$core$IFn$_invoke$arity$variadic = G__8588__delegate;
return G__8588;
})()
;
G__8587 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8587__2.call(this,a,b);
case 3:
return G__8587__3.call(this,a,b,c);
default:
var G__8591 = null;
if (arguments.length > 3) {
var G__8592__i = 0, G__8592__a = new Array(arguments.length -  3);
while (G__8592__i < G__8592__a.length) {G__8592__a[G__8592__i] = arguments[G__8592__i + 3]; ++G__8592__i;}
G__8591 = new cljs.core.IndexedSeq(G__8592__a,0);
}
return G__8587__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8591);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8587.cljs$lang$maxFixedArity = 3;
G__8587.cljs$lang$applyTo = G__8587__4.cljs$lang$applyTo;
G__8587.cljs$core$IFn$_invoke$arity$2 = G__8587__2;
G__8587.cljs$core$IFn$_invoke$arity$3 = G__8587__3;
G__8587.cljs$core$IFn$_invoke$arity$variadic = G__8587__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8587;
})()
});
var cljs$core$fnil__4 = (function (f,x,y,z){
return (function() {
var G__8593 = null;
var G__8593__2 = (function (a,b){
var G__8576 = (((a == null))?x:a);
var G__8577 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8576,G__8577) : f.call(null,G__8576,G__8577));
});
var G__8593__3 = (function (a,b,c){
var G__8578 = (((a == null))?x:a);
var G__8579 = (((b == null))?y:b);
var G__8580 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8578,G__8579,G__8580) : f.call(null,G__8578,G__8579,G__8580));
});
var G__8593__4 = (function() { 
var G__8594__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__8594 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8595__i = 0, G__8595__a = new Array(arguments.length -  3);
while (G__8595__i < G__8595__a.length) {G__8595__a[G__8595__i] = arguments[G__8595__i + 3]; ++G__8595__i;}
  ds = new cljs.core.IndexedSeq(G__8595__a,0);
} 
return G__8594__delegate.call(this,a,b,c,ds);};
G__8594.cljs$lang$maxFixedArity = 3;
G__8594.cljs$lang$applyTo = (function (arglist__8596){
var a = cljs.core.first(arglist__8596);
arglist__8596 = cljs.core.next(arglist__8596);
var b = cljs.core.first(arglist__8596);
arglist__8596 = cljs.core.next(arglist__8596);
var c = cljs.core.first(arglist__8596);
var ds = cljs.core.rest(arglist__8596);
return G__8594__delegate(a,b,c,ds);
});
G__8594.cljs$core$IFn$_invoke$arity$variadic = G__8594__delegate;
return G__8594;
})()
;
G__8593 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8593__2.call(this,a,b);
case 3:
return G__8593__3.call(this,a,b,c);
default:
var G__8597 = null;
if (arguments.length > 3) {
var G__8598__i = 0, G__8598__a = new Array(arguments.length -  3);
while (G__8598__i < G__8598__a.length) {G__8598__a[G__8598__i] = arguments[G__8598__i + 3]; ++G__8598__i;}
G__8597 = new cljs.core.IndexedSeq(G__8598__a,0);
}
return G__8593__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8597);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8593.cljs$lang$maxFixedArity = 3;
G__8593.cljs$lang$applyTo = G__8593__4.cljs$lang$applyTo;
G__8593.cljs$core$IFn$_invoke$arity$2 = G__8593__2;
G__8593.cljs$core$IFn$_invoke$arity$3 = G__8593__3;
G__8593.cljs$core$IFn$_invoke$arity$variadic = G__8593__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8593;
})()
});
cljs$core$fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return cljs$core$fnil__2.call(this,f,x);
case 3:
return cljs$core$fnil__3.call(this,f,x,y);
case 4:
return cljs$core$fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$fnil.cljs$core$IFn$_invoke$arity$2 = cljs$core$fnil__2;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$3 = cljs$core$fnil__3;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$4 = cljs$core$fnil__4;
return cljs$core$fnil;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to 0
 * and the first item of coll, followed by applying f to 1 and the second
 * item in coll, etc, until coll is exhausted. Thus function f should
 * accept 2 arguments, index and item.
 */
cljs.core.map_indexed = (function() {
var cljs$core$map_indexed = null;
var cljs$core$map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__8629 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__8629) : cljs.core.volatile_BANG_.call(null,G__8629));
})();
return ((function (i){
return (function() {
var G__8659 = null;
var G__8659__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8659__1 = (function (result){
var G__8630 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8630) : rf.call(null,G__8630));
});
var G__8659__2 = (function (result,input){
var G__8631 = result;
var G__8632 = (function (){var G__8633 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__8634 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8633,G__8634) : f.call(null,G__8633,G__8634));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8631,G__8632) : rf.call(null,G__8631,G__8632));
});
G__8659 = function(result,input){
switch(arguments.length){
case 0:
return G__8659__0.call(this);
case 1:
return G__8659__1.call(this,result);
case 2:
return G__8659__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8659.cljs$core$IFn$_invoke$arity$0 = G__8659__0;
G__8659.cljs$core$IFn$_invoke$arity$1 = G__8659__1;
G__8659.cljs$core$IFn$_invoke$arity$2 = G__8659__2;
return G__8659;
})()
;})(i))
});
});
var cljs$core$map_indexed__2 = (function (f,coll){
var mapi = (function cljs$core$map_indexed_$_mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4907__auto___8660 = size;
var i_8661 = (0);
while(true){
if((i_8661 < n__4907__auto___8660)){
cljs.core.chunk_append(b,(function (){var G__8655 = (idx + i_8661);
var G__8656 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8661);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8655,G__8656) : f.call(null,G__8655,G__8656));
})());

var G__8662 = (i_8661 + (1));
i_8661 = G__8662;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map_indexed_$_mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__8657 = idx;
var G__8658 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8657,G__8658) : f.call(null,G__8657,G__8658));
})(),cljs$core$map_indexed_$_mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
cljs$core$map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$map_indexed__1.call(this,f);
case 2:
return cljs$core$map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$map_indexed__1;
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$map_indexed__2;
return cljs$core$map_indexed;
})()
;
/**
 * Returns a lazy sequence of the non-nil results of (f item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a transducer when no collection is provided.
 */
cljs.core.keep = (function() {
var cljs$core$keep = null;
var cljs$core$keep__1 = (function (f){
return (function (rf){
return (function() {
var G__8681 = null;
var G__8681__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8681__1 = (function (result){
var G__8675 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8675) : rf.call(null,G__8675));
});
var G__8681__2 = (function (result,input){
var v = (function (){var G__8676 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8676) : f.call(null,G__8676));
})();
if((v == null)){
return result;
} else {
var G__8677 = result;
var G__8678 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8677,G__8678) : rf.call(null,G__8677,G__8678));
}
});
G__8681 = function(result,input){
switch(arguments.length){
case 0:
return G__8681__0.call(this);
case 1:
return G__8681__1.call(this,result);
case 2:
return G__8681__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8681.cljs$core$IFn$_invoke$arity$0 = G__8681__0;
G__8681.cljs$core$IFn$_invoke$arity$1 = G__8681__1;
G__8681.cljs$core$IFn$_invoke$arity$2 = G__8681__2;
return G__8681;
})()
});
});
var cljs$core$keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4907__auto___8682 = size;
var i_8683 = (0);
while(true){
if((i_8683 < n__4907__auto___8682)){
var x_8684 = (function (){var G__8679 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8683);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8679) : f.call(null,G__8679));
})();
if((x_8684 == null)){
} else {
cljs.core.chunk_append(b,x_8684);
}

var G__8685 = (i_8683 + (1));
i_8683 = G__8685;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8680 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8680) : f.call(null,G__8680));
})();
if((x == null)){
return cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$keep = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep__1.call(this,f);
case 2:
return cljs$core$keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep__1;
cljs$core$keep.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep__2;
return cljs$core$keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__8686 = this$__$1;
return goog.getUid(G__8686);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__8687 = cljs.core.seq(self__.watches);
var chunk__8688 = null;
var count__8689 = (0);
var i__8690 = (0);
while(true){
if((i__8690 < count__8689)){
var vec__8691 = chunk__8688.cljs$core$IIndexed$_nth$arity$2(null,i__8690);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8691,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8691,(1),null);
var G__8692_8701 = key;
var G__8693_8702 = this$__$1;
var G__8694_8703 = oldval;
var G__8695_8704 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8692_8701,G__8693_8702,G__8694_8703,G__8695_8704) : f.call(null,G__8692_8701,G__8693_8702,G__8694_8703,G__8695_8704));

var G__8705 = seq__8687;
var G__8706 = chunk__8688;
var G__8707 = count__8689;
var G__8708 = (i__8690 + (1));
seq__8687 = G__8705;
chunk__8688 = G__8706;
count__8689 = G__8707;
i__8690 = G__8708;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__8687);
if(temp__4126__auto__){
var seq__8687__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8687__$1)){
var c__4807__auto__ = cljs.core.chunk_first(seq__8687__$1);
var G__8709 = cljs.core.chunk_rest(seq__8687__$1);
var G__8710 = c__4807__auto__;
var G__8711 = cljs.core.count(c__4807__auto__);
var G__8712 = (0);
seq__8687 = G__8709;
chunk__8688 = G__8710;
count__8689 = G__8711;
i__8690 = G__8712;
continue;
} else {
var vec__8696 = cljs.core.first(seq__8687__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8696,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8696,(1),null);
var G__8697_8713 = key;
var G__8698_8714 = this$__$1;
var G__8699_8715 = oldval;
var G__8700_8716 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8697_8713,G__8698_8714,G__8699_8715,G__8700_8716) : f.call(null,G__8697_8713,G__8698_8714,G__8699_8715,G__8700_8716));

var G__8717 = cljs.core.next(seq__8687__$1);
var G__8718 = null;
var G__8719 = (0);
var G__8720 = (0);
seq__8687 = G__8717;
chunk__8688 = G__8718;
count__8689 = G__8719;
i__8690 = G__8720;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function cljs$core$__GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
 * Creates and returns an Atom with an initial value of x and zero or
 * more options (in any order):
 * 
 * :meta metadata-map
 * 
 * :validator validate-fn
 * 
 * If metadata-map is supplied, it will be come the metadata on the
 * atom. validate-fn must be nil or a side-effect-free fn of one
 * argument, which will be passed the intended new state on any state
 * change. If the new state is unacceptable, the validate-fn should
 * return false or throw an Error.  If either of these error conditions
 * occur, then the value of the atom will not change.
 * @param {...*} var_args
 */
cljs.core.atom = (function() {
var cljs$core$atom = null;
var cljs$core$atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var cljs$core$atom__2 = (function() { 
var G__8724__delegate = function (x,p__8721){
var map__8723 = p__8721;
var map__8723__$1 = ((cljs.core.seq_QMARK_(map__8723))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__8723):map__8723);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8723__$1,cljs.core.constant$keyword$_COLON_validator);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8723__$1,cljs.core.constant$keyword$_COLON_meta);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__8724 = function (x,var_args){
var p__8721 = null;
if (arguments.length > 1) {
var G__8725__i = 0, G__8725__a = new Array(arguments.length -  1);
while (G__8725__i < G__8725__a.length) {G__8725__a[G__8725__i] = arguments[G__8725__i + 1]; ++G__8725__i;}
  p__8721 = new cljs.core.IndexedSeq(G__8725__a,0);
} 
return G__8724__delegate.call(this,x,p__8721);};
G__8724.cljs$lang$maxFixedArity = 1;
G__8724.cljs$lang$applyTo = (function (arglist__8726){
var x = cljs.core.first(arglist__8726);
var p__8721 = cljs.core.rest(arglist__8726);
return G__8724__delegate(x,p__8721);
});
G__8724.cljs$core$IFn$_invoke$arity$variadic = G__8724__delegate;
return G__8724;
})()
;
cljs$core$atom = function(x,var_args){
var p__8721 = var_args;
switch(arguments.length){
case 1:
return cljs$core$atom__1.call(this,x);
default:
var G__8727 = null;
if (arguments.length > 1) {
var G__8728__i = 0, G__8728__a = new Array(arguments.length -  1);
while (G__8728__i < G__8728__a.length) {G__8728__a[G__8728__i] = arguments[G__8728__i + 1]; ++G__8728__i;}
G__8727 = new cljs.core.IndexedSeq(G__8728__a,0);
}
return cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__8727);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$atom.cljs$lang$maxFixedArity = 1;
cljs$core$atom.cljs$lang$applyTo = cljs$core$atom__2.cljs$lang$applyTo;
cljs$core$atom.cljs$core$IFn$_invoke$arity$1 = cljs$core$atom__1;
cljs$core$atom.cljs$core$IFn$_invoke$arity$variadic = cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$atom;
})()
;
/**
 * Sets the value of atom to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.reset_BANG_ = (function cljs$core$reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__8731 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__8731) : validate.call(null,G__8731));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__8732 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8732) : cljs.core.pr_str.call(null,G__8732));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
 * Atomically swaps the value of atom to be:
 * (apply f current-value-of-atom args). Note that f may be called
 * multiple times, and thus should be free of side effects.  Returns
 * the value that was swapped in.
 * @param {...*} var_args
 */
cljs.core.swap_BANG_ = (function() {
var cljs$core$swap_BANG_ = null;
var cljs$core$swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8739 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8739) : f.call(null,G__8739));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var cljs$core$swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8740 = a.state;
var G__8741 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8740,G__8741) : f.call(null,G__8740,G__8741));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var cljs$core$swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8742 = a.state;
var G__8743 = x;
var G__8744 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8742,G__8743,G__8744) : f.call(null,G__8742,G__8743,G__8744));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var cljs$core$swap_BANG___5 = (function() { 
var G__8745__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__8745 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__8746__i = 0, G__8746__a = new Array(arguments.length -  4);
while (G__8746__i < G__8746__a.length) {G__8746__a[G__8746__i] = arguments[G__8746__i + 4]; ++G__8746__i;}
  more = new cljs.core.IndexedSeq(G__8746__a,0);
} 
return G__8745__delegate.call(this,a,f,x,y,more);};
G__8745.cljs$lang$maxFixedArity = 4;
G__8745.cljs$lang$applyTo = (function (arglist__8747){
var a = cljs.core.first(arglist__8747);
arglist__8747 = cljs.core.next(arglist__8747);
var f = cljs.core.first(arglist__8747);
arglist__8747 = cljs.core.next(arglist__8747);
var x = cljs.core.first(arglist__8747);
arglist__8747 = cljs.core.next(arglist__8747);
var y = cljs.core.first(arglist__8747);
var more = cljs.core.rest(arglist__8747);
return G__8745__delegate(a,f,x,y,more);
});
G__8745.cljs$core$IFn$_invoke$arity$variadic = G__8745__delegate;
return G__8745;
})()
;
cljs$core$swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$swap_BANG___2.call(this,a,f);
case 3:
return cljs$core$swap_BANG___3.call(this,a,f,x);
case 4:
return cljs$core$swap_BANG___4.call(this,a,f,x,y);
default:
var G__8748 = null;
if (arguments.length > 4) {
var G__8749__i = 0, G__8749__a = new Array(arguments.length -  4);
while (G__8749__i < G__8749__a.length) {G__8749__a[G__8749__i] = arguments[G__8749__i + 4]; ++G__8749__i;}
G__8748 = new cljs.core.IndexedSeq(G__8749__a,0);
}
return cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__8748);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs$core$swap_BANG_.cljs$lang$applyTo = cljs$core$swap_BANG___5.cljs$lang$applyTo;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$swap_BANG___2;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$swap_BANG___3;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$swap_BANG___4;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$swap_BANG_;
})()
;
/**
 * Atomically sets the value of atom to newval if and only if the
 * current value of the atom is equal to oldval. Returns true if
 * set happened, else false.
 */
cljs.core.compare_and_set_BANG_ = (function cljs$core$compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
 * Sets the validator-fn for an atom. validator-fn must be nil or a
 * side-effect-free fn of one argument, which will be passed the intended
 * new state on any state change. If the new state is unacceptable, the
 * validator-fn should return false or throw an Error. If the current state
 * is not acceptable to the new validator, an Error will be thrown and the
 * validator will not be changed.
 */
cljs.core.set_validator_BANG_ = (function cljs$core$set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
 * Gets the validator-fn for a var/ref/agent/atom.
 */
cljs.core.get_validator = (function cljs$core$get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function cljs$core$__GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
 * Creates and returns a Volatile with an initial value of val.
 */
cljs.core.volatile_BANG_ = (function cljs$core$volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
 * Returns true if x is a volatile.
 */
cljs.core.volatile_QMARK_ = (function cljs$core$volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
 * Sets the value of volatile to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.vreset_BANG_ = (function cljs$core$vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
 * Returns a lazy sequence of the non-nil results of (f index item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a stateful transducer when no collection is
 * provided.
 */
cljs.core.keep_indexed = (function() {
var cljs$core$keep_indexed = null;
var cljs$core$keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__8816 = null;
var G__8816__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8816__1 = (function (result){
var G__8783 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8783) : rf.call(null,G__8783));
});
var G__8816__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__8784 = i;
var G__8785 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8784,G__8785) : f.call(null,G__8784,G__8785));
})();
if((v == null)){
return result;
} else {
var G__8786 = result;
var G__8787 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8786,G__8787) : rf.call(null,G__8786,G__8787));
}
});
G__8816 = function(result,input){
switch(arguments.length){
case 0:
return G__8816__0.call(this);
case 1:
return G__8816__1.call(this,result);
case 2:
return G__8816__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8816.cljs$core$IFn$_invoke$arity$0 = G__8816__0;
G__8816.cljs$core$IFn$_invoke$arity$1 = G__8816__1;
G__8816.cljs$core$IFn$_invoke$arity$2 = G__8816__2;
return G__8816;
})()
;})(ia))
});
});
var cljs$core$keep_indexed__2 = (function (f,coll){
var keepi = (function cljs$core$keep_indexed_$_keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4907__auto___8817 = size;
var i_8818 = (0);
while(true){
if((i_8818 < n__4907__auto___8817)){
var x_8819 = (function (){var G__8812 = (idx + i_8818);
var G__8813 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8818);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8812,G__8813) : f.call(null,G__8812,G__8813));
})();
if((x_8819 == null)){
} else {
cljs.core.chunk_append(b,x_8819);
}

var G__8820 = (i_8818 + (1));
i_8818 = G__8820;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep_indexed_$_keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8814 = idx;
var G__8815 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8814,G__8815) : f.call(null,G__8814,G__8815));
})();
if((x == null)){
return cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
cljs$core$keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep_indexed__1.call(this,f);
case 2:
return cljs$core$keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep_indexed__1;
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep_indexed__2;
return cljs$core$keep_indexed;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns true if all of its
 * composing predicates return a logical true value against all of its arguments, else it returns
 * false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical false result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.every_pred = (function() {
var cljs$core$every_pred = null;
var cljs$core$every_pred__1 = (function (p){
return (function() {
var cljs$core$every_pred_$_ep1 = null;
var cljs$core$every_pred_$_ep1__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__9034 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9034) : p.call(null,G__9034));
})());
});
var cljs$core$every_pred_$_ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4008__auto__ = (function (){var G__9036 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9036) : p.call(null,G__9036));
})();
if(cljs.core.truth_(and__4008__auto__)){
var G__9037 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9037) : p.call(null,G__9037));
} else {
return and__4008__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4008__auto__ = (function (){var G__9039 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9039) : p.call(null,G__9039));
})();
if(cljs.core.truth_(and__4008__auto__)){
var and__4008__auto____$1 = (function (){var G__9041 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9041) : p.call(null,G__9041));
})();
if(cljs.core.truth_(and__4008__auto____$1)){
var G__9042 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9042) : p.call(null,G__9042));
} else {
return and__4008__auto____$1;
}
} else {
return and__4008__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__4 = (function() { 
var G__9211__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__9211 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9212__i = 0, G__9212__a = new Array(arguments.length -  3);
while (G__9212__i < G__9212__a.length) {G__9212__a[G__9212__i] = arguments[G__9212__i + 3]; ++G__9212__i;}
  args = new cljs.core.IndexedSeq(G__9212__a,0);
} 
return G__9211__delegate.call(this,x,y,z,args);};
G__9211.cljs$lang$maxFixedArity = 3;
G__9211.cljs$lang$applyTo = (function (arglist__9213){
var x = cljs.core.first(arglist__9213);
arglist__9213 = cljs.core.next(arglist__9213);
var y = cljs.core.first(arglist__9213);
arglist__9213 = cljs.core.next(arglist__9213);
var z = cljs.core.first(arglist__9213);
var args = cljs.core.rest(arglist__9213);
return G__9211__delegate(x,y,z,args);
});
G__9211.cljs$core$IFn$_invoke$arity$variadic = G__9211__delegate;
return G__9211;
})()
;
cljs$core$every_pred_$_ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep1__0.call(this);
case 1:
return cljs$core$every_pred_$_ep1__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep1__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep1__3.call(this,x,y,z);
default:
var G__9214 = null;
if (arguments.length > 3) {
var G__9215__i = 0, G__9215__a = new Array(arguments.length -  3);
while (G__9215__i < G__9215__a.length) {G__9215__a[G__9215__i] = arguments[G__9215__i + 3]; ++G__9215__i;}
G__9214 = new cljs.core.IndexedSeq(G__9215__a,0);
}
return cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9214);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep1.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep1.cljs$lang$applyTo = cljs$core$every_pred_$_ep1__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep1__0;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep1__1;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep1__2;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep1__3;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep1;
})()
});
var cljs$core$every_pred__2 = (function (p1,p2){
return (function() {
var cljs$core$every_pred_$_ep2 = null;
var cljs$core$every_pred_$_ep2__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__4008__auto__ = (function (){var G__9074 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9074) : p1.call(null,G__9074));
})();
if(cljs.core.truth_(and__4008__auto__)){
var G__9075 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9075) : p2.call(null,G__9075));
} else {
return and__4008__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4008__auto__ = (function (){var G__9077 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9077) : p1.call(null,G__9077));
})();
if(cljs.core.truth_(and__4008__auto__)){
var and__4008__auto____$1 = (function (){var G__9079 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9079) : p1.call(null,G__9079));
})();
if(cljs.core.truth_(and__4008__auto____$1)){
var and__4008__auto____$2 = (function (){var G__9081 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9081) : p2.call(null,G__9081));
})();
if(cljs.core.truth_(and__4008__auto____$2)){
var G__9082 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9082) : p2.call(null,G__9082));
} else {
return and__4008__auto____$2;
}
} else {
return and__4008__auto____$1;
}
} else {
return and__4008__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4008__auto__ = (function (){var G__9084 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9084) : p1.call(null,G__9084));
})();
if(cljs.core.truth_(and__4008__auto__)){
var and__4008__auto____$1 = (function (){var G__9086 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9086) : p1.call(null,G__9086));
})();
if(cljs.core.truth_(and__4008__auto____$1)){
var and__4008__auto____$2 = (function (){var G__9088 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9088) : p1.call(null,G__9088));
})();
if(cljs.core.truth_(and__4008__auto____$2)){
var and__4008__auto____$3 = (function (){var G__9090 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9090) : p2.call(null,G__9090));
})();
if(cljs.core.truth_(and__4008__auto____$3)){
var and__4008__auto____$4 = (function (){var G__9092 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9092) : p2.call(null,G__9092));
})();
if(cljs.core.truth_(and__4008__auto____$4)){
var G__9093 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9093) : p2.call(null,G__9093));
} else {
return and__4008__auto____$4;
}
} else {
return and__4008__auto____$3;
}
} else {
return and__4008__auto____$2;
}
} else {
return and__4008__auto____$1;
}
} else {
return and__4008__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__4 = (function() { 
var G__9216__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8821_SHARP_){
var and__4008__auto__ = (function (){var G__9098 = p1__8821_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9098) : p1.call(null,G__9098));
})();
if(cljs.core.truth_(and__4008__auto__)){
var G__9099 = p1__8821_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9099) : p2.call(null,G__9099));
} else {
return and__4008__auto__;
}
}),args)));
};
var G__9216 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9217__i = 0, G__9217__a = new Array(arguments.length -  3);
while (G__9217__i < G__9217__a.length) {G__9217__a[G__9217__i] = arguments[G__9217__i + 3]; ++G__9217__i;}
  args = new cljs.core.IndexedSeq(G__9217__a,0);
} 
return G__9216__delegate.call(this,x,y,z,args);};
G__9216.cljs$lang$maxFixedArity = 3;
G__9216.cljs$lang$applyTo = (function (arglist__9218){
var x = cljs.core.first(arglist__9218);
arglist__9218 = cljs.core.next(arglist__9218);
var y = cljs.core.first(arglist__9218);
arglist__9218 = cljs.core.next(arglist__9218);
var z = cljs.core.first(arglist__9218);
var args = cljs.core.rest(arglist__9218);
return G__9216__delegate(x,y,z,args);
});
G__9216.cljs$core$IFn$_invoke$arity$variadic = G__9216__delegate;
return G__9216;
})()
;
cljs$core$every_pred_$_ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep2__0.call(this);
case 1:
return cljs$core$every_pred_$_ep2__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep2__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep2__3.call(this,x,y,z);
default:
var G__9219 = null;
if (arguments.length > 3) {
var G__9220__i = 0, G__9220__a = new Array(arguments.length -  3);
while (G__9220__i < G__9220__a.length) {G__9220__a[G__9220__i] = arguments[G__9220__i + 3]; ++G__9220__i;}
G__9219 = new cljs.core.IndexedSeq(G__9220__a,0);
}
return cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9219);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep2.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep2.cljs$lang$applyTo = cljs$core$every_pred_$_ep2__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep2__0;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep2__1;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep2__2;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep2__3;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep2;
})()
});
var cljs$core$every_pred__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$every_pred_$_ep3 = null;
var cljs$core$every_pred_$_ep3__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__4008__auto__ = (function (){var G__9145 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9145) : p1.call(null,G__9145));
})();
if(cljs.core.truth_(and__4008__auto__)){
var and__4008__auto____$1 = (function (){var G__9147 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9147) : p2.call(null,G__9147));
})();
if(cljs.core.truth_(and__4008__auto____$1)){
var G__9148 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9148) : p3.call(null,G__9148));
} else {
return and__4008__auto____$1;
}
} else {
return and__4008__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4008__auto__ = (function (){var G__9150 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9150) : p1.call(null,G__9150));
})();
if(cljs.core.truth_(and__4008__auto__)){
var and__4008__auto____$1 = (function (){var G__9152 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9152) : p2.call(null,G__9152));
})();
if(cljs.core.truth_(and__4008__auto____$1)){
var and__4008__auto____$2 = (function (){var G__9154 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9154) : p3.call(null,G__9154));
})();
if(cljs.core.truth_(and__4008__auto____$2)){
var and__4008__auto____$3 = (function (){var G__9156 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9156) : p1.call(null,G__9156));
})();
if(cljs.core.truth_(and__4008__auto____$3)){
var and__4008__auto____$4 = (function (){var G__9158 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9158) : p2.call(null,G__9158));
})();
if(cljs.core.truth_(and__4008__auto____$4)){
var G__9159 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9159) : p3.call(null,G__9159));
} else {
return and__4008__auto____$4;
}
} else {
return and__4008__auto____$3;
}
} else {
return and__4008__auto____$2;
}
} else {
return and__4008__auto____$1;
}
} else {
return and__4008__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4008__auto__ = (function (){var G__9161 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9161) : p1.call(null,G__9161));
})();
if(cljs.core.truth_(and__4008__auto__)){
var and__4008__auto____$1 = (function (){var G__9163 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9163) : p2.call(null,G__9163));
})();
if(cljs.core.truth_(and__4008__auto____$1)){
var and__4008__auto____$2 = (function (){var G__9165 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9165) : p3.call(null,G__9165));
})();
if(cljs.core.truth_(and__4008__auto____$2)){
var and__4008__auto____$3 = (function (){var G__9167 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9167) : p1.call(null,G__9167));
})();
if(cljs.core.truth_(and__4008__auto____$3)){
var and__4008__auto____$4 = (function (){var G__9169 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9169) : p2.call(null,G__9169));
})();
if(cljs.core.truth_(and__4008__auto____$4)){
var and__4008__auto____$5 = (function (){var G__9171 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9171) : p3.call(null,G__9171));
})();
if(cljs.core.truth_(and__4008__auto____$5)){
var and__4008__auto____$6 = (function (){var G__9173 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9173) : p1.call(null,G__9173));
})();
if(cljs.core.truth_(and__4008__auto____$6)){
var and__4008__auto____$7 = (function (){var G__9175 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9175) : p2.call(null,G__9175));
})();
if(cljs.core.truth_(and__4008__auto____$7)){
var G__9176 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9176) : p3.call(null,G__9176));
} else {
return and__4008__auto____$7;
}
} else {
return and__4008__auto____$6;
}
} else {
return and__4008__auto____$5;
}
} else {
return and__4008__auto____$4;
}
} else {
return and__4008__auto____$3;
}
} else {
return and__4008__auto____$2;
}
} else {
return and__4008__auto____$1;
}
} else {
return and__4008__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__4 = (function() { 
var G__9221__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8822_SHARP_){
var and__4008__auto__ = (function (){var G__9183 = p1__8822_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9183) : p1.call(null,G__9183));
})();
if(cljs.core.truth_(and__4008__auto__)){
var and__4008__auto____$1 = (function (){var G__9185 = p1__8822_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9185) : p2.call(null,G__9185));
})();
if(cljs.core.truth_(and__4008__auto____$1)){
var G__9186 = p1__8822_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9186) : p3.call(null,G__9186));
} else {
return and__4008__auto____$1;
}
} else {
return and__4008__auto__;
}
}),args)));
};
var G__9221 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9222__i = 0, G__9222__a = new Array(arguments.length -  3);
while (G__9222__i < G__9222__a.length) {G__9222__a[G__9222__i] = arguments[G__9222__i + 3]; ++G__9222__i;}
  args = new cljs.core.IndexedSeq(G__9222__a,0);
} 
return G__9221__delegate.call(this,x,y,z,args);};
G__9221.cljs$lang$maxFixedArity = 3;
G__9221.cljs$lang$applyTo = (function (arglist__9223){
var x = cljs.core.first(arglist__9223);
arglist__9223 = cljs.core.next(arglist__9223);
var y = cljs.core.first(arglist__9223);
arglist__9223 = cljs.core.next(arglist__9223);
var z = cljs.core.first(arglist__9223);
var args = cljs.core.rest(arglist__9223);
return G__9221__delegate(x,y,z,args);
});
G__9221.cljs$core$IFn$_invoke$arity$variadic = G__9221__delegate;
return G__9221;
})()
;
cljs$core$every_pred_$_ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep3__0.call(this);
case 1:
return cljs$core$every_pred_$_ep3__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep3__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep3__3.call(this,x,y,z);
default:
var G__9224 = null;
if (arguments.length > 3) {
var G__9225__i = 0, G__9225__a = new Array(arguments.length -  3);
while (G__9225__i < G__9225__a.length) {G__9225__a[G__9225__i] = arguments[G__9225__i + 3]; ++G__9225__i;}
G__9224 = new cljs.core.IndexedSeq(G__9225__a,0);
}
return cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9224);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep3.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep3.cljs$lang$applyTo = cljs$core$every_pred_$_ep3__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep3__0;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep3__1;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep3__2;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep3__3;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep3;
})()
});
var cljs$core$every_pred__4 = (function() { 
var G__9226__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$every_pred_$_epn = null;
var cljs$core$every_pred_$_epn__0 = (function (){
return true;
});
var cljs$core$every_pred_$_epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8823_SHARP_){
var G__9202 = x;
return (p1__8823_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8823_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9202) : p1__8823_SHARP_.call(null,G__9202));
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8824_SHARP_){
var and__4008__auto__ = (function (){var G__9204 = x;
return (p1__8824_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8824_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9204) : p1__8824_SHARP_.call(null,G__9204));
})();
if(cljs.core.truth_(and__4008__auto__)){
var G__9205 = y;
return (p1__8824_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8824_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9205) : p1__8824_SHARP_.call(null,G__9205));
} else {
return and__4008__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8825_SHARP_){
var and__4008__auto__ = (function (){var G__9207 = x;
return (p1__8825_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8825_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9207) : p1__8825_SHARP_.call(null,G__9207));
})();
if(cljs.core.truth_(and__4008__auto__)){
var and__4008__auto____$1 = (function (){var G__9209 = y;
return (p1__8825_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8825_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9209) : p1__8825_SHARP_.call(null,G__9209));
})();
if(cljs.core.truth_(and__4008__auto____$1)){
var G__9210 = z;
return (p1__8825_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8825_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9210) : p1__8825_SHARP_.call(null,G__9210));
} else {
return and__4008__auto____$1;
}
} else {
return and__4008__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__4 = (function() { 
var G__9227__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8826_SHARP_){
return cljs.core.every_QMARK_(p1__8826_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__9227 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9228__i = 0, G__9228__a = new Array(arguments.length -  3);
while (G__9228__i < G__9228__a.length) {G__9228__a[G__9228__i] = arguments[G__9228__i + 3]; ++G__9228__i;}
  args = new cljs.core.IndexedSeq(G__9228__a,0);
} 
return G__9227__delegate.call(this,x,y,z,args);};
G__9227.cljs$lang$maxFixedArity = 3;
G__9227.cljs$lang$applyTo = (function (arglist__9229){
var x = cljs.core.first(arglist__9229);
arglist__9229 = cljs.core.next(arglist__9229);
var y = cljs.core.first(arglist__9229);
arglist__9229 = cljs.core.next(arglist__9229);
var z = cljs.core.first(arglist__9229);
var args = cljs.core.rest(arglist__9229);
return G__9227__delegate(x,y,z,args);
});
G__9227.cljs$core$IFn$_invoke$arity$variadic = G__9227__delegate;
return G__9227;
})()
;
cljs$core$every_pred_$_epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_epn__0.call(this);
case 1:
return cljs$core$every_pred_$_epn__1.call(this,x);
case 2:
return cljs$core$every_pred_$_epn__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_epn__3.call(this,x,y,z);
default:
var G__9230 = null;
if (arguments.length > 3) {
var G__9231__i = 0, G__9231__a = new Array(arguments.length -  3);
while (G__9231__i < G__9231__a.length) {G__9231__a[G__9231__i] = arguments[G__9231__i + 3]; ++G__9231__i;}
G__9230 = new cljs.core.IndexedSeq(G__9231__a,0);
}
return cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9230);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_epn.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_epn.cljs$lang$applyTo = cljs$core$every_pred_$_epn__4.cljs$lang$applyTo;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_epn__0;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_epn__1;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_epn__2;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_epn__3;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_epn;
})()
;})(ps__$1))
};
var G__9226 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9232__i = 0, G__9232__a = new Array(arguments.length -  3);
while (G__9232__i < G__9232__a.length) {G__9232__a[G__9232__i] = arguments[G__9232__i + 3]; ++G__9232__i;}
  ps = new cljs.core.IndexedSeq(G__9232__a,0);
} 
return G__9226__delegate.call(this,p1,p2,p3,ps);};
G__9226.cljs$lang$maxFixedArity = 3;
G__9226.cljs$lang$applyTo = (function (arglist__9233){
var p1 = cljs.core.first(arglist__9233);
arglist__9233 = cljs.core.next(arglist__9233);
var p2 = cljs.core.first(arglist__9233);
arglist__9233 = cljs.core.next(arglist__9233);
var p3 = cljs.core.first(arglist__9233);
var ps = cljs.core.rest(arglist__9233);
return G__9226__delegate(p1,p2,p3,ps);
});
G__9226.cljs$core$IFn$_invoke$arity$variadic = G__9226__delegate;
return G__9226;
})()
;
cljs$core$every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$every_pred__1.call(this,p1);
case 2:
return cljs$core$every_pred__2.call(this,p1,p2);
case 3:
return cljs$core$every_pred__3.call(this,p1,p2,p3);
default:
var G__9234 = null;
if (arguments.length > 3) {
var G__9235__i = 0, G__9235__a = new Array(arguments.length -  3);
while (G__9235__i < G__9235__a.length) {G__9235__a[G__9235__i] = arguments[G__9235__i + 3]; ++G__9235__i;}
G__9234 = new cljs.core.IndexedSeq(G__9235__a,0);
}
return cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9234);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred.cljs$lang$applyTo = cljs$core$every_pred__4.cljs$lang$applyTo;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred__1;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred__2;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred__3;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns the first logical true value
 * returned by one of its composing predicates against any of its arguments, else it returns
 * logical false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical true result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.some_fn = (function() {
var cljs$core$some_fn = null;
var cljs$core$some_fn__1 = (function (p){
return (function() {
var cljs$core$some_fn_$_sp1 = null;
var cljs$core$some_fn_$_sp1__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp1__1 = (function (x){
var G__9441 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9441) : p.call(null,G__9441));
});
var cljs$core$some_fn_$_sp1__2 = (function (x,y){
var or__4020__auto__ = (function (){var G__9443 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9443) : p.call(null,G__9443));
})();
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
var G__9444 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9444) : p.call(null,G__9444));
}
});
var cljs$core$some_fn_$_sp1__3 = (function (x,y,z){
var or__4020__auto__ = (function (){var G__9446 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9446) : p.call(null,G__9446));
})();
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (function (){var G__9448 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9448) : p.call(null,G__9448));
})();
if(cljs.core.truth_(or__4020__auto____$1)){
return or__4020__auto____$1;
} else {
var G__9449 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9449) : p.call(null,G__9449));
}
}
});
var cljs$core$some_fn_$_sp1__4 = (function() { 
var G__9610__delegate = function (x,y,z,args){
var or__4020__auto__ = cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__9610 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9611__i = 0, G__9611__a = new Array(arguments.length -  3);
while (G__9611__i < G__9611__a.length) {G__9611__a[G__9611__i] = arguments[G__9611__i + 3]; ++G__9611__i;}
  args = new cljs.core.IndexedSeq(G__9611__a,0);
} 
return G__9610__delegate.call(this,x,y,z,args);};
G__9610.cljs$lang$maxFixedArity = 3;
G__9610.cljs$lang$applyTo = (function (arglist__9612){
var x = cljs.core.first(arglist__9612);
arglist__9612 = cljs.core.next(arglist__9612);
var y = cljs.core.first(arglist__9612);
arglist__9612 = cljs.core.next(arglist__9612);
var z = cljs.core.first(arglist__9612);
var args = cljs.core.rest(arglist__9612);
return G__9610__delegate(x,y,z,args);
});
G__9610.cljs$core$IFn$_invoke$arity$variadic = G__9610__delegate;
return G__9610;
})()
;
cljs$core$some_fn_$_sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp1__0.call(this);
case 1:
return cljs$core$some_fn_$_sp1__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp1__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp1__3.call(this,x,y,z);
default:
var G__9613 = null;
if (arguments.length > 3) {
var G__9614__i = 0, G__9614__a = new Array(arguments.length -  3);
while (G__9614__i < G__9614__a.length) {G__9614__a[G__9614__i] = arguments[G__9614__i + 3]; ++G__9614__i;}
G__9613 = new cljs.core.IndexedSeq(G__9614__a,0);
}
return cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9613);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp1.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp1.cljs$lang$applyTo = cljs$core$some_fn_$_sp1__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp1__0;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp1__1;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp1__2;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp1__3;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp1;
})()
});
var cljs$core$some_fn__2 = (function (p1,p2){
return (function() {
var cljs$core$some_fn_$_sp2 = null;
var cljs$core$some_fn_$_sp2__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp2__1 = (function (x){
var or__4020__auto__ = (function (){var G__9481 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9481) : p1.call(null,G__9481));
})();
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
var G__9482 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9482) : p2.call(null,G__9482));
}
});
var cljs$core$some_fn_$_sp2__2 = (function (x,y){
var or__4020__auto__ = (function (){var G__9484 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9484) : p1.call(null,G__9484));
})();
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (function (){var G__9486 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9486) : p1.call(null,G__9486));
})();
if(cljs.core.truth_(or__4020__auto____$1)){
return or__4020__auto____$1;
} else {
var or__4020__auto____$2 = (function (){var G__9488 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9488) : p2.call(null,G__9488));
})();
if(cljs.core.truth_(or__4020__auto____$2)){
return or__4020__auto____$2;
} else {
var G__9489 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9489) : p2.call(null,G__9489));
}
}
}
});
var cljs$core$some_fn_$_sp2__3 = (function (x,y,z){
var or__4020__auto__ = (function (){var G__9491 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9491) : p1.call(null,G__9491));
})();
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (function (){var G__9493 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9493) : p1.call(null,G__9493));
})();
if(cljs.core.truth_(or__4020__auto____$1)){
return or__4020__auto____$1;
} else {
var or__4020__auto____$2 = (function (){var G__9495 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9495) : p1.call(null,G__9495));
})();
if(cljs.core.truth_(or__4020__auto____$2)){
return or__4020__auto____$2;
} else {
var or__4020__auto____$3 = (function (){var G__9497 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9497) : p2.call(null,G__9497));
})();
if(cljs.core.truth_(or__4020__auto____$3)){
return or__4020__auto____$3;
} else {
var or__4020__auto____$4 = (function (){var G__9499 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9499) : p2.call(null,G__9499));
})();
if(cljs.core.truth_(or__4020__auto____$4)){
return or__4020__auto____$4;
} else {
var G__9500 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9500) : p2.call(null,G__9500));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp2__4 = (function() { 
var G__9615__delegate = function (x,y,z,args){
var or__4020__auto__ = cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return cljs.core.some(((function (or__4020__auto__){
return (function (p1__9236_SHARP_){
var or__4020__auto____$1 = (function (){var G__9502 = p1__9236_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9502) : p1.call(null,G__9502));
})();
if(cljs.core.truth_(or__4020__auto____$1)){
return or__4020__auto____$1;
} else {
var G__9503 = p1__9236_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9503) : p2.call(null,G__9503));
}
});})(or__4020__auto__))
,args);
}
};
var G__9615 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9616__i = 0, G__9616__a = new Array(arguments.length -  3);
while (G__9616__i < G__9616__a.length) {G__9616__a[G__9616__i] = arguments[G__9616__i + 3]; ++G__9616__i;}
  args = new cljs.core.IndexedSeq(G__9616__a,0);
} 
return G__9615__delegate.call(this,x,y,z,args);};
G__9615.cljs$lang$maxFixedArity = 3;
G__9615.cljs$lang$applyTo = (function (arglist__9617){
var x = cljs.core.first(arglist__9617);
arglist__9617 = cljs.core.next(arglist__9617);
var y = cljs.core.first(arglist__9617);
arglist__9617 = cljs.core.next(arglist__9617);
var z = cljs.core.first(arglist__9617);
var args = cljs.core.rest(arglist__9617);
return G__9615__delegate(x,y,z,args);
});
G__9615.cljs$core$IFn$_invoke$arity$variadic = G__9615__delegate;
return G__9615;
})()
;
cljs$core$some_fn_$_sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp2__0.call(this);
case 1:
return cljs$core$some_fn_$_sp2__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp2__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp2__3.call(this,x,y,z);
default:
var G__9618 = null;
if (arguments.length > 3) {
var G__9619__i = 0, G__9619__a = new Array(arguments.length -  3);
while (G__9619__i < G__9619__a.length) {G__9619__a[G__9619__i] = arguments[G__9619__i + 3]; ++G__9619__i;}
G__9618 = new cljs.core.IndexedSeq(G__9619__a,0);
}
return cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9618);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp2.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp2.cljs$lang$applyTo = cljs$core$some_fn_$_sp2__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp2__0;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp2__1;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp2__2;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp2__3;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp2;
})()
});
var cljs$core$some_fn__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$some_fn_$_sp3 = null;
var cljs$core$some_fn_$_sp3__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp3__1 = (function (x){
var or__4020__auto__ = (function (){var G__9549 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9549) : p1.call(null,G__9549));
})();
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (function (){var G__9551 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9551) : p2.call(null,G__9551));
})();
if(cljs.core.truth_(or__4020__auto____$1)){
return or__4020__auto____$1;
} else {
var G__9552 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9552) : p3.call(null,G__9552));
}
}
});
var cljs$core$some_fn_$_sp3__2 = (function (x,y){
var or__4020__auto__ = (function (){var G__9554 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9554) : p1.call(null,G__9554));
})();
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (function (){var G__9556 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9556) : p2.call(null,G__9556));
})();
if(cljs.core.truth_(or__4020__auto____$1)){
return or__4020__auto____$1;
} else {
var or__4020__auto____$2 = (function (){var G__9558 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9558) : p3.call(null,G__9558));
})();
if(cljs.core.truth_(or__4020__auto____$2)){
return or__4020__auto____$2;
} else {
var or__4020__auto____$3 = (function (){var G__9560 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9560) : p1.call(null,G__9560));
})();
if(cljs.core.truth_(or__4020__auto____$3)){
return or__4020__auto____$3;
} else {
var or__4020__auto____$4 = (function (){var G__9562 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9562) : p2.call(null,G__9562));
})();
if(cljs.core.truth_(or__4020__auto____$4)){
return or__4020__auto____$4;
} else {
var G__9563 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9563) : p3.call(null,G__9563));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__3 = (function (x,y,z){
var or__4020__auto__ = (function (){var G__9565 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9565) : p1.call(null,G__9565));
})();
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (function (){var G__9567 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9567) : p2.call(null,G__9567));
})();
if(cljs.core.truth_(or__4020__auto____$1)){
return or__4020__auto____$1;
} else {
var or__4020__auto____$2 = (function (){var G__9569 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9569) : p3.call(null,G__9569));
})();
if(cljs.core.truth_(or__4020__auto____$2)){
return or__4020__auto____$2;
} else {
var or__4020__auto____$3 = (function (){var G__9571 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9571) : p1.call(null,G__9571));
})();
if(cljs.core.truth_(or__4020__auto____$3)){
return or__4020__auto____$3;
} else {
var or__4020__auto____$4 = (function (){var G__9573 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9573) : p2.call(null,G__9573));
})();
if(cljs.core.truth_(or__4020__auto____$4)){
return or__4020__auto____$4;
} else {
var or__4020__auto____$5 = (function (){var G__9575 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9575) : p3.call(null,G__9575));
})();
if(cljs.core.truth_(or__4020__auto____$5)){
return or__4020__auto____$5;
} else {
var or__4020__auto____$6 = (function (){var G__9577 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9577) : p1.call(null,G__9577));
})();
if(cljs.core.truth_(or__4020__auto____$6)){
return or__4020__auto____$6;
} else {
var or__4020__auto____$7 = (function (){var G__9579 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9579) : p2.call(null,G__9579));
})();
if(cljs.core.truth_(or__4020__auto____$7)){
return or__4020__auto____$7;
} else {
var G__9580 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9580) : p3.call(null,G__9580));
}
}
}
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__4 = (function() { 
var G__9620__delegate = function (x,y,z,args){
var or__4020__auto__ = cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return cljs.core.some(((function (or__4020__auto__){
return (function (p1__9237_SHARP_){
var or__4020__auto____$1 = (function (){var G__9582 = p1__9237_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9582) : p1.call(null,G__9582));
})();
if(cljs.core.truth_(or__4020__auto____$1)){
return or__4020__auto____$1;
} else {
var or__4020__auto____$2 = (function (){var G__9584 = p1__9237_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9584) : p2.call(null,G__9584));
})();
if(cljs.core.truth_(or__4020__auto____$2)){
return or__4020__auto____$2;
} else {
var G__9585 = p1__9237_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9585) : p3.call(null,G__9585));
}
}
});})(or__4020__auto__))
,args);
}
};
var G__9620 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9621__i = 0, G__9621__a = new Array(arguments.length -  3);
while (G__9621__i < G__9621__a.length) {G__9621__a[G__9621__i] = arguments[G__9621__i + 3]; ++G__9621__i;}
  args = new cljs.core.IndexedSeq(G__9621__a,0);
} 
return G__9620__delegate.call(this,x,y,z,args);};
G__9620.cljs$lang$maxFixedArity = 3;
G__9620.cljs$lang$applyTo = (function (arglist__9622){
var x = cljs.core.first(arglist__9622);
arglist__9622 = cljs.core.next(arglist__9622);
var y = cljs.core.first(arglist__9622);
arglist__9622 = cljs.core.next(arglist__9622);
var z = cljs.core.first(arglist__9622);
var args = cljs.core.rest(arglist__9622);
return G__9620__delegate(x,y,z,args);
});
G__9620.cljs$core$IFn$_invoke$arity$variadic = G__9620__delegate;
return G__9620;
})()
;
cljs$core$some_fn_$_sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp3__0.call(this);
case 1:
return cljs$core$some_fn_$_sp3__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp3__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp3__3.call(this,x,y,z);
default:
var G__9623 = null;
if (arguments.length > 3) {
var G__9624__i = 0, G__9624__a = new Array(arguments.length -  3);
while (G__9624__i < G__9624__a.length) {G__9624__a[G__9624__i] = arguments[G__9624__i + 3]; ++G__9624__i;}
G__9623 = new cljs.core.IndexedSeq(G__9624__a,0);
}
return cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9623);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp3.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp3.cljs$lang$applyTo = cljs$core$some_fn_$_sp3__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp3__0;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp3__1;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp3__2;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp3__3;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp3;
})()
});
var cljs$core$some_fn__4 = (function() { 
var G__9625__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$some_fn_$_spn = null;
var cljs$core$some_fn_$_spn__0 = (function (){
return null;
});
var cljs$core$some_fn_$_spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__9238_SHARP_){
var G__9601 = x;
return (p1__9238_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9238_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9601) : p1__9238_SHARP_.call(null,G__9601));
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__9239_SHARP_){
var or__4020__auto__ = (function (){var G__9603 = x;
return (p1__9239_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9239_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9603) : p1__9239_SHARP_.call(null,G__9603));
})();
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
var G__9604 = y;
return (p1__9239_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9239_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9604) : p1__9239_SHARP_.call(null,G__9604));
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__9240_SHARP_){
var or__4020__auto__ = (function (){var G__9606 = x;
return (p1__9240_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9240_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9606) : p1__9240_SHARP_.call(null,G__9606));
})();
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (function (){var G__9608 = y;
return (p1__9240_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9240_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9608) : p1__9240_SHARP_.call(null,G__9608));
})();
if(cljs.core.truth_(or__4020__auto____$1)){
return or__4020__auto____$1;
} else {
var G__9609 = z;
return (p1__9240_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9240_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9609) : p1__9240_SHARP_.call(null,G__9609));
}
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__4 = (function() { 
var G__9626__delegate = function (x,y,z,args){
var or__4020__auto__ = cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return cljs.core.some(((function (or__4020__auto__,ps__$1){
return (function (p1__9241_SHARP_){
return cljs.core.some(p1__9241_SHARP_,args);
});})(or__4020__auto__,ps__$1))
,ps__$1);
}
};
var G__9626 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9627__i = 0, G__9627__a = new Array(arguments.length -  3);
while (G__9627__i < G__9627__a.length) {G__9627__a[G__9627__i] = arguments[G__9627__i + 3]; ++G__9627__i;}
  args = new cljs.core.IndexedSeq(G__9627__a,0);
} 
return G__9626__delegate.call(this,x,y,z,args);};
G__9626.cljs$lang$maxFixedArity = 3;
G__9626.cljs$lang$applyTo = (function (arglist__9628){
var x = cljs.core.first(arglist__9628);
arglist__9628 = cljs.core.next(arglist__9628);
var y = cljs.core.first(arglist__9628);
arglist__9628 = cljs.core.next(arglist__9628);
var z = cljs.core.first(arglist__9628);
var args = cljs.core.rest(arglist__9628);
return G__9626__delegate(x,y,z,args);
});
G__9626.cljs$core$IFn$_invoke$arity$variadic = G__9626__delegate;
return G__9626;
})()
;
cljs$core$some_fn_$_spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_spn__0.call(this);
case 1:
return cljs$core$some_fn_$_spn__1.call(this,x);
case 2:
return cljs$core$some_fn_$_spn__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_spn__3.call(this,x,y,z);
default:
var G__9629 = null;
if (arguments.length > 3) {
var G__9630__i = 0, G__9630__a = new Array(arguments.length -  3);
while (G__9630__i < G__9630__a.length) {G__9630__a[G__9630__i] = arguments[G__9630__i + 3]; ++G__9630__i;}
G__9629 = new cljs.core.IndexedSeq(G__9630__a,0);
}
return cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9629);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_spn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_spn.cljs$lang$applyTo = cljs$core$some_fn_$_spn__4.cljs$lang$applyTo;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_spn__0;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_spn__1;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_spn__2;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_spn__3;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_spn;
})()
;})(ps__$1))
};
var G__9625 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9631__i = 0, G__9631__a = new Array(arguments.length -  3);
while (G__9631__i < G__9631__a.length) {G__9631__a[G__9631__i] = arguments[G__9631__i + 3]; ++G__9631__i;}
  ps = new cljs.core.IndexedSeq(G__9631__a,0);
} 
return G__9625__delegate.call(this,p1,p2,p3,ps);};
G__9625.cljs$lang$maxFixedArity = 3;
G__9625.cljs$lang$applyTo = (function (arglist__9632){
var p1 = cljs.core.first(arglist__9632);
arglist__9632 = cljs.core.next(arglist__9632);
var p2 = cljs.core.first(arglist__9632);
arglist__9632 = cljs.core.next(arglist__9632);
var p3 = cljs.core.first(arglist__9632);
var ps = cljs.core.rest(arglist__9632);
return G__9625__delegate(p1,p2,p3,ps);
});
G__9625.cljs$core$IFn$_invoke$arity$variadic = G__9625__delegate;
return G__9625;
})()
;
cljs$core$some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$some_fn__1.call(this,p1);
case 2:
return cljs$core$some_fn__2.call(this,p1,p2);
case 3:
return cljs$core$some_fn__3.call(this,p1,p2,p3);
default:
var G__9633 = null;
if (arguments.length > 3) {
var G__9634__i = 0, G__9634__a = new Array(arguments.length -  3);
while (G__9634__i < G__9634__a.length) {G__9634__a[G__9634__i] = arguments[G__9634__i + 3]; ++G__9634__i;}
G__9633 = new cljs.core.IndexedSeq(G__9634__a,0);
}
return cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9633);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn.cljs$lang$applyTo = cljs$core$some_fn__4.cljs$lang$applyTo;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn__1;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn__2;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn__3;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to
 * the set of first items of each coll, followed by applying f to the
 * set of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments. Returns a transducer when
 * no collection is provided.
 * @param {...*} var_args
 */
cljs.core.map = (function() {
var cljs$core$map = null;
var cljs$core$map__1 = (function (f){
return (function (rf){
return (function() {
var G__9689 = null;
var G__9689__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9689__1 = (function (result){
var G__9675 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9675) : rf.call(null,G__9675));
});
var G__9689__2 = (function (result,input){
var G__9676 = result;
var G__9677 = (function (){var G__9678 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9678) : f.call(null,G__9678));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9676,G__9677) : rf.call(null,G__9676,G__9677));
});
var G__9689__3 = (function() { 
var G__9690__delegate = function (result,input,inputs){
var G__9679 = result;
var G__9680 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9679,G__9680) : rf.call(null,G__9679,G__9680));
};
var G__9690 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__9691__i = 0, G__9691__a = new Array(arguments.length -  2);
while (G__9691__i < G__9691__a.length) {G__9691__a[G__9691__i] = arguments[G__9691__i + 2]; ++G__9691__i;}
  inputs = new cljs.core.IndexedSeq(G__9691__a,0);
} 
return G__9690__delegate.call(this,result,input,inputs);};
G__9690.cljs$lang$maxFixedArity = 2;
G__9690.cljs$lang$applyTo = (function (arglist__9692){
var result = cljs.core.first(arglist__9692);
arglist__9692 = cljs.core.next(arglist__9692);
var input = cljs.core.first(arglist__9692);
var inputs = cljs.core.rest(arglist__9692);
return G__9690__delegate(result,input,inputs);
});
G__9690.cljs$core$IFn$_invoke$arity$variadic = G__9690__delegate;
return G__9690;
})()
;
G__9689 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__9689__0.call(this);
case 1:
return G__9689__1.call(this,result);
case 2:
return G__9689__2.call(this,result,input);
default:
var G__9693 = null;
if (arguments.length > 2) {
var G__9694__i = 0, G__9694__a = new Array(arguments.length -  2);
while (G__9694__i < G__9694__a.length) {G__9694__a[G__9694__i] = arguments[G__9694__i + 2]; ++G__9694__i;}
G__9693 = new cljs.core.IndexedSeq(G__9694__a,0);
}
return G__9689__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__9693);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9689.cljs$lang$maxFixedArity = 2;
G__9689.cljs$lang$applyTo = G__9689__3.cljs$lang$applyTo;
G__9689.cljs$core$IFn$_invoke$arity$0 = G__9689__0;
G__9689.cljs$core$IFn$_invoke$arity$1 = G__9689__1;
G__9689.cljs$core$IFn$_invoke$arity$2 = G__9689__2;
G__9689.cljs$core$IFn$_invoke$arity$variadic = G__9689__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9689;
})()
});
});
var cljs$core$map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4907__auto___9695 = size;
var i_9696 = (0);
while(true){
if((i_9696 < n__4907__auto___9695)){
cljs.core.chunk_append(b,(function (){var G__9681 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9696);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9681) : f.call(null,G__9681));
})());

var G__9697 = (i_9696 + (1));
i_9696 = G__9697;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__9682 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9682) : f.call(null,G__9682));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var cljs$core$map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__9683 = cljs.core.first(s1);
var G__9684 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9683,G__9684) : f.call(null,G__9683,G__9684));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__9685 = cljs.core.first(s1);
var G__9686 = cljs.core.first(s2);
var G__9687 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9685,G__9686,G__9687) : f.call(null,G__9685,G__9686,G__9687));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__5 = (function() { 
var G__9698__delegate = function (f,c1,c2,c3,colls){
var step = (function cljs$core$map_$_step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs$core$map_$_step(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return cljs$core$map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__9635_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__9635_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__9698 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9699__i = 0, G__9699__a = new Array(arguments.length -  4);
while (G__9699__i < G__9699__a.length) {G__9699__a[G__9699__i] = arguments[G__9699__i + 4]; ++G__9699__i;}
  colls = new cljs.core.IndexedSeq(G__9699__a,0);
} 
return G__9698__delegate.call(this,f,c1,c2,c3,colls);};
G__9698.cljs$lang$maxFixedArity = 4;
G__9698.cljs$lang$applyTo = (function (arglist__9700){
var f = cljs.core.first(arglist__9700);
arglist__9700 = cljs.core.next(arglist__9700);
var c1 = cljs.core.first(arglist__9700);
arglist__9700 = cljs.core.next(arglist__9700);
var c2 = cljs.core.first(arglist__9700);
arglist__9700 = cljs.core.next(arglist__9700);
var c3 = cljs.core.first(arglist__9700);
var colls = cljs.core.rest(arglist__9700);
return G__9698__delegate(f,c1,c2,c3,colls);
});
G__9698.cljs$core$IFn$_invoke$arity$variadic = G__9698__delegate;
return G__9698;
})()
;
cljs$core$map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$map__1.call(this,f);
case 2:
return cljs$core$map__2.call(this,f,c1);
case 3:
return cljs$core$map__3.call(this,f,c1,c2);
case 4:
return cljs$core$map__4.call(this,f,c1,c2,c3);
default:
var G__9701 = null;
if (arguments.length > 4) {
var G__9702__i = 0, G__9702__a = new Array(arguments.length -  4);
while (G__9702__i < G__9702__a.length) {G__9702__a[G__9702__i] = arguments[G__9702__i + 4]; ++G__9702__i;}
G__9701 = new cljs.core.IndexedSeq(G__9702__a,0);
}
return cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9701);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map.cljs$lang$maxFixedArity = 4;
cljs$core$map.cljs$lang$applyTo = cljs$core$map__5.cljs$lang$applyTo;
cljs$core$map.cljs$core$IFn$_invoke$arity$1 = cljs$core$map__1;
cljs$core$map.cljs$core$IFn$_invoke$arity$2 = cljs$core$map__2;
cljs$core$map.cljs$core$IFn$_invoke$arity$3 = cljs$core$map__3;
cljs$core$map.cljs$core$IFn$_invoke$arity$4 = cljs$core$map__4;
cljs$core$map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$map;
})()
;
/**
 * Returns a lazy sequence of the first n items in coll, or all items if
 * there are fewer than n.  Returns a stateful transducer when
 * no collection is provided.
 */
cljs.core.take = (function() {
var cljs$core$take = null;
var cljs$core$take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9711 = null;
var G__9711__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9711__1 = (function (result){
var G__9708 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9708) : rf.call(null,G__9708));
});
var G__9711__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__9709 = result;
var G__9710 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9709,G__9710) : rf.call(null,G__9709,G__9710));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__9711 = function(result,input){
switch(arguments.length){
case 0:
return G__9711__0.call(this);
case 1:
return G__9711__1.call(this,result);
case 2:
return G__9711__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9711.cljs$core$IFn$_invoke$arity$0 = G__9711__0;
G__9711.cljs$core$IFn$_invoke$arity$1 = G__9711__1;
G__9711.cljs$core$IFn$_invoke$arity$2 = G__9711__2;
return G__9711;
})()
;})(na))
});
});
var cljs$core$take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take__1.call(this,n);
case 2:
return cljs$core$take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take.cljs$core$IFn$_invoke$arity$1 = cljs$core$take__1;
cljs$core$take.cljs$core$IFn$_invoke$arity$2 = cljs$core$take__2;
return cljs$core$take;
})()
;
/**
 * Returns a lazy sequence of all but the first n items in coll.
 * Returns a stateful transducer when no collection is provided.
 */
cljs.core.drop = (function() {
var cljs$core$drop = null;
var cljs$core$drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9718 = null;
var G__9718__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9718__1 = (function (result){
var G__9715 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9715) : rf.call(null,G__9715));
});
var G__9718__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__9716 = result;
var G__9717 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9716,G__9717) : rf.call(null,G__9716,G__9717));
}
});
G__9718 = function(result,input){
switch(arguments.length){
case 0:
return G__9718__0.call(this);
case 1:
return G__9718__1.call(this,result);
case 2:
return G__9718__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9718.cljs$core$IFn$_invoke$arity$0 = G__9718__0;
G__9718.cljs$core$IFn$_invoke$arity$1 = G__9718__1;
G__9718.cljs$core$IFn$_invoke$arity$2 = G__9718__2;
return G__9718;
})()
;})(na))
});
});
var cljs$core$drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__9719 = (n__$1 - (1));
var G__9720 = cljs.core.rest(s);
n__$1 = G__9719;
coll__$1 = G__9720;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
cljs$core$drop = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$drop__1.call(this,n);
case 2:
return cljs$core$drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop__1;
cljs$core$drop.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop__2;
return cljs$core$drop;
})()
;
/**
 * Return a lazy sequence of all but the last n (default 1) items in coll
 */
cljs.core.drop_last = (function() {
var cljs$core$drop_last = null;
var cljs$core$drop_last__1 = (function (s){
return cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var cljs$core$drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
cljs$core$drop_last = function(n,s){
switch(arguments.length){
case 1:
return cljs$core$drop_last__1.call(this,n);
case 2:
return cljs$core$drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_last__1;
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_last__2;
return cljs$core$drop_last;
})()
;
/**
 * Returns a seq of the last n items in coll.  Depending on the type
 * of coll may be no better than linear time.  For vectors, see also subvec.
 */
cljs.core.take_last = (function cljs$core$take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__9723 = cljs.core.next(s);
var G__9724 = cljs.core.next(lead);
s = G__9723;
lead = G__9724;
continue;
} else {
return s;
}
break;
}
});
/**
 * Returns a lazy sequence of the items in coll starting from the
 * first item for which (pred item) returns logical false.  Returns a
 * stateful transducer when no collection is provided.
 */
cljs.core.drop_while = (function() {
var cljs$core$drop_while = null;
var cljs$core$drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__9737 = null;
var G__9737__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9737__1 = (function (result){
var G__9731 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9731) : rf.call(null,G__9731));
});
var G__9737__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__4008__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__4008__auto__)){
var G__9732 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9732) : pred.call(null,G__9732));
} else {
return and__4008__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__9733 = result;
var G__9734 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9733,G__9734) : rf.call(null,G__9733,G__9734));
}
});
G__9737 = function(result,input){
switch(arguments.length){
case 0:
return G__9737__0.call(this);
case 1:
return G__9737__1.call(this,result);
case 2:
return G__9737__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9737.cljs$core$IFn$_invoke$arity$0 = G__9737__0;
G__9737.cljs$core$IFn$_invoke$arity$1 = G__9737__1;
G__9737.cljs$core$IFn$_invoke$arity$2 = G__9737__2;
return G__9737;
})()
;})(da))
});
});
var cljs$core$drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__4008__auto__ = s;
if(and__4008__auto__){
var G__9736 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__9736) : pred__$1.call(null,G__9736));
} else {
return and__4008__auto__;
}
})())){
var G__9738 = pred__$1;
var G__9739 = cljs.core.rest(s);
pred__$1 = G__9738;
coll__$1 = G__9739;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
cljs$core$drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$drop_while__1.call(this,pred);
case 2:
return cljs$core$drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_while__1;
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_while__2;
return cljs$core$drop_while;
})()
;
/**
 * Returns a lazy (infinite!) sequence of repetitions of the items in coll.
 */
cljs.core.cycle = (function cljs$core$cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cljs$core$cycle(s));
} else {
return null;
}
}),null,null));
});
/**
 * Returns a vector of [(take n coll) (drop n coll)]
 */
cljs.core.split_at = (function cljs$core$split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
 * Returns a lazy (infinite!, or length n if supplied) sequence of xs.
 */
cljs.core.repeat = (function() {
var cljs$core$repeat = null;
var cljs$core$repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var cljs$core$repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
});
cljs$core$repeat = function(n,x){
switch(arguments.length){
case 1:
return cljs$core$repeat__1.call(this,n);
case 2:
return cljs$core$repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeat.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeat__1;
cljs$core$repeat.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeat__2;
return cljs$core$repeat;
})()
;
/**
 * Returns a lazy seq of n xs.
 */
cljs.core.replicate = (function cljs$core$replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
 * Takes a function of no args, presumably with side effects, and
 * returns an infinite (or length n if supplied) lazy sequence of calls
 * to it
 */
cljs.core.repeatedly = (function() {
var cljs$core$repeatedly = null;
var cljs$core$repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var cljs$core$repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
cljs$core$repeatedly = function(n,f){
switch(arguments.length){
case 1:
return cljs$core$repeatedly__1.call(this,n);
case 2:
return cljs$core$repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeatedly__1;
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeatedly__2;
return cljs$core$repeatedly;
})()
;
/**
 * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
 */
cljs.core.iterate = (function cljs$core$iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return cljs$core$iterate(f,(function (){var G__9748 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9748) : f.call(null,G__9748));
})());
}),null,null)));
});
/**
 * Returns a lazy seq of the first item in each coll, then the second etc.
 * @param {...*} var_args
 */
cljs.core.interleave = (function() {
var cljs$core$interleave = null;
var cljs$core$interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),cljs$core$interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var cljs$core$interleave__3 = (function() { 
var G__9751__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$core$interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__9751 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9752__i = 0, G__9752__a = new Array(arguments.length -  2);
while (G__9752__i < G__9752__a.length) {G__9752__a[G__9752__i] = arguments[G__9752__i + 2]; ++G__9752__i;}
  colls = new cljs.core.IndexedSeq(G__9752__a,0);
} 
return G__9751__delegate.call(this,c1,c2,colls);};
G__9751.cljs$lang$maxFixedArity = 2;
G__9751.cljs$lang$applyTo = (function (arglist__9753){
var c1 = cljs.core.first(arglist__9753);
arglist__9753 = cljs.core.next(arglist__9753);
var c2 = cljs.core.first(arglist__9753);
var colls = cljs.core.rest(arglist__9753);
return G__9751__delegate(c1,c2,colls);
});
G__9751.cljs$core$IFn$_invoke$arity$variadic = G__9751__delegate;
return G__9751;
})()
;
cljs$core$interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$interleave__2.call(this,c1,c2);
default:
var G__9754 = null;
if (arguments.length > 2) {
var G__9755__i = 0, G__9755__a = new Array(arguments.length -  2);
while (G__9755__i < G__9755__a.length) {G__9755__a[G__9755__i] = arguments[G__9755__i + 2]; ++G__9755__i;}
G__9754 = new cljs.core.IndexedSeq(G__9755__a,0);
}
return cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__9754);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interleave.cljs$lang$maxFixedArity = 2;
cljs$core$interleave.cljs$lang$applyTo = cljs$core$interleave__3.cljs$lang$applyTo;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$2 = cljs$core$interleave__2;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$variadic = cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$interleave;
})()
;
/**
 * Returns a lazy seq of the elements of coll separated by sep
 */
cljs.core.interpose = (function() {
var cljs$core$interpose = null;
var cljs$core$interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__9770 = null;
var G__9770__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9770__1 = (function (result){
var G__9763 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9763) : rf.call(null,G__9763));
});
var G__9770__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__9764 = result;
var G__9765 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9764,G__9765) : rf.call(null,G__9764,G__9765));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__9766 = sepr;
var G__9767 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9766,G__9767) : rf.call(null,G__9766,G__9767));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__9768 = result;
var G__9769 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9768,G__9769) : rf.call(null,G__9768,G__9769));
}
});
G__9770 = function(result,input){
switch(arguments.length){
case 0:
return G__9770__0.call(this);
case 1:
return G__9770__1.call(this,result);
case 2:
return G__9770__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9770.cljs$core$IFn$_invoke$arity$0 = G__9770__0;
G__9770.cljs$core$IFn$_invoke$arity$1 = G__9770__1;
G__9770.cljs$core$IFn$_invoke$arity$2 = G__9770__2;
return G__9770;
})()
;})(started))
});
});
var cljs$core$interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
cljs$core$interpose = function(sep,coll){
switch(arguments.length){
case 1:
return cljs$core$interpose__1.call(this,sep);
case 2:
return cljs$core$interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interpose.cljs$core$IFn$_invoke$arity$1 = cljs$core$interpose__1;
cljs$core$interpose.cljs$core$IFn$_invoke$arity$2 = cljs$core$interpose__2;
return cljs$core$interpose;
})()
;
/**
 * Take a collection of collections, and return a lazy seq
 * of items from the inner collection
 */
cljs.core.flatten1 = (function cljs$core$flatten1(colls){
var cat = (function cljs$core$flatten1_$_cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
 * Returns the result of applying concat to the result of applying map
 * to f and colls.  Thus function f should return a collection. Returns
 * a transducer when no collections are provided
 * @param {...*} var_args
 */
cljs.core.mapcat = (function() {
var cljs$core$mapcat = null;
var cljs$core$mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var cljs$core$mapcat__2 = (function() { 
var G__9779__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__9779 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__9780__i = 0, G__9780__a = new Array(arguments.length -  1);
while (G__9780__i < G__9780__a.length) {G__9780__a[G__9780__i] = arguments[G__9780__i + 1]; ++G__9780__i;}
  colls = new cljs.core.IndexedSeq(G__9780__a,0);
} 
return G__9779__delegate.call(this,f,colls);};
G__9779.cljs$lang$maxFixedArity = 1;
G__9779.cljs$lang$applyTo = (function (arglist__9781){
var f = cljs.core.first(arglist__9781);
var colls = cljs.core.rest(arglist__9781);
return G__9779__delegate(f,colls);
});
G__9779.cljs$core$IFn$_invoke$arity$variadic = G__9779__delegate;
return G__9779;
})()
;
cljs$core$mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$mapcat__1.call(this,f);
default:
var G__9782 = null;
if (arguments.length > 1) {
var G__9783__i = 0, G__9783__a = new Array(arguments.length -  1);
while (G__9783__i < G__9783__a.length) {G__9783__a[G__9783__i] = arguments[G__9783__i + 1]; ++G__9783__i;}
G__9782 = new cljs.core.IndexedSeq(G__9783__a,0);
}
return cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__9782);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapcat.cljs$lang$maxFixedArity = 1;
cljs$core$mapcat.cljs$lang$applyTo = cljs$core$mapcat__2.cljs$lang$applyTo;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$1 = cljs$core$mapcat__1;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapcat;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.filter = (function() {
var cljs$core$filter = null;
var cljs$core$filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__9802 = null;
var G__9802__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9802__1 = (function (result){
var G__9796 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9796) : rf.call(null,G__9796));
});
var G__9802__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9797 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9797) : pred.call(null,G__9797));
})())){
var G__9798 = result;
var G__9799 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9798,G__9799) : rf.call(null,G__9798,G__9799));
} else {
return result;
}
});
G__9802 = function(result,input){
switch(arguments.length){
case 0:
return G__9802__0.call(this);
case 1:
return G__9802__1.call(this,result);
case 2:
return G__9802__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9802.cljs$core$IFn$_invoke$arity$0 = G__9802__0;
G__9802.cljs$core$IFn$_invoke$arity$1 = G__9802__1;
G__9802.cljs$core$IFn$_invoke$arity$2 = G__9802__2;
return G__9802;
})()
});
});
var cljs$core$filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4907__auto___9803 = size;
var i_9804 = (0);
while(true){
if((i_9804 < n__4907__auto___9803)){
if(cljs.core.truth_((function (){var G__9800 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9804);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9800) : pred.call(null,G__9800));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9804));
} else {
}

var G__9805 = (i_9804 + (1));
i_9804 = G__9805;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__9801 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9801) : pred.call(null,G__9801));
})())){
return cljs.core.cons(f,cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$filter = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$filter__1.call(this,pred);
case 2:
return cljs$core$filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$filter.cljs$core$IFn$_invoke$arity$1 = cljs$core$filter__1;
cljs$core$filter.cljs$core$IFn$_invoke$arity$2 = cljs$core$filter__2;
return cljs$core$filter;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns false. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.remove = (function() {
var cljs$core$remove = null;
var cljs$core$remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var cljs$core$remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
cljs$core$remove = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$remove__1.call(this,pred);
case 2:
return cljs$core$remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$remove.cljs$core$IFn$_invoke$arity$1 = cljs$core$remove__1;
cljs$core$remove.cljs$core$IFn$_invoke$arity$2 = cljs$core$remove__2;
return cljs$core$remove;
})()
;
/**
 * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
 * branch? must be a fn of one arg that returns true if passed a node
 * that can have children (but may not).  children must be a fn of one
 * arg that returns a sequence of the children. Will only be called on
 * nodes for which branch? returns true. Root is the root node of the
 * tree.
 */
cljs.core.tree_seq = (function cljs$core$tree_seq(branch_QMARK_,children,root){
var walk = (function cljs$core$tree_seq_$_walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__9812 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__9812) : branch_QMARK_.call(null,G__9812));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk,cljs.core.array_seq([(function (){var G__9813 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__9813) : children.call(null,G__9813));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
 * Takes any nested combination of sequential things (lists, vectors,
 * etc.) and returns their contents as a single, flat sequence.
 * (flatten nil) returns nil.
 */
cljs.core.flatten = (function cljs$core$flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__9814_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__9814_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
 * Returns a new coll consisting of to-coll with all of the items of
 * from-coll conjoined. A transducer may be supplied.
 */
cljs.core.into = (function() {
var cljs$core$into = null;
var cljs$core$into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__9817 = to;
if(G__9817){
var bit__4694__auto__ = (G__9817.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4694__auto__) || (G__9817.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var cljs$core$into__3 = (function (to,xform,from){
if((function (){var G__9818 = to;
if(G__9818){
var bit__4694__auto__ = (G__9818.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4694__auto__) || (G__9818.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
cljs$core$into = function(to,xform,from){
switch(arguments.length){
case 2:
return cljs$core$into__2.call(this,to,xform);
case 3:
return cljs$core$into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into.cljs$core$IFn$_invoke$arity$2 = cljs$core$into__2;
cljs$core$into.cljs$core$IFn$_invoke$arity$3 = cljs$core$into__3;
return cljs$core$into;
})()
;
/**
 * Returns a vector consisting of the result of applying f to the
 * set of first items of each coll, followed by applying f to the set
 * of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments.
 * @param {...*} var_args
 */
cljs.core.mapv = (function() {
var cljs$core$mapv = null;
var cljs$core$mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__9820 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9820) : f.call(null,G__9820));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var cljs$core$mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var cljs$core$mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var cljs$core$mapv__5 = (function() { 
var G__9821__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__9821 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9822__i = 0, G__9822__a = new Array(arguments.length -  4);
while (G__9822__i < G__9822__a.length) {G__9822__a[G__9822__i] = arguments[G__9822__i + 4]; ++G__9822__i;}
  colls = new cljs.core.IndexedSeq(G__9822__a,0);
} 
return G__9821__delegate.call(this,f,c1,c2,c3,colls);};
G__9821.cljs$lang$maxFixedArity = 4;
G__9821.cljs$lang$applyTo = (function (arglist__9823){
var f = cljs.core.first(arglist__9823);
arglist__9823 = cljs.core.next(arglist__9823);
var c1 = cljs.core.first(arglist__9823);
arglist__9823 = cljs.core.next(arglist__9823);
var c2 = cljs.core.first(arglist__9823);
arglist__9823 = cljs.core.next(arglist__9823);
var c3 = cljs.core.first(arglist__9823);
var colls = cljs.core.rest(arglist__9823);
return G__9821__delegate(f,c1,c2,c3,colls);
});
G__9821.cljs$core$IFn$_invoke$arity$variadic = G__9821__delegate;
return G__9821;
})()
;
cljs$core$mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$mapv__2.call(this,f,c1);
case 3:
return cljs$core$mapv__3.call(this,f,c1,c2);
case 4:
return cljs$core$mapv__4.call(this,f,c1,c2,c3);
default:
var G__9824 = null;
if (arguments.length > 4) {
var G__9825__i = 0, G__9825__a = new Array(arguments.length -  4);
while (G__9825__i < G__9825__a.length) {G__9825__a[G__9825__i] = arguments[G__9825__i + 4]; ++G__9825__i;}
G__9824 = new cljs.core.IndexedSeq(G__9825__a,0);
}
return cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9824);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapv.cljs$lang$maxFixedArity = 4;
cljs$core$mapv.cljs$lang$applyTo = cljs$core$mapv__5.cljs$lang$applyTo;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$2 = cljs$core$mapv__2;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$3 = cljs$core$mapv__3;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$4 = cljs$core$mapv__4;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapv;
})()
;
/**
 * Returns a vector of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 */
cljs.core.filterv = (function cljs$core$filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__9827 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9827) : pred.call(null,G__9827));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
 * Returns a lazy sequence of lists of n items each, at offsets step
 * apart. If step is not supplied, defaults to n, i.e. the partitions
 * do not overlap. If a pad collection is supplied, use its elements as
 * necessary to complete last partition up to n items. In case there are
 * not enough padding elements, return a partition with less than n items.
 */
cljs.core.partition = (function() {
var cljs$core$partition = null;
var cljs$core$partition__2 = (function (n,coll){
return cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var cljs$core$partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
cljs$core$partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return cljs$core$partition__2.call(this,n,step);
case 3:
return cljs$core$partition__3.call(this,n,step,pad);
case 4:
return cljs$core$partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition__2;
cljs$core$partition.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition__3;
cljs$core$partition.cljs$core$IFn$_invoke$arity$4 = cljs$core$partition__4;
return cljs$core$partition;
})()
;
/**
 * Returns the value in a nested associative structure,
 * where ks is a sequence of keys. Returns nil if the key is not present,
 * or the not-found value if supplied.
 */
cljs.core.get_in = (function() {
var cljs$core$get_in = null;
var cljs$core$get_in__2 = (function (m,ks){
return cljs$core$get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var cljs$core$get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__9842 = m__$1;
if(G__9842){
var bit__4701__auto__ = (G__9842.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4701__auto__) || (G__9842.cljs$core$ILookup$)){
return true;
} else {
if((!G__9842.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9842);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9842);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__9843 = sentinel;
var G__9844 = m__$2;
var G__9845 = cljs.core.next(ks__$1);
sentinel = G__9843;
m__$1 = G__9844;
ks__$1 = G__9845;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
cljs$core$get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return cljs$core$get_in__2.call(this,m,ks);
case 3:
return cljs$core$get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get_in.cljs$core$IFn$_invoke$arity$2 = cljs$core$get_in__2;
cljs$core$get_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$get_in__3;
return cljs$core$get_in;
})()
;
/**
 * Associates a value in a nested associative structure, where ks is a
 * sequence of keys and v is the new value and returns a new nested structure.
 * If any levels do not exist, hash-maps will be created.
 */
cljs.core.assoc_in = (function cljs$core$assoc_in(m,p__9846,v){
var vec__9851 = p__9846;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9851,(0),null);
var ks = cljs.core.nthnext(vec__9851,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
 * 'Updates' a value in a nested associative structure, where ks is a
 * sequence of keys and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * nested structure.  If any levels do not exist, hash-maps will be
 * created.
 * @param {...*} var_args
 */
cljs.core.update_in = (function() {
var cljs$core$update_in = null;
var cljs$core$update_in__3 = (function (m,p__9852,f){
var vec__9890 = p__9852;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9890,(0),null);
var ks = cljs.core.nthnext(vec__9890,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9891 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9891) : f.call(null,G__9891));
})());
}
});
var cljs$core$update_in__4 = (function (m,p__9853,f,a){
var vec__9892 = p__9853;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9892,(0),null);
var ks = cljs.core.nthnext(vec__9892,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9893 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9894 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9893,G__9894) : f.call(null,G__9893,G__9894));
})());
}
});
var cljs$core$update_in__5 = (function (m,p__9854,f,a,b){
var vec__9895 = p__9854;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9895,(0),null);
var ks = cljs.core.nthnext(vec__9895,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9896 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9897 = a;
var G__9898 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9896,G__9897,G__9898) : f.call(null,G__9896,G__9897,G__9898));
})());
}
});
var cljs$core$update_in__6 = (function (m,p__9855,f,a,b,c){
var vec__9899 = p__9855;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9899,(0),null);
var ks = cljs.core.nthnext(vec__9899,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9900 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9901 = a;
var G__9902 = b;
var G__9903 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9900,G__9901,G__9902,G__9903) : f.call(null,G__9900,G__9901,G__9902,G__9903));
})());
}
});
var cljs$core$update_in__7 = (function() { 
var G__9905__delegate = function (m,p__9856,f,a,b,c,args){
var vec__9904 = p__9856;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9904,(0),null);
var ks = cljs.core.nthnext(vec__9904,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs$core$update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__9905 = function (m,p__9856,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__9906__i = 0, G__9906__a = new Array(arguments.length -  6);
while (G__9906__i < G__9906__a.length) {G__9906__a[G__9906__i] = arguments[G__9906__i + 6]; ++G__9906__i;}
  args = new cljs.core.IndexedSeq(G__9906__a,0);
} 
return G__9905__delegate.call(this,m,p__9856,f,a,b,c,args);};
G__9905.cljs$lang$maxFixedArity = 6;
G__9905.cljs$lang$applyTo = (function (arglist__9907){
var m = cljs.core.first(arglist__9907);
arglist__9907 = cljs.core.next(arglist__9907);
var p__9856 = cljs.core.first(arglist__9907);
arglist__9907 = cljs.core.next(arglist__9907);
var f = cljs.core.first(arglist__9907);
arglist__9907 = cljs.core.next(arglist__9907);
var a = cljs.core.first(arglist__9907);
arglist__9907 = cljs.core.next(arglist__9907);
var b = cljs.core.first(arglist__9907);
arglist__9907 = cljs.core.next(arglist__9907);
var c = cljs.core.first(arglist__9907);
var args = cljs.core.rest(arglist__9907);
return G__9905__delegate(m,p__9856,f,a,b,c,args);
});
G__9905.cljs$core$IFn$_invoke$arity$variadic = G__9905__delegate;
return G__9905;
})()
;
cljs$core$update_in = function(m,p__9856,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return cljs$core$update_in__3.call(this,m,p__9856,f);
case 4:
return cljs$core$update_in__4.call(this,m,p__9856,f,a);
case 5:
return cljs$core$update_in__5.call(this,m,p__9856,f,a,b);
case 6:
return cljs$core$update_in__6.call(this,m,p__9856,f,a,b,c);
default:
var G__9908 = null;
if (arguments.length > 6) {
var G__9909__i = 0, G__9909__a = new Array(arguments.length -  6);
while (G__9909__i < G__9909__a.length) {G__9909__a[G__9909__i] = arguments[G__9909__i + 6]; ++G__9909__i;}
G__9908 = new cljs.core.IndexedSeq(G__9909__a,0);
}
return cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__9856,f,a,b,c, G__9908);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update_in.cljs$lang$maxFixedArity = 6;
cljs$core$update_in.cljs$lang$applyTo = cljs$core$update_in__7.cljs$lang$applyTo;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$update_in__3;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$4 = cljs$core$update_in__4;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$5 = cljs$core$update_in__5;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$6 = cljs$core$update_in__6;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update_in;
})()
;
/**
 * 'Updates' a value in an associative structure, where k is a
 * key and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * structure.  If the key does not exist, nil is passed as the old value.
 * @param {...*} var_args
 */
cljs.core.update = (function() {
var cljs$core$update = null;
var cljs$core$update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9920 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9920) : f.call(null,G__9920));
})());
});
var cljs$core$update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9921 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9922 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9921,G__9922) : f.call(null,G__9921,G__9922));
})());
});
var cljs$core$update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9923 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9924 = x;
var G__9925 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9923,G__9924,G__9925) : f.call(null,G__9923,G__9924,G__9925));
})());
});
var cljs$core$update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9926 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9927 = x;
var G__9928 = y;
var G__9929 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9926,G__9927,G__9928,G__9929) : f.call(null,G__9926,G__9927,G__9928,G__9929));
})());
});
var cljs$core$update__7 = (function() { 
var G__9930__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__9930 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__9931__i = 0, G__9931__a = new Array(arguments.length -  6);
while (G__9931__i < G__9931__a.length) {G__9931__a[G__9931__i] = arguments[G__9931__i + 6]; ++G__9931__i;}
  more = new cljs.core.IndexedSeq(G__9931__a,0);
} 
return G__9930__delegate.call(this,m,k,f,x,y,z,more);};
G__9930.cljs$lang$maxFixedArity = 6;
G__9930.cljs$lang$applyTo = (function (arglist__9932){
var m = cljs.core.first(arglist__9932);
arglist__9932 = cljs.core.next(arglist__9932);
var k = cljs.core.first(arglist__9932);
arglist__9932 = cljs.core.next(arglist__9932);
var f = cljs.core.first(arglist__9932);
arglist__9932 = cljs.core.next(arglist__9932);
var x = cljs.core.first(arglist__9932);
arglist__9932 = cljs.core.next(arglist__9932);
var y = cljs.core.first(arglist__9932);
arglist__9932 = cljs.core.next(arglist__9932);
var z = cljs.core.first(arglist__9932);
var more = cljs.core.rest(arglist__9932);
return G__9930__delegate(m,k,f,x,y,z,more);
});
G__9930.cljs$core$IFn$_invoke$arity$variadic = G__9930__delegate;
return G__9930;
})()
;
cljs$core$update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return cljs$core$update__3.call(this,m,k,f);
case 4:
return cljs$core$update__4.call(this,m,k,f,x);
case 5:
return cljs$core$update__5.call(this,m,k,f,x,y);
case 6:
return cljs$core$update__6.call(this,m,k,f,x,y,z);
default:
var G__9933 = null;
if (arguments.length > 6) {
var G__9934__i = 0, G__9934__a = new Array(arguments.length -  6);
while (G__9934__i < G__9934__a.length) {G__9934__a[G__9934__i] = arguments[G__9934__i + 6]; ++G__9934__i;}
G__9933 = new cljs.core.IndexedSeq(G__9934__a,0);
}
return cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__9933);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update.cljs$lang$maxFixedArity = 6;
cljs$core$update.cljs$lang$applyTo = cljs$core$update__7.cljs$lang$applyTo;
cljs$core$update.cljs$core$IFn$_invoke$arity$3 = cljs$core$update__3;
cljs$core$update.cljs$core$IFn$_invoke$arity$4 = cljs$core$update__4;
cljs$core$update.cljs$core$IFn$_invoke$arity$5 = cljs$core$update__5;
cljs$core$update.cljs$core$IFn$_invoke$arity$6 = cljs$core$update__6;
cljs$core$update.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function cljs$core$__GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function cljs$core$pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function cljs$core$pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function cljs$core$pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function cljs$core$pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function cljs$core$tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function cljs$core$new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__9935 = (ll - (5));
var G__9936 = r;
ll = G__9935;
ret = G__9936;
continue;
}
break;
}
});
cljs.core.push_tail = (function cljs$core$push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = cljs$core$push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function cljs$core$vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function cljs$core$first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__9941 = cljs.core.pv_aget(node,(0));
var G__9942 = (level - (5));
node = G__9941;
level = G__9942;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function cljs$core$unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__9943 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__9944 = (level - (5));
node = G__9943;
level = G__9944;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function cljs$core$array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function cljs$core$do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,cljs$core$do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function cljs$core$pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function cljs$core$__GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function cljs$core$ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9954 = init__$2;
var G__9955 = (j + i);
var G__9956 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9954,G__9955,G__9956) : f.call(null,G__9954,G__9955,G__9956));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9967 = (j + (1));
var G__9968 = init__$3;
j = G__9967;
init__$2 = G__9968;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9957 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9957) : cljs.core.deref.call(null,G__9957));
} else {
var G__9969 = (i + len);
var G__9970 = init__$2;
i = G__9969;
init__$1 = G__9970;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__9958 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__9958) : cljs.core.tv_editable_root.call(null,G__9958));
})(),(function (){var G__9959 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__9959) : cljs.core.tv_editable_tail.call(null,G__9959));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9960 = init__$2;
var G__9961 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9960,G__9961) : f.call(null,G__9960,G__9961));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9971 = (j + (1));
var G__9972 = init__$3;
j = G__9971;
init__$2 = G__9972;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9962 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9962) : cljs.core.deref.call(null,G__9962));
} else {
var G__9973 = (i + len);
var G__9974 = init__$2;
i = G__9973;
init__$1 = G__9974;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__9963 = coll__$1;
var G__9964 = cljs.core.first_array_for_longvec(coll__$1);
var G__9965 = (0);
var G__9966 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9963,G__9964,G__9965,G__9966) : cljs.core.chunked_seq.call(null,G__9963,G__9964,G__9965,G__9966));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4907__auto___9975 = len;
var i_9976 = (0);
while(true){
if((i_9976 < n__4907__auto___9975)){
(new_tail[i_9976] = (self__.tail[i_9976]));

var G__9977 = (i_9976 + (1));
i_9976 = G__9977;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__9978 = null;
var G__9978__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9978__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9978 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9978__2.call(this,self__,k);
case 3:
return G__9978__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9978.cljs$core$IFn$_invoke$arity$2 = G__9978__2;
G__9978.cljs$core$IFn$_invoke$arity$3 = G__9978__3;
return G__9978;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args9953){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9953)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function cljs$core$__GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__9979 = (i + (1));
var G__9980 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__9979;
out = G__9980;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
/**
 * Creates a new vector containing the contents of coll. JavaScript arrays
 * will be aliased and should not be modified.
 */
cljs.core.vec = (function cljs$core$vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
 * Creates a new vector containing the args.
 * @param {...*} var_args
 */
cljs.core.vector = (function() { 
var cljs$core$vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var cljs$core$vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9981__i = 0, G__9981__a = new Array(arguments.length -  0);
while (G__9981__i < G__9981__a.length) {G__9981__a[G__9981__i] = arguments[G__9981__i + 0]; ++G__9981__i;}
  args = new cljs.core.IndexedSeq(G__9981__a,0);
} 
return cljs$core$vector__delegate.call(this,args);};
cljs$core$vector.cljs$lang$maxFixedArity = 0;
cljs$core$vector.cljs$lang$applyTo = (function (arglist__9982){
var args = cljs.core.seq(arglist__9982);
return cljs$core$vector__delegate(args);
});
cljs$core$vector.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vector__delegate;
return cljs$core$vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9983 = self__.vec;
var G__9984 = self__.node;
var G__9985 = self__.i;
var G__9986 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9983,G__9984,G__9985,G__9986) : cljs.core.chunked_seq.call(null,G__9983,G__9984,G__9985,G__9986));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__9987 = self__.vec;
var G__9988 = (self__.i + self__.off);
var G__9989 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9987,G__9988,G__9989) : cljs.core.subvec.call(null,G__9987,G__9988,G__9989));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__9990 = self__.vec;
var G__9991 = (self__.i + self__.off);
var G__9992 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9990,G__9991,G__9992) : cljs.core.subvec.call(null,G__9990,G__9991,G__9992));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9993 = self__.vec;
var G__9994 = self__.node;
var G__9995 = self__.i;
var G__9996 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9993,G__9994,G__9995,G__9996) : cljs.core.chunked_seq.call(null,G__9993,G__9994,G__9995,G__9996));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9997 = self__.vec;
var G__9998 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9999 = end;
var G__10000 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9997,G__9998,G__9999,G__10000) : cljs.core.chunked_seq.call(null,G__9997,G__9998,G__9999,G__10000));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__10001 = self__.vec;
var G__10002 = self__.node;
var G__10003 = self__.i;
var G__10004 = self__.off;
var G__10005 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__10001,G__10002,G__10003,G__10004,G__10005) : cljs.core.chunked_seq.call(null,G__10001,G__10002,G__10003,G__10004,G__10005));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10006 = self__.vec;
var G__10007 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10008 = end;
var G__10009 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10006,G__10007,G__10008,G__10009) : cljs.core.chunked_seq.call(null,G__10006,G__10007,G__10008,G__10009));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function cljs$core$__GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
cljs.core.chunked_seq = (function() {
var cljs$core$chunked_seq = null;
var cljs$core$chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var cljs$core$chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var cljs$core$chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
cljs$core$chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return cljs$core$chunked_seq__3.call(this,vec,node,i);
case 4:
return cljs$core$chunked_seq__4.call(this,vec,node,i,off);
case 5:
return cljs$core$chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$chunked_seq__3;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$chunked_seq__4;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$5 = cljs$core$chunked_seq__5;
return cljs$core$chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__10011 = self__.meta;
var G__10012 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__10013 = self__.start;
var G__10014 = (function (){var x__4337__auto__ = self__.end;
var y__4338__auto__ = (v_pos + (1));
return ((x__4337__auto__ > y__4338__auto__) ? x__4337__auto__ : y__4338__auto__);
})();
var G__10015 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10011,G__10012,G__10013,G__10014,G__10015) : cljs.core.build_subvec.call(null,G__10011,G__10012,G__10013,G__10014,G__10015));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__10016 = self__.meta;
var G__10017 = self__.v;
var G__10018 = self__.start;
var G__10019 = (self__.end - (1));
var G__10020 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10016,G__10017,G__10018,G__10019,G__10020) : cljs.core.build_subvec.call(null,G__10016,G__10017,G__10018,G__10019,G__10020));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function cljs$core$subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return cljs$core$subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__10022 = meta__$1;
var G__10023 = self__.v;
var G__10024 = self__.start;
var G__10025 = self__.end;
var G__10026 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10022,G__10023,G__10024,G__10025,G__10026) : cljs.core.build_subvec.call(null,G__10022,G__10023,G__10024,G__10025,G__10026));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10027 = self__.meta;
var G__10028 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__10029 = self__.start;
var G__10030 = (self__.end + (1));
var G__10031 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10027,G__10028,G__10029,G__10030,G__10031) : cljs.core.build_subvec.call(null,G__10027,G__10028,G__10029,G__10030,G__10031));
});

cljs.core.Subvec.prototype.call = (function() {
var G__10032 = null;
var G__10032__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10032__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10032 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10032__2.call(this,self__,k);
case 3:
return G__10032__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10032.cljs$core$IFn$_invoke$arity$2 = G__10032__2;
G__10032.cljs$core$IFn$_invoke$arity$3 = G__10032__3;
return G__10032;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args10010){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10010)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function cljs$core$__GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
cljs.core.build_subvec = (function cljs$core$build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__10033 = meta;
var G__10034 = v.v;
var G__10035 = (v.start + start);
var G__10036 = (v.start + end);
var G__10037 = __hash;
meta = G__10033;
v = G__10034;
start = G__10035;
end = G__10036;
__hash = G__10037;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
 * Returns a persistent vector of the items in vector from
 * start (inclusive) to end (exclusive).  If end is not supplied,
 * defaults to (count vector). This operation is O(1) and very fast, as
 * the resulting vector shares structure with the original and no
 * trimming is done.
 */
cljs.core.subvec = (function() {
var cljs$core$subvec = null;
var cljs$core$subvec__2 = (function (v,start){
return cljs$core$subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var cljs$core$subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
cljs$core$subvec = function(v,start,end){
switch(arguments.length){
case 2:
return cljs$core$subvec__2.call(this,v,start);
case 3:
return cljs$core$subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subvec.cljs$core$IFn$_invoke$arity$2 = cljs$core$subvec__2;
cljs$core$subvec.cljs$core$IFn$_invoke$arity$3 = cljs$core$subvec__3;
return cljs$core$subvec;
})()
;
cljs.core.tv_ensure_editable = (function cljs$core$tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function cljs$core$tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj10044 = {};
return obj10044;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function cljs$core$tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function cljs$core$tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return cljs$core$tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function cljs$core$tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function cljs$core$unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__10052 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__10053 = (level - (5));
node = G__10052;
level = G__10053;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__10057 = null;
var G__10057__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10057__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10057 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10057__2.call(this,self__,k);
case 3:
return G__10057__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10057.cljs$core$IFn$_invoke$arity$2 = G__10057__2;
G__10057.cljs$core$IFn$_invoke$arity$3 = G__10057__3;
return G__10057;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args10054){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10054)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function cljs$core$go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,cljs$core$go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function cljs$core$__GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function cljs$core$__GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__4020__auto__ = self__.front;
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__4020__auto__ = self__.rear;
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function cljs$core$__GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function cljs$core$__GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
 * Assumes y is a map. Returns true if x equals y, otherwise returns
 * false.
 */
cljs.core.equiv_map = (function cljs$core$equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function cljs$core$scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__10058 = (i + incr);
i = G__10058;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function cljs$core$obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function cljs$core$obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__10059 = (i + (1));
var G__10060 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__10059;
out = G__10060;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function cljs$core$obj_clone(obj,ks){
var new_obj = (function (){var obj10064 = {};
return obj10064;
})();
var l = ks.length;
var i_10065 = (0);
while(true){
if((i_10065 < l)){
var k_10066 = (ks[i_10065]);
(new_obj[k_10066] = (obj[k_10066]));

var G__10067 = (i_10065 + (1));
i_10065 = G__10067;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4008__auto__ = (function (){var G__10071 = k;
return goog.isString(G__10071);
})();
if(cljs.core.truth_(and__4008__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4008__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__10072 = init__$1;
var G__10073 = k;
var G__10074 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10072,G__10073,G__10074) : f.call(null,G__10072,G__10073,G__10074));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10075 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10075) : cljs.core.deref.call(null,G__10075));
} else {
var G__10081 = cljs.core.rest(keys__$1);
var G__10082 = init__$2;
keys__$1 = G__10081;
init__$1 = G__10082;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4008__auto__ = (function (){var G__10077 = k;
return goog.isString(G__10077);
})();
if(cljs.core.truth_(and__4008__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4008__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__10078 = k;
return goog.isString(G__10078);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4008__auto__ = (function (){var G__10080 = k;
return goog.isString(G__10080);
})();
if(cljs.core.truth_(and__4008__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4008__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__10068_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__10068_SHARP_,(self__.strobj[p1__10068_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__10083 = null;
var G__10083__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10083__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10083 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10083__2.call(this,self__,k);
case 3:
return G__10083__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10083.cljs$core$IFn$_invoke$arity$2 = G__10083__2;
G__10083.cljs$core$IFn$_invoke$arity$3 = G__10083__3;
return G__10083;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args10069){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10069)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function cljs$core$__GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj10085 = {};
return obj10085;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__10086 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10086,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10086,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function cljs$core$__GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function cljs$core$es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function cljs$core$__GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function cljs$core$es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function cljs$core$array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__10087 = (i + (2));
i = G__10087;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function cljs$core$array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__10088 = (i + (2));
i = G__10088;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function cljs$core$array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__10089 = (i + (2));
i = G__10089;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function cljs$core$array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__10090 = (i + (2));
i = G__10090;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function cljs$core$array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__10091 = (i + (2));
i = G__10091;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function cljs$core$array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__4020__auto__ = (function (){var G__10095 = k;
return goog.isString(G__10095);
})();
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function cljs$core$array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_10096 = (0);
while(true){
if((i_10096 < l)){
(narr[i_10096] = (arr[i_10096]));

var G__10097 = (i_10096 + (1));
i_10096 = G__10097;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function cljs$core$__GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
cljs.core.persistent_array_map_seq = (function cljs$core$persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function cljs$core$__GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10099 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10099) : cljs.core.keys.call(null,G__10099));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10100 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10100) : cljs.core.vals.call(null,G__10100));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10101 = cljs.core.seq(coll);
var chunk__10102 = null;
var count__10103 = (0);
var i__10104 = (0);
while(true){
if((i__10104 < count__10103)){
var vec__10105 = chunk__10102.cljs$core$IIndexed$_nth$arity$2(null,i__10104);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10105,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10105,(1),null);
var G__10106_10119 = v;
var G__10107_10120 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10106_10119,G__10107_10120) : f.call(null,G__10106_10119,G__10107_10120));

var G__10121 = seq__10101;
var G__10122 = chunk__10102;
var G__10123 = count__10103;
var G__10124 = (i__10104 + (1));
seq__10101 = G__10121;
chunk__10102 = G__10122;
count__10103 = G__10123;
i__10104 = G__10124;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10101);
if(temp__4126__auto__){
var seq__10101__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10101__$1)){
var c__4807__auto__ = cljs.core.chunk_first(seq__10101__$1);
var G__10125 = cljs.core.chunk_rest(seq__10101__$1);
var G__10126 = c__4807__auto__;
var G__10127 = cljs.core.count(c__4807__auto__);
var G__10128 = (0);
seq__10101 = G__10125;
chunk__10102 = G__10126;
count__10103 = G__10127;
i__10104 = G__10128;
continue;
} else {
var vec__10108 = cljs.core.first(seq__10101__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10108,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10108,(1),null);
var G__10109_10129 = v;
var G__10110_10130 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10109_10129,G__10110_10130) : f.call(null,G__10109_10129,G__10110_10130));

var G__10131 = cljs.core.next(seq__10101__$1);
var G__10132 = null;
var G__10133 = (0);
var G__10134 = (0);
seq__10101 = G__10131;
chunk__10102 = G__10132;
count__10103 = G__10133;
i__10104 = G__10134;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__10111 = init__$1;
var G__10112 = (self__.arr[i]);
var G__10113 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10111,G__10112,G__10113) : f.call(null,G__10111,G__10112,G__10113));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10114 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10114) : cljs.core.deref.call(null,G__10114));
} else {
var G__10135 = (i + (2));
var G__10136 = init__$2;
i = G__10135;
init__$1 = G__10136;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__10115 = other;
if(G__10115){
var bit__4694__auto__ = (G__10115.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4694__auto__) || (G__10115.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__10137 = (i + (2));
i = G__10137;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj10117 = {};
return obj10117;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__10138 = (s + (2));
var G__10139 = d;
s = G__10138;
d = G__10139;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__10140 = (s + (2));
var G__10141 = (d + (2));
s = G__10140;
d = G__10141;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__10118 = cljs.core.aclone(self__.arr);
(G__10118[(idx + (1))] = v);

return G__10118;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10142 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10143 = cljs.core.next(es);
ret = G__10142;
es = G__10143;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__10144 = null;
var G__10144__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10144__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10144 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10144__2.call(this,self__,k);
case 3:
return G__10144__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10144.cljs$core$IFn$_invoke$arity$2 = G__10144__2;
G__10144.cljs$core$IFn$_invoke$arity$3 = G__10144__3;
return G__10144;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args10098){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10098)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function cljs$core$__GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10145 = (i + (2));
var G__10146 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10145;
ret = G__10146;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__10147_10155 = self__.arr;
G__10147_10155.pop();

G__10147_10155.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__10148 = self__.len;
var G__10149 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__10148,G__10149) : cljs.core.array__GT_transient_hash_map.call(null,G__10148,G__10149));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__10150 = o;
if(G__10150){
var bit__4701__auto__ = (G__10150.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4701__auto__) || (G__10150.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10150.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10150);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10150);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__10151 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10151) : cljs.core.key.call(null,G__10151));
})(),(function (){var G__10152 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10152) : cljs.core.val.call(null,G__10152));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__10156 = cljs.core.next(es);
var G__10157 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__10153 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10153) : cljs.core.key.call(null,G__10153));
})(),(function (){var G__10154 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10154) : cljs.core.val.call(null,G__10154));
})());
es = G__10156;
tcoll__$2 = G__10157;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function cljs$core$__GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function cljs$core$array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__10158 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__10159 = (i + (2));
out = G__10158;
i = G__10159;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function cljs$core$__GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function cljs$core$key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function cljs$core$mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var cljs$core$clone_and_set = null;
var cljs$core$clone_and_set__3 = (function (arr,i,a){
var G__10162 = cljs.core.aclone(arr);
(G__10162[i] = a);

return G__10162;
});
var cljs$core$clone_and_set__5 = (function (arr,i,a,j,b){
var G__10163 = cljs.core.aclone(arr);
(G__10163[i] = a);

(G__10163[j] = b);

return G__10163;
});
cljs$core$clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return cljs$core$clone_and_set__3.call(this,arr,i,a);
case 5:
return cljs$core$clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$3 = cljs$core$clone_and_set__3;
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$5 = cljs$core$clone_and_set__5;
return cljs$core$clone_and_set;
})()
;
cljs.core.remove_pair = (function cljs$core$remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function cljs$core$bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function cljs$core$bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var cljs$core$edit_and_set = null;
var cljs$core$edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var cljs$core$edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
cljs$core$edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return cljs$core$edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return cljs$core$edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$4 = cljs$core$edit_and_set__4;
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$6 = cljs$core$edit_and_set__6;
return cljs$core$edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function cljs$core$inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__10168 = init__$1;
var G__10169 = k;
var G__10170 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10168,G__10169,G__10170) : f.call(null,G__10168,G__10169,G__10170));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10171 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10171) : cljs.core.deref.call(null,G__10171));
} else {
var G__10172 = (i + (2));
var G__10173 = init__$2;
i = G__10172;
init__$1 = G__10173;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10174 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10174) : cljs.core.create_inode_seq.call(null,G__10174));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10188 = (0);
var j_10189 = (0);
while(true){
if((i_10188 < (32))){
if((((self__.bitmap >>> i_10188) & (1)) === (0))){
var G__10190 = (i_10188 + (1));
var G__10191 = j_10189;
i_10188 = G__10190;
j_10189 = G__10191;
continue;
} else {
(nodes[i_10188] = ((!(((self__.arr[j_10189]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_10189])),(self__.arr[j_10189]),(self__.arr[(j_10189 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10189 + (1))])));

var G__10192 = (i_10188 + (1));
var G__10193 = (j_10189 + (2));
i_10188 = G__10192;
j_10189 = G__10193;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10175 = edit__$1;
var G__10176 = (shift + (5));
var G__10177 = key_or_nil;
var G__10178 = val_or_node;
var G__10179 = hash;
var G__10180 = key;
var G__10181 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__10175,G__10176,G__10177,G__10178,G__10179,G__10180,G__10181) : cljs.core.create_node.call(null,G__10175,G__10176,G__10177,G__10178,G__10179,G__10180,G__10181));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10194 = (0);
var j_10195 = (0);
while(true){
if((i_10194 < (32))){
if((((self__.bitmap >>> i_10194) & (1)) === (0))){
var G__10196 = (i_10194 + (1));
var G__10197 = j_10195;
i_10194 = G__10196;
j_10195 = G__10197;
continue;
} else {
(nodes[i_10194] = ((!(((self__.arr[j_10195]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_10195])),(self__.arr[j_10195]),(self__.arr[(j_10195 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10195 + (1))])));

var G__10198 = (i_10194 + (1));
var G__10199 = (j_10195 + (2));
i_10194 = G__10198;
j_10195 = G__10199;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10182 = (shift + (5));
var G__10183 = key_or_nil;
var G__10184 = val_or_node;
var G__10185 = hash;
var G__10186 = key;
var G__10187 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__10182,G__10183,G__10184,G__10185,G__10186,G__10187) : cljs.core.create_node.call(null,G__10182,G__10183,G__10184,G__10185,G__10186,G__10187));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function cljs$core$__GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function cljs$core$pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__10200 = (i + (1));
var G__10201 = (j + (2));
var G__10202 = (bitmap | ((1) << i));
i = G__10200;
j = G__10201;
bitmap = G__10202;
continue;
} else {
var G__10203 = (i + (1));
var G__10204 = j;
var G__10205 = bitmap;
i = G__10203;
j = G__10204;
bitmap = G__10205;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10206 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__10206) : cljs.core.create_array_node_seq.call(null,G__10206));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10207 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10207) : cljs.core.deref.call(null,G__10207));
} else {
var G__10208 = (i + (1));
var G__10209 = init__$2;
i = G__10208;
init__$1 = G__10209;
continue;
}
} else {
var G__10210 = (i + (1));
var G__10211 = init__$1;
i = G__10210;
init__$1 = G__10211;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function cljs$core$__GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function cljs$core$hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__10212 = (i + (2));
i = G__10212;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10213 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10213) : cljs.core.create_inode_seq.call(null,G__10213));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function cljs$core$__GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var cljs$core$create_node = null;
var cljs$core$create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var cljs$core$create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
cljs$core$create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return cljs$core$create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return cljs$core$create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_node.cljs$core$IFn$_invoke$arity$6 = cljs$core$create_node__6;
cljs$core$create_node.cljs$core$IFn$_invoke$arity$7 = cljs$core$create_node__7;
return cljs$core$create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__10214 = self__.nodes;
var G__10215 = (self__.i + (2));
var G__10216 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10214,G__10215,G__10216) : cljs.core.create_inode_seq.call(null,G__10214,G__10215,G__10216));
} else {
var G__10217 = self__.nodes;
var G__10218 = self__.i;
var G__10219 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10217,G__10218,G__10219) : cljs.core.create_inode_seq.call(null,G__10217,G__10218,G__10219));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function cljs$core$__GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
cljs.core.create_inode_seq = (function() {
var cljs$core$create_inode_seq = null;
var cljs$core$create_inode_seq__1 = (function (nodes){
return cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var cljs$core$create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__10223 = (j + (2));
j = G__10223;
continue;
}
} else {
var G__10224 = (j + (2));
j = G__10224;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
cljs$core$create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_inode_seq__1.call(this,nodes);
case 3:
return cljs$core$create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_inode_seq__1;
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$create_inode_seq__3;
return cljs$core$create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__10225 = null;
var G__10226 = self__.nodes;
var G__10227 = self__.i;
var G__10228 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__10225,G__10226,G__10227,G__10228) : cljs.core.create_array_node_seq.call(null,G__10225,G__10226,G__10227,G__10228));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function cljs$core$__GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var cljs$core$create_array_node_seq = null;
var cljs$core$create_array_node_seq__1 = (function (nodes){
return cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var cljs$core$create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__10233 = (j + (1));
j = G__10233;
continue;
}
} else {
var G__10234 = (j + (1));
j = G__10234;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
cljs$core$create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_array_node_seq__1.call(this,meta);
case 4:
return cljs$core$create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_array_node_seq__1;
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$create_array_node_seq__4;
return cljs$core$create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10236 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10236) : cljs.core.keys.call(null,G__10236));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10237 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10237) : cljs.core.vals.call(null,G__10237));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10238 = cljs.core.seq(coll);
var chunk__10239 = null;
var count__10240 = (0);
var i__10241 = (0);
while(true){
if((i__10241 < count__10240)){
var vec__10242 = chunk__10239.cljs$core$IIndexed$_nth$arity$2(null,i__10241);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10242,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10242,(1),null);
var G__10243_10254 = v;
var G__10244_10255 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10243_10254,G__10244_10255) : f.call(null,G__10243_10254,G__10244_10255));

var G__10256 = seq__10238;
var G__10257 = chunk__10239;
var G__10258 = count__10240;
var G__10259 = (i__10241 + (1));
seq__10238 = G__10256;
chunk__10239 = G__10257;
count__10240 = G__10258;
i__10241 = G__10259;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10238);
if(temp__4126__auto__){
var seq__10238__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10238__$1)){
var c__4807__auto__ = cljs.core.chunk_first(seq__10238__$1);
var G__10260 = cljs.core.chunk_rest(seq__10238__$1);
var G__10261 = c__4807__auto__;
var G__10262 = cljs.core.count(c__4807__auto__);
var G__10263 = (0);
seq__10238 = G__10260;
chunk__10239 = G__10261;
count__10240 = G__10262;
i__10241 = G__10263;
continue;
} else {
var vec__10245 = cljs.core.first(seq__10238__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10245,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10245,(1),null);
var G__10246_10264 = v;
var G__10247_10265 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10246_10264,G__10247_10265) : f.call(null,G__10246_10264,G__10247_10265));

var G__10266 = cljs.core.next(seq__10238__$1);
var G__10267 = null;
var G__10268 = (0);
var G__10269 = (0);
seq__10238 = G__10266;
chunk__10239 = G__10267;
count__10240 = G__10268;
i__10241 = G__10269;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__10248 = init;
var G__10249 = null;
var G__10250 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10248,G__10249,G__10250) : f.call(null,G__10248,G__10249,G__10250));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10251 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10251) : cljs.core.deref.call(null,G__10251));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj10253 = {};
return obj10253;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10270 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10271 = cljs.core.next(es);
ret = G__10270;
es = G__10271;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__10272 = null;
var G__10272__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10272__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10272 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10272__2.call(this,self__,k);
case 3:
return G__10272__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10272.cljs$core$IFn$_invoke$arity$2 = G__10272__2;
G__10272.cljs$core$IFn$_invoke$arity$3 = G__10272__3;
return G__10272;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args10235){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10235)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function cljs$core$__GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10273 = (i + (2));
var G__10274 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10273;
ret = G__10274;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10275 = (i + (1));
var G__10276 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__10275;
out = G__10276;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__10277 = o;
if(G__10277){
var bit__4701__auto__ = (G__10277.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4701__auto__) || (G__10277.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10277.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10277);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10277);
}
})()){
return tcoll.assoc_BANG_((function (){var G__10278 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10278) : cljs.core.key.call(null,G__10278));
})(),(function (){var G__10279 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10279) : cljs.core.val.call(null,G__10279));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__10282 = cljs.core.next(es);
var G__10283 = tcoll__$1.assoc_BANG_((function (){var G__10280 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10280) : cljs.core.key.call(null,G__10280));
})(),(function (){var G__10281 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10281) : cljs.core.val.call(null,G__10281));
})());
es = G__10282;
tcoll__$1 = G__10283;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function cljs$core$__GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function cljs$core$tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__10284 = ((ascending_QMARK_)?t.left:t.right);
var G__10285 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__10284;
stack__$1 = G__10285;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function cljs$core$__GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
cljs.core.create_tree_map_seq = (function cljs$core$create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function cljs$core$balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function cljs$core$balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function cljs$core$balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function cljs$core$balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function cljs$core$tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?cljs$core$tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10298 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10298) : cljs.core.deref.call(null,G__10298));
} else {
var init__$2 = (function (){var G__10299 = init__$1;
var G__10300 = node.key;
var G__10301 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10299,G__10300,G__10301) : f.call(null,G__10299,G__10300,G__10301));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10302 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10302) : cljs.core.deref.call(null,G__10302));
} else {
var init__$3 = ((!((node.right == null)))?cljs$core$tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__10303 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10303) : cljs.core.deref.call(null,G__10303));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__10305 = null;
var G__10305__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10305__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10305 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10305__2.call(this,self__,k);
case 3:
return G__10305__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10305.cljs$core$IFn$_invoke$arity$2 = G__10305__2;
G__10305.cljs$core$IFn$_invoke$arity$3 = G__10305__3;
return G__10305;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args10304){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10304)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function cljs$core$__GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__10307 = null;
var G__10307__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10307__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10307 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10307__2.call(this,self__,k);
case 3:
return G__10307__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10307.cljs$core$IFn$_invoke$arity$2 = G__10307__2;
G__10307.cljs$core$IFn$_invoke$arity$3 = G__10307__3;
return G__10307;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args10306){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10306)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function cljs$core$__GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
cljs.core.tree_map_add = (function cljs$core$tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__10320 = k;
var G__10321 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10320,G__10321) : comp.call(null,G__10320,G__10321));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = cljs$core$tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = cljs$core$tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function cljs$core$tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,cljs$core$tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,cljs$core$tree_map_append(left,right.left),right.right,null));
} else {
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function cljs$core$tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__10340 = k;
var G__10341 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10340,G__10341) : comp.call(null,G__10340,G__10341));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = cljs$core$tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = cljs$core$tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function cljs$core$tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__10352 = k;
var G__10353 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10352,G__10353) : comp.call(null,G__10352,G__10353));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,cljs$core$tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,cljs$core$tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10355 = cljs.core.seq(coll);
var chunk__10356 = null;
var count__10357 = (0);
var i__10358 = (0);
while(true){
if((i__10358 < count__10357)){
var vec__10359 = chunk__10356.cljs$core$IIndexed$_nth$arity$2(null,i__10358);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10359,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10359,(1),null);
var G__10360_10372 = v;
var G__10361_10373 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10360_10372,G__10361_10373) : f.call(null,G__10360_10372,G__10361_10373));

var G__10374 = seq__10355;
var G__10375 = chunk__10356;
var G__10376 = count__10357;
var G__10377 = (i__10358 + (1));
seq__10355 = G__10374;
chunk__10356 = G__10375;
count__10357 = G__10376;
i__10358 = G__10377;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10355);
if(temp__4126__auto__){
var seq__10355__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10355__$1)){
var c__4807__auto__ = cljs.core.chunk_first(seq__10355__$1);
var G__10378 = cljs.core.chunk_rest(seq__10355__$1);
var G__10379 = c__4807__auto__;
var G__10380 = cljs.core.count(c__4807__auto__);
var G__10381 = (0);
seq__10355 = G__10378;
chunk__10356 = G__10379;
count__10357 = G__10380;
i__10358 = G__10381;
continue;
} else {
var vec__10362 = cljs.core.first(seq__10355__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10362,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10362,(1),null);
var G__10363_10382 = v;
var G__10364_10383 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10363_10382,G__10364_10383) : f.call(null,G__10363_10382,G__10364_10383));

var G__10384 = cljs.core.next(seq__10355__$1);
var G__10385 = null;
var G__10386 = (0);
var G__10387 = (0);
seq__10355 = G__10384;
chunk__10356 = G__10385;
count__10357 = G__10386;
i__10358 = G__10387;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10365 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10365) : cljs.core.keys.call(null,G__10365));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10366 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10366) : cljs.core.vals.call(null,G__10366));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10367 = k;
var G__10368 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10367,G__10368) : self__.comp.call(null,G__10367,G__10368));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__10388 = t.left;
t = G__10388;
continue;
} else {
var G__10389 = t.right;
t = G__10389;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10390 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10391 = cljs.core.next(es);
ret = G__10390;
es = G__10391;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__10392 = null;
var G__10392__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10392__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10392 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10392__2.call(this,self__,k);
case 3:
return G__10392__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10392.cljs$core$IFn$_invoke$arity$2 = G__10392__2;
G__10392.cljs$core$IFn$_invoke$arity$3 = G__10392__3;
return G__10392;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args10354){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10354)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10369 = k;
var G__10370 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10369,G__10370) : self__.comp.call(null,G__10369,G__10370));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__10393 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10394 = t.left;
stack = G__10393;
t = G__10394;
continue;
} else {
var G__10395 = stack;
var G__10396 = t.right;
stack = G__10395;
t = G__10396;
continue;
}
} else {
if((c > (0))){
var G__10397 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10398 = t.right;
stack = G__10397;
t = G__10398;
continue;
} else {
var G__10399 = stack;
var G__10400 = t.left;
stack = G__10399;
t = G__10400;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__10371 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10371) : cljs.core.key.call(null,G__10371));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function cljs$core$__GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
/**
 * keyval => key val
 * Returns a new hash map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.hash_map = (function() { 
var cljs$core$hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__10401 = cljs.core.nnext(in$);
var G__10402 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10401;
out = G__10402;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var cljs$core$hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10403__i = 0, G__10403__a = new Array(arguments.length -  0);
while (G__10403__i < G__10403__a.length) {G__10403__a[G__10403__i] = arguments[G__10403__i + 0]; ++G__10403__i;}
  keyvals = new cljs.core.IndexedSeq(G__10403__a,0);
} 
return cljs$core$hash_map__delegate.call(this,keyvals);};
cljs$core$hash_map.cljs$lang$maxFixedArity = 0;
cljs$core$hash_map.cljs$lang$applyTo = (function (arglist__10404){
var keyvals = cljs.core.seq(arglist__10404);
return cljs$core$hash_map__delegate(keyvals);
});
cljs$core$hash_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_map__delegate;
return cljs$core$hash_map;
})()
;
/**
 * keyval => key val
 * Returns a new array map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.array_map = (function() { 
var cljs$core$array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var cljs$core$array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10405__i = 0, G__10405__a = new Array(arguments.length -  0);
while (G__10405__i < G__10405__a.length) {G__10405__a[G__10405__i] = arguments[G__10405__i + 0]; ++G__10405__i;}
  keyvals = new cljs.core.IndexedSeq(G__10405__a,0);
} 
return cljs$core$array_map__delegate.call(this,keyvals);};
cljs$core$array_map.cljs$lang$maxFixedArity = 0;
cljs$core$array_map.cljs$lang$applyTo = (function (arglist__10406){
var keyvals = cljs.core.seq(arglist__10406);
return cljs$core$array_map__delegate(keyvals);
});
cljs$core$array_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$array_map__delegate;
return cljs$core$array_map;
})()
;
/**
 * keyval => key val
 * Returns a new object map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.obj_map = (function() { 
var cljs$core$obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj10410 = {};
return obj10410;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__10411 = cljs.core.nnext(kvs);
kvs = G__10411;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var cljs$core$obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10412__i = 0, G__10412__a = new Array(arguments.length -  0);
while (G__10412__i < G__10412__a.length) {G__10412__a[G__10412__i] = arguments[G__10412__i + 0]; ++G__10412__i;}
  keyvals = new cljs.core.IndexedSeq(G__10412__a,0);
} 
return cljs$core$obj_map__delegate.call(this,keyvals);};
cljs$core$obj_map.cljs$lang$maxFixedArity = 0;
cljs$core$obj_map.cljs$lang$applyTo = (function (arglist__10413){
var keyvals = cljs.core.seq(arglist__10413);
return cljs$core$obj_map__delegate(keyvals);
});
cljs$core$obj_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$obj_map__delegate;
return cljs$core$obj_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.sorted_map = (function() { 
var cljs$core$sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__10414 = cljs.core.nnext(in$);
var G__10415 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10414;
out = G__10415;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10416__i = 0, G__10416__a = new Array(arguments.length -  0);
while (G__10416__i < G__10416__a.length) {G__10416__a[G__10416__i] = arguments[G__10416__i + 0]; ++G__10416__i;}
  keyvals = new cljs.core.IndexedSeq(G__10416__a,0);
} 
return cljs$core$sorted_map__delegate.call(this,keyvals);};
cljs$core$sorted_map.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_map.cljs$lang$applyTo = (function (arglist__10417){
var keyvals = cljs.core.seq(arglist__10417);
return cljs$core$sorted_map__delegate(keyvals);
});
cljs$core$sorted_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map__delegate;
return cljs$core$sorted_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_map_by = (function() { 
var cljs$core$sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__10418 = cljs.core.nnext(in$);
var G__10419 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10418;
out = G__10419;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__10420__i = 0, G__10420__a = new Array(arguments.length -  1);
while (G__10420__i < G__10420__a.length) {G__10420__a[G__10420__i] = arguments[G__10420__i + 1]; ++G__10420__i;}
  keyvals = new cljs.core.IndexedSeq(G__10420__a,0);
} 
return cljs$core$sorted_map_by__delegate.call(this,comparator,keyvals);};
cljs$core$sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_map_by.cljs$lang$applyTo = (function (arglist__10421){
var comparator = cljs.core.first(arglist__10421);
var keyvals = cljs.core.rest(arglist__10421);
return cljs$core$sorted_map_by__delegate(comparator,keyvals);
});
cljs$core$sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map_by__delegate;
return cljs$core$sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10422 = self__.mseq;
if(G__10422){
var bit__4701__auto__ = (G__10422.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4701__auto__) || (G__10422.cljs$core$INext$)){
return true;
} else {
if((!G__10422.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10422);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10422);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10423 = self__.mseq;
if(G__10423){
var bit__4701__auto__ = (G__10423.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4701__auto__) || (G__10423.cljs$core$INext$)){
return true;
} else {
if((!G__10423.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10423);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10423);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function cljs$core$__GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
/**
 * Returns a sequence of the map's keys.
 */
cljs.core.keys = (function cljs$core$keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the key of the map entry.
 */
cljs.core.key = (function cljs$core$key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10424 = self__.mseq;
if(G__10424){
var bit__4701__auto__ = (G__10424.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4701__auto__) || (G__10424.cljs$core$INext$)){
return true;
} else {
if((!G__10424.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10424);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10424);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10425 = self__.mseq;
if(G__10425){
var bit__4701__auto__ = (G__10425.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4701__auto__) || (G__10425.cljs$core$INext$)){
return true;
} else {
if((!G__10425.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10425);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10425);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function cljs$core$__GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
/**
 * Returns a sequence of the map's values.
 */
cljs.core.vals = (function cljs$core$vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the value in the map entry.
 */
cljs.core.val = (function cljs$core$val(map_entry){
return cljs.core._val(map_entry);
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping from
 * the latter (left-to-right) will be the mapping in the result.
 * @param {...*} var_args
 */
cljs.core.merge = (function() { 
var cljs$core$merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__10426_SHARP_,p2__10427_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__4020__auto__ = p1__10426_SHARP_;
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__10427_SHARP_);
}),maps);
} else {
return null;
}
};
var cljs$core$merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__10428__i = 0, G__10428__a = new Array(arguments.length -  0);
while (G__10428__i < G__10428__a.length) {G__10428__a[G__10428__i] = arguments[G__10428__i + 0]; ++G__10428__i;}
  maps = new cljs.core.IndexedSeq(G__10428__a,0);
} 
return cljs$core$merge__delegate.call(this,maps);};
cljs$core$merge.cljs$lang$maxFixedArity = 0;
cljs$core$merge.cljs$lang$applyTo = (function (arglist__10429){
var maps = cljs.core.seq(arglist__10429);
return cljs$core$merge__delegate(maps);
});
cljs$core$merge.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge__delegate;
return cljs$core$merge;
})()
;
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping(s)
 * from the latter (left-to-right) will be combined with the mapping in
 * the result by calling (f val-in-result val-in-latter).
 * @param {...*} var_args
 */
cljs.core.merge_with = (function() { 
var cljs$core$merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10432 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10433 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10432,G__10433) : f.call(null,G__10432,G__10433));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__4020__auto__ = m1;
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var cljs$core$merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__10434__i = 0, G__10434__a = new Array(arguments.length -  1);
while (G__10434__i < G__10434__a.length) {G__10434__a[G__10434__i] = arguments[G__10434__i + 1]; ++G__10434__i;}
  maps = new cljs.core.IndexedSeq(G__10434__a,0);
} 
return cljs$core$merge_with__delegate.call(this,f,maps);};
cljs$core$merge_with.cljs$lang$maxFixedArity = 1;
cljs$core$merge_with.cljs$lang$applyTo = (function (arglist__10435){
var f = cljs.core.first(arglist__10435);
var maps = cljs.core.rest(arglist__10435);
return cljs$core$merge_with__delegate(f,maps);
});
cljs$core$merge_with.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge_with__delegate;
return cljs$core$merge_with;
})()
;
/**
 * Returns a map containing only those entries in map whose key is in keys
 */
cljs.core.select_keys = (function cljs$core$select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$_COLON_cljs$core_SLASH_not_found);
var G__10436 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$_COLON_cljs$core_SLASH_not_found))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__10437 = cljs.core.next(keys);
ret = G__10436;
keys = G__10437;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10440 = cljs.core.seq(coll);
var chunk__10441 = null;
var count__10442 = (0);
var i__10443 = (0);
while(true){
if((i__10443 < count__10442)){
var vec__10444 = chunk__10441.cljs$core$IIndexed$_nth$arity$2(null,i__10443);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10444,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10444,(1),null);
var G__10445_10450 = v;
var G__10446_10451 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10445_10450,G__10446_10451) : f.call(null,G__10445_10450,G__10446_10451));

var G__10452 = seq__10440;
var G__10453 = chunk__10441;
var G__10454 = count__10442;
var G__10455 = (i__10443 + (1));
seq__10440 = G__10452;
chunk__10441 = G__10453;
count__10442 = G__10454;
i__10443 = G__10455;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10440);
if(temp__4126__auto__){
var seq__10440__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10440__$1)){
var c__4807__auto__ = cljs.core.chunk_first(seq__10440__$1);
var G__10456 = cljs.core.chunk_rest(seq__10440__$1);
var G__10457 = c__4807__auto__;
var G__10458 = cljs.core.count(c__4807__auto__);
var G__10459 = (0);
seq__10440 = G__10456;
chunk__10441 = G__10457;
count__10442 = G__10458;
i__10443 = G__10459;
continue;
} else {
var vec__10447 = cljs.core.first(seq__10440__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10447,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10447,(1),null);
var G__10448_10460 = v;
var G__10449_10461 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10448_10460,G__10449_10461) : f.call(null,G__10448_10460,G__10449_10461));

var G__10462 = cljs.core.next(seq__10440__$1);
var G__10463 = null;
var G__10464 = (0);
var G__10465 = (0);
seq__10440 = G__10462;
chunk__10441 = G__10463;
count__10442 = G__10464;
i__10443 = G__10465;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10438_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10438_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__10466 = null;
var G__10466__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10466__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10466 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10466__2.call(this,self__,k);
case 3:
return G__10466__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10466.cljs$core$IFn$_invoke$arity$2 = G__10466__2;
G__10466.cljs$core$IFn$_invoke$arity$3 = G__10466__3;
return G__10466;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args10439){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10439)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function cljs$core$__GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10467 = (i + (1));
var G__10468 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__10467;
out = G__10468;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__10469 = (i + (1));
var G__10470 = cljs.core._conj_BANG_(out,(items[i]));
i = G__10469;
out = G__10470;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__10472 = null;
var G__10472__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__10472__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__10472 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10472__2.call(this,self__,k);
case 3:
return G__10472__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10472.cljs$core$IFn$_invoke$arity$2 = G__10472__2;
G__10472.cljs$core$IFn$_invoke$arity$3 = G__10472__3;
return G__10472;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args10471){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10471)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function cljs$core$__GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10475 = cljs.core.seq(coll);
var chunk__10476 = null;
var count__10477 = (0);
var i__10478 = (0);
while(true){
if((i__10478 < count__10477)){
var vec__10479 = chunk__10476.cljs$core$IIndexed$_nth$arity$2(null,i__10478);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10479,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10479,(1),null);
var G__10480_10485 = v;
var G__10481_10486 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10480_10485,G__10481_10486) : f.call(null,G__10480_10485,G__10481_10486));

var G__10487 = seq__10475;
var G__10488 = chunk__10476;
var G__10489 = count__10477;
var G__10490 = (i__10478 + (1));
seq__10475 = G__10487;
chunk__10476 = G__10488;
count__10477 = G__10489;
i__10478 = G__10490;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10475);
if(temp__4126__auto__){
var seq__10475__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10475__$1)){
var c__4807__auto__ = cljs.core.chunk_first(seq__10475__$1);
var G__10491 = cljs.core.chunk_rest(seq__10475__$1);
var G__10492 = c__4807__auto__;
var G__10493 = cljs.core.count(c__4807__auto__);
var G__10494 = (0);
seq__10475 = G__10491;
chunk__10476 = G__10492;
count__10477 = G__10493;
i__10478 = G__10494;
continue;
} else {
var vec__10482 = cljs.core.first(seq__10475__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10482,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10482,(1),null);
var G__10483_10495 = v;
var G__10484_10496 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10483_10495,G__10484_10496) : f.call(null,G__10483_10495,G__10484_10496));

var G__10497 = cljs.core.next(seq__10475__$1);
var G__10498 = null;
var G__10499 = (0);
var G__10500 = (0);
seq__10475 = G__10497;
chunk__10476 = G__10498;
count__10477 = G__10499;
i__10478 = G__10500;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10473_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10473_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__10501 = null;
var G__10501__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10501__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10501 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10501__2.call(this,self__,k);
case 3:
return G__10501__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10501.cljs$core$IFn$_invoke$arity$2 = G__10501__2;
G__10501.cljs$core$IFn$_invoke$arity$3 = G__10501__3;
return G__10501;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args10474){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10474)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function cljs$core$__GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
cljs.core.set_from_indexed_seq = (function cljs$core$set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4901__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4901__auto__.length)){
var G__10502 = (i + (1));
var G__10503 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__10502;
res = G__10503;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
 * Returns a set of the distinct elements of coll.
 */
cljs.core.set = (function cljs$core$set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__10504 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__10505 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__10504;
out = G__10505;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
 * Returns a new hash set with supplied keys.  Any equal keys are
 * handled as if by repeated uses of conj.
 * @param {...*} var_args
 */
cljs.core.hash_set = (function() {
var cljs$core$hash_set = null;
var cljs$core$hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var cljs$core$hash_set__1 = (function() { 
var G__10506__delegate = function (keys){
return cljs.core.set(keys);
};
var G__10506 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10507__i = 0, G__10507__a = new Array(arguments.length -  0);
while (G__10507__i < G__10507__a.length) {G__10507__a[G__10507__i] = arguments[G__10507__i + 0]; ++G__10507__i;}
  keys = new cljs.core.IndexedSeq(G__10507__a,0);
} 
return G__10506__delegate.call(this,keys);};
G__10506.cljs$lang$maxFixedArity = 0;
G__10506.cljs$lang$applyTo = (function (arglist__10508){
var keys = cljs.core.seq(arglist__10508);
return G__10506__delegate(keys);
});
G__10506.cljs$core$IFn$_invoke$arity$variadic = G__10506__delegate;
return G__10506;
})()
;
cljs$core$hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return cljs$core$hash_set__0.call(this);
default:
var G__10509 = null;
if (arguments.length > 0) {
var G__10510__i = 0, G__10510__a = new Array(arguments.length -  0);
while (G__10510__i < G__10510__a.length) {G__10510__a[G__10510__i] = arguments[G__10510__i + 0]; ++G__10510__i;}
G__10509 = new cljs.core.IndexedSeq(G__10510__a,0);
}
return cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__10509);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$hash_set.cljs$lang$maxFixedArity = 0;
cljs$core$hash_set.cljs$lang$applyTo = cljs$core$hash_set__1.cljs$lang$applyTo;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$0 = cljs$core$hash_set__0;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$hash_set;
})()
;
/**
 * Returns a new sorted set with supplied keys.
 * @param {...*} var_args
 */
cljs.core.sorted_set = (function() { 
var cljs$core$sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var cljs$core$sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10511__i = 0, G__10511__a = new Array(arguments.length -  0);
while (G__10511__i < G__10511__a.length) {G__10511__a[G__10511__i] = arguments[G__10511__i + 0]; ++G__10511__i;}
  keys = new cljs.core.IndexedSeq(G__10511__a,0);
} 
return cljs$core$sorted_set__delegate.call(this,keys);};
cljs$core$sorted_set.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_set.cljs$lang$applyTo = (function (arglist__10512){
var keys = cljs.core.seq(arglist__10512);
return cljs$core$sorted_set__delegate(keys);
});
cljs$core$sorted_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set__delegate;
return cljs$core$sorted_set;
})()
;
/**
 * Returns a new sorted set with supplied keys, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_set_by = (function() { 
var cljs$core$sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var cljs$core$sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__10513__i = 0, G__10513__a = new Array(arguments.length -  1);
while (G__10513__i < G__10513__a.length) {G__10513__a[G__10513__i] = arguments[G__10513__i + 1]; ++G__10513__i;}
  keys = new cljs.core.IndexedSeq(G__10513__a,0);
} 
return cljs$core$sorted_set_by__delegate.call(this,comparator,keys);};
cljs$core$sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_set_by.cljs$lang$applyTo = (function (arglist__10514){
var comparator = cljs.core.first(arglist__10514);
var keys = cljs.core.rest(arglist__10514);
return cljs$core$sorted_set_by__delegate(comparator,keys);
});
cljs$core$sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set_by__delegate;
return cljs$core$sorted_set_by;
})()
;
/**
 * Given a map of replacement pairs and a vector/collection, returns a
 * vector/seq with any elements = a key in smap replaced with the
 * corresponding val in smap.  Returns a transducer when no collection
 * is provided.
 */
cljs.core.replace = (function() {
var cljs$core$replace = null;
var cljs$core$replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__10515_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10515_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__10515_SHARP_;
}
}));
});
var cljs$core$replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__10516_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10516_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__10516_SHARP_;
}
}),coll);
}
});
cljs$core$replace = function(smap,coll){
switch(arguments.length){
case 1:
return cljs$core$replace__1.call(this,smap);
case 2:
return cljs$core$replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$replace.cljs$core$IFn$_invoke$arity$1 = cljs$core$replace__1;
cljs$core$replace.cljs$core$IFn$_invoke$arity$2 = cljs$core$replace__2;
return cljs$core$replace;
})()
;
/**
 * Returns a lazy sequence of the elements of coll with duplicates removed
 */
cljs.core.distinct = (function() {
var cljs$core$distinct = null;
var cljs$core$distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__10537 = null;
var G__10537__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10537__1 = (function (result){
var G__10527 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10527) : rf.call(null,G__10527));
});
var G__10537__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__10528 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10528) : cljs.core.deref.call(null,G__10528));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__10529 = result;
var G__10530 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10529,G__10530) : rf.call(null,G__10529,G__10530));
}
});
G__10537 = function(result,input){
switch(arguments.length){
case 0:
return G__10537__0.call(this);
case 1:
return G__10537__1.call(this,result);
case 2:
return G__10537__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10537.cljs$core$IFn$_invoke$arity$0 = G__10537__0;
G__10537.cljs$core$IFn$_invoke$arity$1 = G__10537__1;
G__10537.cljs$core$IFn$_invoke$arity$2 = G__10537__2;
return G__10537;
})()
;})(seen))
});
});
var cljs$core$distinct__1 = (function (coll){
var step = (function cljs$core$distinct_$_step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__10535,seen__$1){
while(true){
var vec__10536 = p__10535;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10536,(0),null);
var xs__$1 = vec__10536;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__10538 = cljs.core.rest(s);
var G__10539 = seen__$1;
p__10535 = G__10538;
seen__$1 = G__10539;
continue;
} else {
return cljs.core.cons(f,cljs$core$distinct_$_step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs$core$distinct = function(coll){
switch(arguments.length){
case 0:
return cljs$core$distinct__0.call(this);
case 1:
return cljs$core$distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct.cljs$core$IFn$_invoke$arity$0 = cljs$core$distinct__0;
cljs$core$distinct.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct__1;
return cljs$core$distinct;
})()
;
/**
 * Return a seq of all but the last item in coll, in linear time
 */
cljs.core.butlast = (function cljs$core$butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__10540 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__10541 = cljs.core.next(s__$1);
ret = G__10540;
s__$1 = G__10541;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
 * Returns the name String of a string, symbol or keyword.
 */
cljs.core.name = (function cljs$core$name(x){
if((function (){var G__10543 = x;
if(G__10543){
var bit__4694__auto__ = (G__10543.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4694__auto__) || (G__10543.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
 * Returns a map with the keys mapped to the corresponding vals.
 */
cljs.core.zipmap = (function cljs$core$zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__10544 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__10545 = cljs.core.next(ks);
var G__10546 = cljs.core.next(vs);
map = G__10544;
ks = G__10545;
vs = G__10546;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
 * Returns the x for which (k x), a number, is greatest.
 * @param {...*} var_args
 */
cljs.core.max_key = (function() {
var cljs$core$max_key = null;
var cljs$core$max_key__2 = (function (k,x){
return x;
});
var cljs$core$max_key__3 = (function (k,x,y){
if(((function (){var G__10557 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10557) : k.call(null,G__10557));
})() > (function (){var G__10558 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10558) : k.call(null,G__10558));
})())){
return x;
} else {
return y;
}
});
var cljs$core$max_key__4 = (function() { 
var G__10559__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10547_SHARP_,p2__10548_SHARP_){
return cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,p1__10547_SHARP_,p2__10548_SHARP_);
}),cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10559 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10560__i = 0, G__10560__a = new Array(arguments.length -  3);
while (G__10560__i < G__10560__a.length) {G__10560__a[G__10560__i] = arguments[G__10560__i + 3]; ++G__10560__i;}
  more = new cljs.core.IndexedSeq(G__10560__a,0);
} 
return G__10559__delegate.call(this,k,x,y,more);};
G__10559.cljs$lang$maxFixedArity = 3;
G__10559.cljs$lang$applyTo = (function (arglist__10561){
var k = cljs.core.first(arglist__10561);
arglist__10561 = cljs.core.next(arglist__10561);
var x = cljs.core.first(arglist__10561);
arglist__10561 = cljs.core.next(arglist__10561);
var y = cljs.core.first(arglist__10561);
var more = cljs.core.rest(arglist__10561);
return G__10559__delegate(k,x,y,more);
});
G__10559.cljs$core$IFn$_invoke$arity$variadic = G__10559__delegate;
return G__10559;
})()
;
cljs$core$max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$max_key__2.call(this,k,x);
case 3:
return cljs$core$max_key__3.call(this,k,x,y);
default:
var G__10562 = null;
if (arguments.length > 3) {
var G__10563__i = 0, G__10563__a = new Array(arguments.length -  3);
while (G__10563__i < G__10563__a.length) {G__10563__a[G__10563__i] = arguments[G__10563__i + 3]; ++G__10563__i;}
G__10562 = new cljs.core.IndexedSeq(G__10563__a,0);
}
return cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10562);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max_key.cljs$lang$maxFixedArity = 3;
cljs$core$max_key.cljs$lang$applyTo = cljs$core$max_key__4.cljs$lang$applyTo;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$max_key__2;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$max_key__3;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max_key;
})()
;
/**
 * Returns the x for which (k x), a number, is least.
 * @param {...*} var_args
 */
cljs.core.min_key = (function() {
var cljs$core$min_key = null;
var cljs$core$min_key__2 = (function (k,x){
return x;
});
var cljs$core$min_key__3 = (function (k,x,y){
if(((function (){var G__10574 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10574) : k.call(null,G__10574));
})() < (function (){var G__10575 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10575) : k.call(null,G__10575));
})())){
return x;
} else {
return y;
}
});
var cljs$core$min_key__4 = (function() { 
var G__10576__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10564_SHARP_,p2__10565_SHARP_){
return cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,p1__10564_SHARP_,p2__10565_SHARP_);
}),cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10576 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10577__i = 0, G__10577__a = new Array(arguments.length -  3);
while (G__10577__i < G__10577__a.length) {G__10577__a[G__10577__i] = arguments[G__10577__i + 3]; ++G__10577__i;}
  more = new cljs.core.IndexedSeq(G__10577__a,0);
} 
return G__10576__delegate.call(this,k,x,y,more);};
G__10576.cljs$lang$maxFixedArity = 3;
G__10576.cljs$lang$applyTo = (function (arglist__10578){
var k = cljs.core.first(arglist__10578);
arglist__10578 = cljs.core.next(arglist__10578);
var x = cljs.core.first(arglist__10578);
arglist__10578 = cljs.core.next(arglist__10578);
var y = cljs.core.first(arglist__10578);
var more = cljs.core.rest(arglist__10578);
return G__10576__delegate(k,x,y,more);
});
G__10576.cljs$core$IFn$_invoke$arity$variadic = G__10576__delegate;
return G__10576;
})()
;
cljs$core$min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$min_key__2.call(this,k,x);
case 3:
return cljs$core$min_key__3.call(this,k,x,y);
default:
var G__10579 = null;
if (arguments.length > 3) {
var G__10580__i = 0, G__10580__a = new Array(arguments.length -  3);
while (G__10580__i < G__10580__a.length) {G__10580__a[G__10580__i] = arguments[G__10580__i + 3]; ++G__10580__i;}
G__10579 = new cljs.core.IndexedSeq(G__10580__a,0);
}
return cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10579);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min_key.cljs$lang$maxFixedArity = 3;
cljs$core$min_key.cljs$lang$applyTo = cljs$core$min_key__4.cljs$lang$applyTo;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$min_key__2;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$min_key__3;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function cljs$core$__GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function cljs$core$array_list(){
return (new cljs.core.ArrayList([]));
});
/**
 * Returns a lazy sequence of lists like partition, but may include
 * partitions with fewer than n items at the end.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_all = (function() {
var cljs$core$partition_all = null;
var cljs$core$partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__10597 = null;
var G__10597__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10597__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10592 = result;
var G__10593 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10592,G__10593) : rf.call(null,G__10592,G__10593));
})());
})());
var G__10594 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10594) : rf.call(null,G__10594));
});
var G__10597__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__10595 = result;
var G__10596 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10595,G__10596) : rf.call(null,G__10595,G__10596));
} else {
return result;
}
});
G__10597 = function(result,input){
switch(arguments.length){
case 0:
return G__10597__0.call(this);
case 1:
return G__10597__1.call(this,result);
case 2:
return G__10597__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10597.cljs$core$IFn$_invoke$arity$0 = G__10597__0;
G__10597.cljs$core$IFn$_invoke$arity$1 = G__10597__1;
G__10597.cljs$core$IFn$_invoke$arity$2 = G__10597__2;
return G__10597;
})()
;})(a))
});
});
var cljs$core$partition_all__2 = (function (n,coll){
return cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_all__1.call(this,n);
case 2:
return cljs$core$partition_all__2.call(this,n,step);
case 3:
return cljs$core$partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_all__1;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_all__2;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition_all__3;
return cljs$core$partition_all;
})()
;
/**
 * Returns a lazy sequence of successive items from coll while
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.take_while = (function() {
var cljs$core$take_while = null;
var cljs$core$take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__10610 = null;
var G__10610__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10610__1 = (function (result){
var G__10605 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10605) : rf.call(null,G__10605));
});
var G__10610__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__10606 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10606) : pred.call(null,G__10606));
})())){
var G__10607 = result;
var G__10608 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10607,G__10608) : rf.call(null,G__10607,G__10608));
} else {
return cljs.core.reduced(result);
}
});
G__10610 = function(result,input){
switch(arguments.length){
case 0:
return G__10610__0.call(this);
case 1:
return G__10610__1.call(this,result);
case 2:
return G__10610__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10610.cljs$core$IFn$_invoke$arity$0 = G__10610__0;
G__10610.cljs$core$IFn$_invoke$arity$1 = G__10610__1;
G__10610.cljs$core$IFn$_invoke$arity$2 = G__10610__2;
return G__10610;
})()
});
});
var cljs$core$take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__10609 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10609) : pred.call(null,G__10609));
})())){
return cljs.core.cons(cljs.core.first(s),cljs$core$take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$take_while__1.call(this,pred);
case 2:
return cljs$core$take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_while__1;
cljs$core$take_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_while__2;
return cljs$core$take_while;
})()
;
cljs.core.mk_bound_fn = (function cljs$core$mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__10615 = (function (){var G__10617 = cljs.core._entry_key(sc,e);
var G__10618 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10617,G__10618) : comp.call(null,G__10617,G__10618));
})();
var G__10616 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__10615,G__10616) : test.call(null,G__10615,G__10616));
});
});
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.subseq = (function() {
var cljs$core$subseq = null;
var cljs$core$subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10622 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10622,(0),null);
var s = vec__10622;
if(cljs.core.truth_((function (){var G__10623 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10623) : include.call(null,G__10623));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var cljs$core$subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10624 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10624,(0),null);
var s = vec__10624;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$subseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$subseq__3;
cljs$core$subseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$subseq__5;
return cljs$core$subseq;
})()
;
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a reverse seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.rsubseq = (function() {
var cljs$core$rsubseq = null;
var cljs$core$rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10628 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10628,(0),null);
var s = vec__10628;
if(cljs.core.truth_((function (){var G__10629 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10629) : include.call(null,G__10629));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var cljs$core$rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10630 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10630,(0),null);
var s = vec__10630;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$rsubseq__3;
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$rsubseq__5;
return cljs$core$rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function cljs$core$__GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__10631 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__10631) : Math.ceil.call(null,G__10631));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4441__auto__ = self__.__hash;
if(!((h__4441__auto__ == null))){
return h__4441__auto__;
} else {
var h__4441__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4441__auto____$1;

return h__4441__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__10632 = ret;
var G__10633 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10632,G__10633) : f.call(null,G__10632,G__10633));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__10634 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10634) : cljs.core.deref.call(null,G__10634));
} else {
var G__10635 = (i + self__.step);
var G__10636 = ret__$1;
i = G__10635;
ret = G__10636;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function cljs$core$__GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1,
 * and end to infinity.
 */
cljs.core.range = (function() {
var cljs$core$range = null;
var cljs$core$range__0 = (function (){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var cljs$core$range__1 = (function (end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var cljs$core$range__2 = (function (start,end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var cljs$core$range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
cljs$core$range = function(start,end,step){
switch(arguments.length){
case 0:
return cljs$core$range__0.call(this);
case 1:
return cljs$core$range__1.call(this,start);
case 2:
return cljs$core$range__2.call(this,start,end);
case 3:
return cljs$core$range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$range.cljs$core$IFn$_invoke$arity$0 = cljs$core$range__0;
cljs$core$range.cljs$core$IFn$_invoke$arity$1 = cljs$core$range__1;
cljs$core$range.cljs$core$IFn$_invoke$arity$2 = cljs$core$range__2;
cljs$core$range.cljs$core$IFn$_invoke$arity$3 = cljs$core$range__3;
return cljs$core$range;
})()
;
/**
 * Returns a lazy seq of every nth item in coll.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.take_nth = (function() {
var cljs$core$take_nth = null;
var cljs$core$take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__10654 = null;
var G__10654__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10654__1 = (function (result){
var G__10651 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10651) : rf.call(null,G__10651));
});
var G__10654__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__10652 = result;
var G__10653 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10652,G__10653) : rf.call(null,G__10652,G__10653));
} else {
return result;
}
});
G__10654 = function(result,input){
switch(arguments.length){
case 0:
return G__10654__0.call(this);
case 1:
return G__10654__1.call(this,result);
case 2:
return G__10654__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10654.cljs$core$IFn$_invoke$arity$0 = G__10654__0;
G__10654.cljs$core$IFn$_invoke$arity$1 = G__10654__1;
G__10654.cljs$core$IFn$_invoke$arity$2 = G__10654__2;
return G__10654;
})()
;})(ia))
});
});
var cljs$core$take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$take_nth = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take_nth__1.call(this,n);
case 2:
return cljs$core$take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_nth__1;
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_nth__2;
return cljs$core$take_nth;
})()
;
/**
 * Returns a vector of [(take-while pred coll) (drop-while pred coll)]
 */
cljs.core.split_with = (function cljs$core$split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
 * Applies f to each value in coll, splitting it each time f returns a
 * new value.  Returns a lazy seq of partitions.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_by = (function() {
var cljs$core$partition_by = null;
var cljs$core$partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$_COLON_cljs$core_SLASH_none);
return ((function (a,pa){
return (function() {
var G__10676 = null;
var G__10676__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10676__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10667 = result;
var G__10668 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10667,G__10668) : rf.call(null,G__10667,G__10668));
})());
})());
var G__10669 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10669) : rf.call(null,G__10669));
});
var G__10676__2 = (function (result,input){
var pval = (function (){var G__10670 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10670) : cljs.core.deref.call(null,G__10670));
})();
var val = (function (){var G__10671 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10671) : f.call(null,G__10671));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$_COLON_cljs$core_SLASH_none)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__10672 = result;
var G__10673 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10672,G__10673) : rf.call(null,G__10672,G__10673));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__10676 = function(result,input){
switch(arguments.length){
case 0:
return G__10676__0.call(this);
case 1:
return G__10676__1.call(this,result);
case 2:
return G__10676__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10676.cljs$core$IFn$_invoke$arity$0 = G__10676__0;
G__10676.cljs$core$IFn$_invoke$arity$1 = G__10676__1;
G__10676.cljs$core$IFn$_invoke$arity$2 = G__10676__2;
return G__10676;
})()
;})(a,pa))
});
});
var cljs$core$partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__10674 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10674) : f.call(null,G__10674));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__10655_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__10675 = p1__10655_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10675) : f.call(null,G__10675));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_by = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_by__1.call(this,f);
case 2:
return cljs$core$partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_by__1;
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_by__2;
return cljs$core$partition_by;
})()
;
/**
 * Returns a map from distinct items in coll to the number of times
 * they appear.
 */
cljs.core.frequencies = (function cljs$core$frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Returns a lazy seq of the intermediate values of the reduction (as
 * per reduce) of coll by f, starting with init.
 */
cljs.core.reductions = (function() {
var cljs$core$reductions = null;
var cljs$core$reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var cljs$core$reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__10685 = init;
var G__10686 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10685,G__10686) : f.call(null,G__10685,G__10686));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
cljs$core$reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return cljs$core$reductions__2.call(this,f,init);
case 3:
return cljs$core$reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reductions.cljs$core$IFn$_invoke$arity$2 = cljs$core$reductions__2;
cljs$core$reductions.cljs$core$IFn$_invoke$arity$3 = cljs$core$reductions__3;
return cljs$core$reductions;
})()
;
/**
 * Takes a set of functions and returns a fn that is the juxtaposition
 * of those fns.  The returned fn takes a variable number of args, and
 * returns a vector containing the result of applying each fn to the
 * args (left-to-right).
 * ((juxt a b c) x) => [(a x) (b x) (c x)]
 * @param {...*} var_args
 */
cljs.core.juxt = (function() {
var cljs$core$juxt = null;
var cljs$core$juxt__1 = (function (f){
return (function() {
var G__10781 = null;
var G__10781__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__10781__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10739 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10739) : f.call(null,G__10739));
})()],null));
});
var G__10781__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10740 = x;
var G__10741 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10740,G__10741) : f.call(null,G__10740,G__10741));
})()],null));
});
var G__10781__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10742 = x;
var G__10743 = y;
var G__10744 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10742,G__10743,G__10744) : f.call(null,G__10742,G__10743,G__10744));
})()],null));
});
var G__10781__4 = (function() { 
var G__10782__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__10782 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10783__i = 0, G__10783__a = new Array(arguments.length -  3);
while (G__10783__i < G__10783__a.length) {G__10783__a[G__10783__i] = arguments[G__10783__i + 3]; ++G__10783__i;}
  args = new cljs.core.IndexedSeq(G__10783__a,0);
} 
return G__10782__delegate.call(this,x,y,z,args);};
G__10782.cljs$lang$maxFixedArity = 3;
G__10782.cljs$lang$applyTo = (function (arglist__10784){
var x = cljs.core.first(arglist__10784);
arglist__10784 = cljs.core.next(arglist__10784);
var y = cljs.core.first(arglist__10784);
arglist__10784 = cljs.core.next(arglist__10784);
var z = cljs.core.first(arglist__10784);
var args = cljs.core.rest(arglist__10784);
return G__10782__delegate(x,y,z,args);
});
G__10782.cljs$core$IFn$_invoke$arity$variadic = G__10782__delegate;
return G__10782;
})()
;
G__10781 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10781__0.call(this);
case 1:
return G__10781__1.call(this,x);
case 2:
return G__10781__2.call(this,x,y);
case 3:
return G__10781__3.call(this,x,y,z);
default:
var G__10785 = null;
if (arguments.length > 3) {
var G__10786__i = 0, G__10786__a = new Array(arguments.length -  3);
while (G__10786__i < G__10786__a.length) {G__10786__a[G__10786__i] = arguments[G__10786__i + 3]; ++G__10786__i;}
G__10785 = new cljs.core.IndexedSeq(G__10786__a,0);
}
return G__10781__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10785);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10781.cljs$lang$maxFixedArity = 3;
G__10781.cljs$lang$applyTo = G__10781__4.cljs$lang$applyTo;
G__10781.cljs$core$IFn$_invoke$arity$0 = G__10781__0;
G__10781.cljs$core$IFn$_invoke$arity$1 = G__10781__1;
G__10781.cljs$core$IFn$_invoke$arity$2 = G__10781__2;
G__10781.cljs$core$IFn$_invoke$arity$3 = G__10781__3;
G__10781.cljs$core$IFn$_invoke$arity$variadic = G__10781__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10781;
})()
});
var cljs$core$juxt__2 = (function (f,g){
return (function() {
var G__10787 = null;
var G__10787__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__10787__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10745 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10745) : f.call(null,G__10745));
})(),(function (){var G__10746 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10746) : g.call(null,G__10746));
})()],null));
});
var G__10787__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10747 = x;
var G__10748 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10747,G__10748) : f.call(null,G__10747,G__10748));
})(),(function (){var G__10749 = x;
var G__10750 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10749,G__10750) : g.call(null,G__10749,G__10750));
})()],null));
});
var G__10787__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10751 = x;
var G__10752 = y;
var G__10753 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10751,G__10752,G__10753) : f.call(null,G__10751,G__10752,G__10753));
})(),(function (){var G__10754 = x;
var G__10755 = y;
var G__10756 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10754,G__10755,G__10756) : g.call(null,G__10754,G__10755,G__10756));
})()],null));
});
var G__10787__4 = (function() { 
var G__10788__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__10788 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10789__i = 0, G__10789__a = new Array(arguments.length -  3);
while (G__10789__i < G__10789__a.length) {G__10789__a[G__10789__i] = arguments[G__10789__i + 3]; ++G__10789__i;}
  args = new cljs.core.IndexedSeq(G__10789__a,0);
} 
return G__10788__delegate.call(this,x,y,z,args);};
G__10788.cljs$lang$maxFixedArity = 3;
G__10788.cljs$lang$applyTo = (function (arglist__10790){
var x = cljs.core.first(arglist__10790);
arglist__10790 = cljs.core.next(arglist__10790);
var y = cljs.core.first(arglist__10790);
arglist__10790 = cljs.core.next(arglist__10790);
var z = cljs.core.first(arglist__10790);
var args = cljs.core.rest(arglist__10790);
return G__10788__delegate(x,y,z,args);
});
G__10788.cljs$core$IFn$_invoke$arity$variadic = G__10788__delegate;
return G__10788;
})()
;
G__10787 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10787__0.call(this);
case 1:
return G__10787__1.call(this,x);
case 2:
return G__10787__2.call(this,x,y);
case 3:
return G__10787__3.call(this,x,y,z);
default:
var G__10791 = null;
if (arguments.length > 3) {
var G__10792__i = 0, G__10792__a = new Array(arguments.length -  3);
while (G__10792__i < G__10792__a.length) {G__10792__a[G__10792__i] = arguments[G__10792__i + 3]; ++G__10792__i;}
G__10791 = new cljs.core.IndexedSeq(G__10792__a,0);
}
return G__10787__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10791);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10787.cljs$lang$maxFixedArity = 3;
G__10787.cljs$lang$applyTo = G__10787__4.cljs$lang$applyTo;
G__10787.cljs$core$IFn$_invoke$arity$0 = G__10787__0;
G__10787.cljs$core$IFn$_invoke$arity$1 = G__10787__1;
G__10787.cljs$core$IFn$_invoke$arity$2 = G__10787__2;
G__10787.cljs$core$IFn$_invoke$arity$3 = G__10787__3;
G__10787.cljs$core$IFn$_invoke$arity$variadic = G__10787__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10787;
})()
});
var cljs$core$juxt__3 = (function (f,g,h){
return (function() {
var G__10793 = null;
var G__10793__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__10793__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10757 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10757) : f.call(null,G__10757));
})(),(function (){var G__10758 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10758) : g.call(null,G__10758));
})(),(function (){var G__10759 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__10759) : h.call(null,G__10759));
})()],null));
});
var G__10793__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10760 = x;
var G__10761 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10760,G__10761) : f.call(null,G__10760,G__10761));
})(),(function (){var G__10762 = x;
var G__10763 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10762,G__10763) : g.call(null,G__10762,G__10763));
})(),(function (){var G__10764 = x;
var G__10765 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__10764,G__10765) : h.call(null,G__10764,G__10765));
})()],null));
});
var G__10793__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10766 = x;
var G__10767 = y;
var G__10768 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10766,G__10767,G__10768) : f.call(null,G__10766,G__10767,G__10768));
})(),(function (){var G__10769 = x;
var G__10770 = y;
var G__10771 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10769,G__10770,G__10771) : g.call(null,G__10769,G__10770,G__10771));
})(),(function (){var G__10772 = x;
var G__10773 = y;
var G__10774 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__10772,G__10773,G__10774) : h.call(null,G__10772,G__10773,G__10774));
})()],null));
});
var G__10793__4 = (function() { 
var G__10794__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__10794 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10795__i = 0, G__10795__a = new Array(arguments.length -  3);
while (G__10795__i < G__10795__a.length) {G__10795__a[G__10795__i] = arguments[G__10795__i + 3]; ++G__10795__i;}
  args = new cljs.core.IndexedSeq(G__10795__a,0);
} 
return G__10794__delegate.call(this,x,y,z,args);};
G__10794.cljs$lang$maxFixedArity = 3;
G__10794.cljs$lang$applyTo = (function (arglist__10796){
var x = cljs.core.first(arglist__10796);
arglist__10796 = cljs.core.next(arglist__10796);
var y = cljs.core.first(arglist__10796);
arglist__10796 = cljs.core.next(arglist__10796);
var z = cljs.core.first(arglist__10796);
var args = cljs.core.rest(arglist__10796);
return G__10794__delegate(x,y,z,args);
});
G__10794.cljs$core$IFn$_invoke$arity$variadic = G__10794__delegate;
return G__10794;
})()
;
G__10793 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10793__0.call(this);
case 1:
return G__10793__1.call(this,x);
case 2:
return G__10793__2.call(this,x,y);
case 3:
return G__10793__3.call(this,x,y,z);
default:
var G__10797 = null;
if (arguments.length > 3) {
var G__10798__i = 0, G__10798__a = new Array(arguments.length -  3);
while (G__10798__i < G__10798__a.length) {G__10798__a[G__10798__i] = arguments[G__10798__i + 3]; ++G__10798__i;}
G__10797 = new cljs.core.IndexedSeq(G__10798__a,0);
}
return G__10793__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10797);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10793.cljs$lang$maxFixedArity = 3;
G__10793.cljs$lang$applyTo = G__10793__4.cljs$lang$applyTo;
G__10793.cljs$core$IFn$_invoke$arity$0 = G__10793__0;
G__10793.cljs$core$IFn$_invoke$arity$1 = G__10793__1;
G__10793.cljs$core$IFn$_invoke$arity$2 = G__10793__2;
G__10793.cljs$core$IFn$_invoke$arity$3 = G__10793__3;
G__10793.cljs$core$IFn$_invoke$arity$variadic = G__10793__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10793;
})()
});
var cljs$core$juxt__4 = (function() { 
var G__10799__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__10800 = null;
var G__10800__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10687_SHARP_,p2__10688_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10687_SHARP_,(function (){return (p2__10688_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__10688_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__10688_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10800__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10689_SHARP_,p2__10690_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10689_SHARP_,(function (){var G__10775 = x;
return (p2__10690_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__10690_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10775) : p2__10690_SHARP_.call(null,G__10775));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10800__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10691_SHARP_,p2__10692_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10691_SHARP_,(function (){var G__10776 = x;
var G__10777 = y;
return (p2__10692_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__10692_SHARP_.cljs$core$IFn$_invoke$arity$2(G__10776,G__10777) : p2__10692_SHARP_.call(null,G__10776,G__10777));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10800__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10693_SHARP_,p2__10694_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10693_SHARP_,(function (){var G__10778 = x;
var G__10779 = y;
var G__10780 = z;
return (p2__10694_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__10694_SHARP_.cljs$core$IFn$_invoke$arity$3(G__10778,G__10779,G__10780) : p2__10694_SHARP_.call(null,G__10778,G__10779,G__10780));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10800__4 = (function() { 
var G__10801__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10695_SHARP_,p2__10696_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10695_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__10696_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__10801 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10802__i = 0, G__10802__a = new Array(arguments.length -  3);
while (G__10802__i < G__10802__a.length) {G__10802__a[G__10802__i] = arguments[G__10802__i + 3]; ++G__10802__i;}
  args = new cljs.core.IndexedSeq(G__10802__a,0);
} 
return G__10801__delegate.call(this,x,y,z,args);};
G__10801.cljs$lang$maxFixedArity = 3;
G__10801.cljs$lang$applyTo = (function (arglist__10803){
var x = cljs.core.first(arglist__10803);
arglist__10803 = cljs.core.next(arglist__10803);
var y = cljs.core.first(arglist__10803);
arglist__10803 = cljs.core.next(arglist__10803);
var z = cljs.core.first(arglist__10803);
var args = cljs.core.rest(arglist__10803);
return G__10801__delegate(x,y,z,args);
});
G__10801.cljs$core$IFn$_invoke$arity$variadic = G__10801__delegate;
return G__10801;
})()
;
G__10800 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10800__0.call(this);
case 1:
return G__10800__1.call(this,x);
case 2:
return G__10800__2.call(this,x,y);
case 3:
return G__10800__3.call(this,x,y,z);
default:
var G__10804 = null;
if (arguments.length > 3) {
var G__10805__i = 0, G__10805__a = new Array(arguments.length -  3);
while (G__10805__i < G__10805__a.length) {G__10805__a[G__10805__i] = arguments[G__10805__i + 3]; ++G__10805__i;}
G__10804 = new cljs.core.IndexedSeq(G__10805__a,0);
}
return G__10800__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10804);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10800.cljs$lang$maxFixedArity = 3;
G__10800.cljs$lang$applyTo = G__10800__4.cljs$lang$applyTo;
G__10800.cljs$core$IFn$_invoke$arity$0 = G__10800__0;
G__10800.cljs$core$IFn$_invoke$arity$1 = G__10800__1;
G__10800.cljs$core$IFn$_invoke$arity$2 = G__10800__2;
G__10800.cljs$core$IFn$_invoke$arity$3 = G__10800__3;
G__10800.cljs$core$IFn$_invoke$arity$variadic = G__10800__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10800;
})()
;})(fs__$1))
};
var G__10799 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__10806__i = 0, G__10806__a = new Array(arguments.length -  3);
while (G__10806__i < G__10806__a.length) {G__10806__a[G__10806__i] = arguments[G__10806__i + 3]; ++G__10806__i;}
  fs = new cljs.core.IndexedSeq(G__10806__a,0);
} 
return G__10799__delegate.call(this,f,g,h,fs);};
G__10799.cljs$lang$maxFixedArity = 3;
G__10799.cljs$lang$applyTo = (function (arglist__10807){
var f = cljs.core.first(arglist__10807);
arglist__10807 = cljs.core.next(arglist__10807);
var g = cljs.core.first(arglist__10807);
arglist__10807 = cljs.core.next(arglist__10807);
var h = cljs.core.first(arglist__10807);
var fs = cljs.core.rest(arglist__10807);
return G__10799__delegate(f,g,h,fs);
});
G__10799.cljs$core$IFn$_invoke$arity$variadic = G__10799__delegate;
return G__10799;
})()
;
cljs$core$juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return cljs$core$juxt__1.call(this,f);
case 2:
return cljs$core$juxt__2.call(this,f,g);
case 3:
return cljs$core$juxt__3.call(this,f,g,h);
default:
var G__10808 = null;
if (arguments.length > 3) {
var G__10809__i = 0, G__10809__a = new Array(arguments.length -  3);
while (G__10809__i < G__10809__a.length) {G__10809__a[G__10809__i] = arguments[G__10809__i + 3]; ++G__10809__i;}
G__10808 = new cljs.core.IndexedSeq(G__10809__a,0);
}
return cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__10808);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$juxt.cljs$lang$maxFixedArity = 3;
cljs$core$juxt.cljs$lang$applyTo = cljs$core$juxt__4.cljs$lang$applyTo;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$1 = cljs$core$juxt__1;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$2 = cljs$core$juxt__2;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$3 = cljs$core$juxt__3;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$variadic = cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$juxt;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. dorun can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, does not retain the head and returns nil.
 */
cljs.core.dorun = (function() {
var cljs$core$dorun = null;
var cljs$core$dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__10810 = cljs.core.next(coll);
coll = G__10810;
continue;
} else {
return null;
}
break;
}
});
var cljs$core$dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__10811 = (n - (1));
var G__10812 = cljs.core.next(coll);
n = G__10811;
coll = G__10812;
continue;
} else {
return null;
}
break;
}
});
cljs$core$dorun = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$dorun__1.call(this,n);
case 2:
return cljs$core$dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dorun.cljs$core$IFn$_invoke$arity$1 = cljs$core$dorun__1;
cljs$core$dorun.cljs$core$IFn$_invoke$arity$2 = cljs$core$dorun__2;
return cljs$core$dorun;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. doall can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, retains the head and returns it, thus causing the entire
 * seq to reside in memory at one time.
 */
cljs.core.doall = (function() {
var cljs$core$doall = null;
var cljs$core$doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var cljs$core$doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
cljs$core$doall = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$doall__1.call(this,n);
case 2:
return cljs$core$doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$doall.cljs$core$IFn$_invoke$arity$1 = cljs$core$doall__1;
cljs$core$doall.cljs$core$IFn$_invoke$arity$2 = cljs$core$doall__2;
return cljs$core$doall;
})()
;
/**
 * Returns true if x is a JavaScript RegExp instance.
 */
cljs.core.regexp_QMARK_ = (function cljs$core$regexp_QMARK_(x){
return (x instanceof RegExp);
});
/**
 * Returns the result of (re-find re s) if re fully matches s.
 */
cljs.core.re_matches = (function cljs$core$re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
 * Returns the first regex match, if any, of s to re, using
 * re.exec(s). Returns a vector, containing first the matching
 * substring, then any capturing groups if the regular expression contains
 * capturing groups.
 */
cljs.core.re_find = (function cljs$core$re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
 * Returns a lazy sequence of successive matches of re in s.
 */
cljs.core.re_seq = (function cljs$core$re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?cljs$core$re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
 * Returns an instance of RegExp which has compiled the provided string.
 */
cljs.core.re_pattern = (function cljs$core$re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__10816 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10816,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10816,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10816,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function cljs$core$pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_10824 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$_COLON_print_length.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__4020__auto__ = cljs.core.constant$keyword$_COLON_more_marker.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__10825_10831 = cljs.core.first(coll);
var G__10826_10832 = writer;
var G__10827_10833 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10825_10831,G__10826_10832,G__10827_10833) : print_one.call(null,G__10825_10831,G__10826_10832,G__10827_10833));
} else {
}

var coll_10834__$1 = cljs.core.next(coll);
var n_10835 = (cljs.core.constant$keyword$_COLON_print_length.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_10834__$1) && (((n_10835 == null)) || (!((n_10835 === (0)))))){
cljs.core._write(writer,sep);

var G__10828_10836 = cljs.core.first(coll_10834__$1);
var G__10829_10837 = writer;
var G__10830_10838 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10828_10836,G__10829_10837,G__10830_10838) : print_one.call(null,G__10828_10836,G__10829_10837,G__10830_10838));

var G__10839 = cljs.core.next(coll_10834__$1);
var G__10840 = (n_10835 - (1));
coll_10834__$1 = G__10839;
n_10835 = G__10840;
continue;
} else {
if((cljs.core.seq(coll_10834__$1)) && ((n_10835 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__4020__auto__ = cljs.core.constant$keyword$_COLON_more_marker.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10824;
}});
/**
 * @param {...*} var_args
 */
cljs.core.write_all = (function() { 
var cljs$core$write_all__delegate = function (writer,ss){
var seq__10845 = cljs.core.seq(ss);
var chunk__10846 = null;
var count__10847 = (0);
var i__10848 = (0);
while(true){
if((i__10848 < count__10847)){
var s = chunk__10846.cljs$core$IIndexed$_nth$arity$2(null,i__10848);
cljs.core._write(writer,s);

var G__10849 = seq__10845;
var G__10850 = chunk__10846;
var G__10851 = count__10847;
var G__10852 = (i__10848 + (1));
seq__10845 = G__10849;
chunk__10846 = G__10850;
count__10847 = G__10851;
i__10848 = G__10852;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10845);
if(temp__4126__auto__){
var seq__10845__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10845__$1)){
var c__4807__auto__ = cljs.core.chunk_first(seq__10845__$1);
var G__10853 = cljs.core.chunk_rest(seq__10845__$1);
var G__10854 = c__4807__auto__;
var G__10855 = cljs.core.count(c__4807__auto__);
var G__10856 = (0);
seq__10845 = G__10853;
chunk__10846 = G__10854;
count__10847 = G__10855;
i__10848 = G__10856;
continue;
} else {
var s = cljs.core.first(seq__10845__$1);
cljs.core._write(writer,s);

var G__10857 = cljs.core.next(seq__10845__$1);
var G__10858 = null;
var G__10859 = (0);
var G__10860 = (0);
seq__10845 = G__10857;
chunk__10846 = G__10858;
count__10847 = G__10859;
i__10848 = G__10860;
continue;
}
} else {
return null;
}
}
break;
}
};
var cljs$core$write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__10861__i = 0, G__10861__a = new Array(arguments.length -  1);
while (G__10861__i < G__10861__a.length) {G__10861__a[G__10861__i] = arguments[G__10861__i + 1]; ++G__10861__i;}
  ss = new cljs.core.IndexedSeq(G__10861__a,0);
} 
return cljs$core$write_all__delegate.call(this,writer,ss);};
cljs$core$write_all.cljs$lang$maxFixedArity = 1;
cljs$core$write_all.cljs$lang$applyTo = (function (arglist__10862){
var writer = cljs.core.first(arglist__10862);
var ss = cljs.core.rest(arglist__10862);
return cljs$core$write_all__delegate(writer,ss);
});
cljs$core$write_all.cljs$core$IFn$_invoke$arity$variadic = cljs$core$write_all__delegate;
return cljs$core$write_all;
})()
;
cljs.core.string_print = (function cljs$core$string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function cljs$core$flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj10864 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj10864;
})();
cljs.core.quote_string = (function cljs$core$quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__10867 = "[\\\\\"\b\f\n\r\t]";
var G__10868 = "g";
return RegExp(G__10867,G__10868);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function cljs$core$pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__4008__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$_COLON_meta);
if(cljs.core.truth_(and__4008__auto__)){
var and__4008__auto____$1 = (function (){var G__10882 = obj;
if(G__10882){
var bit__4701__auto__ = (G__10882.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4701__auto__) || (G__10882.cljs$core$IMeta$)){
return true;
} else {
if((!G__10882.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10882);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10882);
}
})();
if(and__4008__auto____$1){
return cljs.core.meta(obj);
} else {
return and__4008__auto____$1;
}
} else {
return and__4008__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__10883_10893 = cljs.core.meta(obj);
var G__10884_10894 = writer;
var G__10885_10895 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__10883_10893,G__10884_10894,G__10885_10895) : cljs.core.pr_writer.call(null,G__10883_10893,G__10884_10894,G__10885_10895));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__10886 = obj;
if(G__10886){
var bit__4694__auto__ = (G__10886.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4694__auto__) || (G__10886.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__10887 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__10888 = cljs.core.pr_writer;
var G__10889 = writer;
var G__10890 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10887,G__10888,G__10889,G__10890) : cljs.core.print_map.call(null,G__10887,G__10888,G__10889,G__10890));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__10891 = obj;
return goog.isString(G__10891);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$_COLON_readably.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__10896 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__10896;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__10892 = obj;
if(G__10892){
var bit__4701__auto__ = (G__10892.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4701__auto__) || (G__10892.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__10892.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10892);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10892);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
 * Prefer this to pr-seq, because it makes the printing function
 * configurable, allowing efficient implementations such as appending
 * to a StringBuffer.
 */
cljs.core.pr_writer = (function cljs$core$pr_writer(obj,writer,opts){
var temp__4124__auto__ = cljs.core.constant$keyword$_COLON_alt_impl.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__10900 = obj;
var G__10901 = writer;
var G__10902 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,cljs.core.constant$keyword$_COLON_fallback_impl,cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__10900,G__10901,G__10902) : alt_impl.call(null,G__10900,G__10901,G__10902));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function cljs$core$pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__10907 = cljs.core.seq(cljs.core.next(objs));
var chunk__10908 = null;
var count__10909 = (0);
var i__10910 = (0);
while(true){
if((i__10910 < count__10909)){
var obj = chunk__10908.cljs$core$IIndexed$_nth$arity$2(null,i__10910);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10911 = seq__10907;
var G__10912 = chunk__10908;
var G__10913 = count__10909;
var G__10914 = (i__10910 + (1));
seq__10907 = G__10911;
chunk__10908 = G__10912;
count__10909 = G__10913;
i__10910 = G__10914;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10907);
if(temp__4126__auto__){
var seq__10907__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10907__$1)){
var c__4807__auto__ = cljs.core.chunk_first(seq__10907__$1);
var G__10915 = cljs.core.chunk_rest(seq__10907__$1);
var G__10916 = c__4807__auto__;
var G__10917 = cljs.core.count(c__4807__auto__);
var G__10918 = (0);
seq__10907 = G__10915;
chunk__10908 = G__10916;
count__10909 = G__10917;
i__10910 = G__10918;
continue;
} else {
var obj = cljs.core.first(seq__10907__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10919 = cljs.core.next(seq__10907__$1);
var G__10920 = null;
var G__10921 = (0);
var G__10922 = (0);
seq__10907 = G__10919;
chunk__10908 = G__10920;
count__10909 = G__10921;
i__10910 = G__10922;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function cljs$core$pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
 * Prints a sequence of objects to a string, observing all the
 * options given in opts
 */
cljs.core.pr_str_with_opts = (function cljs$core$pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
 * Same as pr-str-with-opts followed by (newline)
 */
cljs.core.prn_str_with_opts = (function cljs$core$prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
 * Prints a sequence of objects using string-print, observing all
 * the options given in opts
 */
cljs.core.pr_with_opts = (function cljs$core$pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function cljs$core$newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$_COLON_flush_on_newline))){
return cljs.core.flush();
} else {
return null;
}
});
/**
 * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
 * @param {...*} var_args
 */
cljs.core.pr_str = (function() { 
var cljs$core$pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10923__i = 0, G__10923__a = new Array(arguments.length -  0);
while (G__10923__i < G__10923__a.length) {G__10923__a[G__10923__i] = arguments[G__10923__i + 0]; ++G__10923__i;}
  objs = new cljs.core.IndexedSeq(G__10923__a,0);
} 
return cljs$core$pr_str__delegate.call(this,objs);};
cljs$core$pr_str.cljs$lang$maxFixedArity = 0;
cljs$core$pr_str.cljs$lang$applyTo = (function (arglist__10924){
var objs = cljs.core.seq(arglist__10924);
return cljs$core$pr_str__delegate(objs);
});
cljs$core$pr_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr_str__delegate;
return cljs$core$pr_str;
})()
;
/**
 * Same as pr-str followed by (newline)
 * @param {...*} var_args
 */
cljs.core.prn_str = (function() { 
var cljs$core$prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10925__i = 0, G__10925__a = new Array(arguments.length -  0);
while (G__10925__i < G__10925__a.length) {G__10925__a[G__10925__i] = arguments[G__10925__i + 0]; ++G__10925__i;}
  objs = new cljs.core.IndexedSeq(G__10925__a,0);
} 
return cljs$core$prn_str__delegate.call(this,objs);};
cljs$core$prn_str.cljs$lang$maxFixedArity = 0;
cljs$core$prn_str.cljs$lang$applyTo = (function (arglist__10926){
var objs = cljs.core.seq(arglist__10926);
return cljs$core$prn_str__delegate(objs);
});
cljs$core$prn_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn_str__delegate;
return cljs$core$prn_str;
})()
;
/**
 * Prints the object(s) using string-print.  Prints the
 * object(s), separated by spaces if there is more than one.
 * By default, pr and prn print in a way that objects can be
 * read by the reader
 * @param {...*} var_args
 */
cljs.core.pr = (function() { 
var cljs$core$pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10927__i = 0, G__10927__a = new Array(arguments.length -  0);
while (G__10927__i < G__10927__a.length) {G__10927__a[G__10927__i] = arguments[G__10927__i + 0]; ++G__10927__i;}
  objs = new cljs.core.IndexedSeq(G__10927__a,0);
} 
return cljs$core$pr__delegate.call(this,objs);};
cljs$core$pr.cljs$lang$maxFixedArity = 0;
cljs$core$pr.cljs$lang$applyTo = (function (arglist__10928){
var objs = cljs.core.seq(arglist__10928);
return cljs$core$pr__delegate(objs);
});
cljs$core$pr.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr__delegate;
return cljs$core$pr;
})()
;
/**
 * Prints the object(s) using string-print.
 * print and println produce output for human consumption.
 * @param {...*} var_args
 */
cljs.core.print = (function() { 
var cljs$core$cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$_COLON_readably,false));
};
var cljs$core$cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10929__i = 0, G__10929__a = new Array(arguments.length -  0);
while (G__10929__i < G__10929__a.length) {G__10929__a[G__10929__i] = arguments[G__10929__i + 0]; ++G__10929__i;}
  objs = new cljs.core.IndexedSeq(G__10929__a,0);
} 
return cljs$core$cljs_core_print__delegate.call(this,objs);};
cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs$core$cljs_core_print.cljs$lang$applyTo = (function (arglist__10930){
var objs = cljs.core.seq(arglist__10930);
return cljs$core$cljs_core_print__delegate(objs);
});
cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
return cljs$core$cljs_core_print;
})()
;
/**
 * print to a string, returning it
 * @param {...*} var_args
 */
cljs.core.print_str = (function() { 
var cljs$core$print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$_COLON_readably,false));
};
var cljs$core$print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10931__i = 0, G__10931__a = new Array(arguments.length -  0);
while (G__10931__i < G__10931__a.length) {G__10931__a[G__10931__i] = arguments[G__10931__i + 0]; ++G__10931__i;}
  objs = new cljs.core.IndexedSeq(G__10931__a,0);
} 
return cljs$core$print_str__delegate.call(this,objs);};
cljs$core$print_str.cljs$lang$maxFixedArity = 0;
cljs$core$print_str.cljs$lang$applyTo = (function (arglist__10932){
var objs = cljs.core.seq(arglist__10932);
return cljs$core$print_str__delegate(objs);
});
cljs$core$print_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$print_str__delegate;
return cljs$core$print_str;
})()
;
/**
 * Same as print followed by (newline)
 * @param {...*} var_args
 */
cljs.core.println = (function() { 
var cljs$core$println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$_COLON_readably,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10933__i = 0, G__10933__a = new Array(arguments.length -  0);
while (G__10933__i < G__10933__a.length) {G__10933__a[G__10933__i] = arguments[G__10933__i + 0]; ++G__10933__i;}
  objs = new cljs.core.IndexedSeq(G__10933__a,0);
} 
return cljs$core$println__delegate.call(this,objs);};
cljs$core$println.cljs$lang$maxFixedArity = 0;
cljs$core$println.cljs$lang$applyTo = (function (arglist__10934){
var objs = cljs.core.seq(arglist__10934);
return cljs$core$println__delegate(objs);
});
cljs$core$println.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println__delegate;
return cljs$core$println;
})()
;
/**
 * println to a string, returning it
 * @param {...*} var_args
 */
cljs.core.println_str = (function() { 
var cljs$core$println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$_COLON_readably,false));
};
var cljs$core$println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10935__i = 0, G__10935__a = new Array(arguments.length -  0);
while (G__10935__i < G__10935__a.length) {G__10935__a[G__10935__i] = arguments[G__10935__i + 0]; ++G__10935__i;}
  objs = new cljs.core.IndexedSeq(G__10935__a,0);
} 
return cljs$core$println_str__delegate.call(this,objs);};
cljs$core$println_str.cljs$lang$maxFixedArity = 0;
cljs$core$println_str.cljs$lang$applyTo = (function (arglist__10936){
var objs = cljs.core.seq(arglist__10936);
return cljs$core$println_str__delegate(objs);
});
cljs$core$println_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println_str__delegate;
return cljs$core$println_str;
})()
;
/**
 * Same as pr followed by (newline).
 * @param {...*} var_args
 */
cljs.core.prn = (function() { 
var cljs$core$prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10937__i = 0, G__10937__a = new Array(arguments.length -  0);
while (G__10937__i < G__10937__a.length) {G__10937__a[G__10937__i] = arguments[G__10937__i + 0]; ++G__10937__i;}
  objs = new cljs.core.IndexedSeq(G__10937__a,0);
} 
return cljs$core$prn__delegate.call(this,objs);};
cljs$core$prn.cljs$lang$maxFixedArity = 0;
cljs$core$prn.cljs$lang$applyTo = (function (arglist__10938){
var objs = cljs.core.seq(arglist__10938);
return cljs$core$prn__delegate(objs);
});
cljs$core$prn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn__delegate;
return cljs$core$prn;
})()
;
cljs.core.print_map = (function cljs$core$print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__10945_10951 = cljs.core.key(e);
var G__10946_10952 = w;
var G__10947_10953 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10945_10951,G__10946_10952,G__10947_10953) : print_one.call(null,G__10945_10951,G__10946_10952,G__10947_10953));

cljs.core._write(w," ");

var G__10948 = cljs.core.val(e);
var G__10949 = w;
var G__10950 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10948,G__10949,G__10950) : print_one.call(null,G__10948,G__10949,G__10950));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
 * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
 * 
 * (apply f its-current-meta args)
 * 
 * f must be free of side-effects
 * @param {...*} var_args
 */
cljs.core.alter_meta_BANG_ = (function() { 
var cljs$core$alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var cljs$core$alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__10954__i = 0, G__10954__a = new Array(arguments.length -  2);
while (G__10954__i < G__10954__a.length) {G__10954__a[G__10954__i] = arguments[G__10954__i + 2]; ++G__10954__i;}
  args = new cljs.core.IndexedSeq(G__10954__a,0);
} 
return cljs$core$alter_meta_BANG___delegate.call(this,iref,f,args);};
cljs$core$alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__10955){
var iref = cljs.core.first(arglist__10955);
arglist__10955 = cljs.core.next(arglist__10955);
var f = cljs.core.first(arglist__10955);
var args = cljs.core.rest(arglist__10955);
return cljs$core$alter_meta_BANG___delegate(iref,f,args);
});
cljs$core$alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$alter_meta_BANG___delegate;
return cljs$core$alter_meta_BANG_;
})()
;
/**
 * Atomically resets the metadata for an atom
 */
cljs.core.reset_meta_BANG_ = (function cljs$core$reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
 * Alpha - subject to change.
 * 
 * Adds a watch function to an atom reference. The watch fn must be a
 * fn of 4 args: a key, the reference, its old-state, its
 * new-state. Whenever the reference's state might have been changed,
 * any registered watches will have their functions called. The watch
 * fn will be called synchronously. Note that an atom's state
 * may have changed again prior to the fn call, so use old/new-state
 * rather than derefing the reference. Keys must be unique per
 * reference, and can be used to remove the watch with remove-watch,
 * but are otherwise considered opaque by the watch mechanism.  Bear in
 * mind that regardless of the result or action of the watch fns the
 * atom's value will change.  Example:
 * 
 * (def a (atom 0))
 * (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
 * (swap! a inc)
 * ;; Assertion Error
 * (deref a)
 * ;=> 1
 */
cljs.core.add_watch = (function cljs$core$add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
 * Alpha - subject to change.
 * 
 * Removes a watch (set by add-watch) from a reference
 */
cljs.core.remove_watch = (function cljs$core$remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
 * Returns a new symbol with a unique name. If a prefix string is
 * supplied, the name is prefix# where # is some unique number. If
 * prefix is not supplied, the prefix is 'G__'.
 */
cljs.core.gensym = (function() {
var cljs$core$gensym = null;
var cljs$core$gensym__0 = (function (){
return cljs$core$gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var cljs$core$gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__10958 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10958) : cljs.core.atom.call(null,G__10958));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
cljs$core$gensym = function(prefix_string){
switch(arguments.length){
case 0:
return cljs$core$gensym__0.call(this);
case 1:
return cljs$core$gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$gensym.cljs$core$IFn$_invoke$arity$0 = cljs$core$gensym__0;
cljs$core$gensym.cljs$core$IFn$_invoke$arity$1 = cljs$core$gensym__1;
return cljs$core$gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function cljs$core$__GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
 * returns true if x is a Delay created with delay
 */
cljs.core.delay_QMARK_ = (function cljs$core$delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
 * If x is a Delay, returns the (possibly cached) value of its expression, else returns x
 */
cljs.core.force = (function cljs$core$force(x){
if(cljs.core.delay_QMARK_(x)){
var G__10960 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10960) : cljs.core.deref.call(null,G__10960));
} else {
return x;
}
});
/**
 * Returns true if a value has been produced for a promise, delay, future or lazy sequence.
 */
cljs.core.realized_QMARK_ = (function cljs$core$realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function cljs$core$preserving_reduced(rf){
return (function (p1__10961_SHARP_,p2__10962_SHARP_){
var ret = (function (){var G__10965 = p1__10961_SHARP_;
var G__10966 = p2__10962_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10965,G__10966) : rf.call(null,G__10965,G__10966));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
 * A transducer which concatenates the contents of each input, which must be a
 * collection, into the reduction.
 */
cljs.core.cat = (function cljs$core$cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__10969 = null;
var G__10969__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10969__1 = (function (result){
var G__10968 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10968) : rf.call(null,G__10968));
});
var G__10969__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__10969 = function(result,input){
switch(arguments.length){
case 0:
return G__10969__0.call(this);
case 1:
return G__10969__1.call(this,result);
case 2:
return G__10969__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10969.cljs$core$IFn$_invoke$arity$0 = G__10969__0;
G__10969.cljs$core$IFn$_invoke$arity$1 = G__10969__1;
G__10969.cljs$core$IFn$_invoke$arity$2 = G__10969__2;
return G__10969;
})()
;})(rf1))
});
/**
 * Returns a lazy sequence removing consecutive duplicates in coll.
 * Returns a transducer when no collection is provided.
 */
cljs.core.dedupe = (function() {
var cljs$core$dedupe = null;
var cljs$core$dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$_COLON_cljs$core_SLASH_none);
return ((function (pa){
return (function() {
var G__10978 = null;
var G__10978__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10978__1 = (function (result){
var G__10974 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10974) : rf.call(null,G__10974));
});
var G__10978__2 = (function (result,input){
var prior = (function (){var G__10975 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10975) : cljs.core.deref.call(null,G__10975));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__10976 = result;
var G__10977 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10976,G__10977) : rf.call(null,G__10976,G__10977));
}
});
G__10978 = function(result,input){
switch(arguments.length){
case 0:
return G__10978__0.call(this);
case 1:
return G__10978__1.call(this,result);
case 2:
return G__10978__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10978.cljs$core$IFn$_invoke$arity$0 = G__10978__0;
G__10978.cljs$core$IFn$_invoke$arity$1 = G__10978__1;
G__10978.cljs$core$IFn$_invoke$arity$2 = G__10978__2;
return G__10978;
})()
;})(pa))
});
});
var cljs$core$dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
cljs$core$dedupe = function(coll){
switch(arguments.length){
case 0:
return cljs$core$dedupe__0.call(this);
case 1:
return cljs$core$dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0 = cljs$core$dedupe__0;
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$1 = cljs$core$dedupe__1;
return cljs$core$dedupe;
})()
;
/**
 * Returns items from coll with random probability of prob (0.0 -
 * 1.0).  Returns a transducer when no collection is provided.
 */
cljs.core.random_sample = (function() {
var cljs$core$random_sample = null;
var cljs$core$random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var cljs$core$random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
cljs$core$random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return cljs$core$random_sample__1.call(this,prob);
case 2:
return cljs$core$random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$1 = cljs$core$random_sample__1;
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$2 = cljs$core$random_sample__2;
return cljs$core$random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function cljs$core$__GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4998__auto__ = this;
return cljs.core.es6_iterator(this__4998__auto__);
}));
/**
 * Returns a reducible/iterable/seqable application of
 * the transducer to the items in coll. Note that these applications
 * will be performed every time iterator/seq/reduce is called.
 */
cljs.core.eduction = (function cljs$core$eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
 * Runs the supplied procedure (via reduce), for purposes of side
 * effects, on successive items in the collection. Returns nil
 */
cljs.core.run_BANG_ = (function cljs$core$run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10980_SHARP_,p2__10979_SHARP_){
var G__10982 = p2__10979_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__10982) : proc.call(null,G__10982));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj10984 = {};
return obj10984;
})();

cljs.core._clj__GT_js = (function cljs$core$_clj__GT_js(x){
if((function (){var and__4008__auto__ = x;
if(and__4008__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__4008__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4664__auto__ = (((x == null))?null:x);
return (function (){var or__4020__auto__ = (cljs.core._clj__GT_js[(function (){var G__10988 = x__4664__auto__;
return goog.typeOf(G__10988);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function cljs$core$_key__GT_js(x){
if((function (){var and__4008__auto__ = x;
if(and__4008__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__4008__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4664__auto__ = (((x == null))?null:x);
return (function (){var or__4020__auto__ = (cljs.core._key__GT_js[(function (){var G__10992 = x__4664__auto__;
return goog.typeOf(G__10992);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function cljs$core$key__GT_js(k){
if((function (){var G__10995 = k;
if(G__10995){
var bit__4701__auto__ = null;
if(cljs.core.truth_((function (){var or__4020__auto__ = bit__4701__auto__;
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return G__10995.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10995.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10995);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10995);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__10996 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__10996) : cljs.core.clj__GT_js.call(null,G__10996));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
 * Recursively transforms ClojureScript values to JavaScript.
 * sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
 * Maps become Objects. Arbitrary keys are encoded to by key->js.
 */
cljs.core.clj__GT_js = (function cljs$core$clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__11012 = x;
if(G__11012){
var bit__4701__auto__ = null;
if(cljs.core.truth_((function (){var or__4020__auto__ = bit__4701__auto__;
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return G__11012.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11012.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11012);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11012);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj11014 = {};
return obj11014;
})();
var seq__11015_11025 = cljs.core.seq(x);
var chunk__11016_11026 = null;
var count__11017_11027 = (0);
var i__11018_11028 = (0);
while(true){
if((i__11018_11028 < count__11017_11027)){
var vec__11019_11029 = chunk__11016_11026.cljs$core$IIndexed$_nth$arity$2(null,i__11018_11028);
var k_11030 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11019_11029,(0),null);
var v_11031 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11019_11029,(1),null);
(m[cljs.core.key__GT_js(k_11030)] = cljs$core$clj__GT_js(v_11031));

var G__11032 = seq__11015_11025;
var G__11033 = chunk__11016_11026;
var G__11034 = count__11017_11027;
var G__11035 = (i__11018_11028 + (1));
seq__11015_11025 = G__11032;
chunk__11016_11026 = G__11033;
count__11017_11027 = G__11034;
i__11018_11028 = G__11035;
continue;
} else {
var temp__4126__auto___11036 = cljs.core.seq(seq__11015_11025);
if(temp__4126__auto___11036){
var seq__11015_11037__$1 = temp__4126__auto___11036;
if(cljs.core.chunked_seq_QMARK_(seq__11015_11037__$1)){
var c__4807__auto___11038 = cljs.core.chunk_first(seq__11015_11037__$1);
var G__11039 = cljs.core.chunk_rest(seq__11015_11037__$1);
var G__11040 = c__4807__auto___11038;
var G__11041 = cljs.core.count(c__4807__auto___11038);
var G__11042 = (0);
seq__11015_11025 = G__11039;
chunk__11016_11026 = G__11040;
count__11017_11027 = G__11041;
i__11018_11028 = G__11042;
continue;
} else {
var vec__11020_11043 = cljs.core.first(seq__11015_11037__$1);
var k_11044 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11020_11043,(0),null);
var v_11045 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11020_11043,(1),null);
(m[cljs.core.key__GT_js(k_11044)] = cljs$core$clj__GT_js(v_11045));

var G__11046 = cljs.core.next(seq__11015_11037__$1);
var G__11047 = null;
var G__11048 = (0);
var G__11049 = (0);
seq__11015_11025 = G__11046;
chunk__11016_11026 = G__11047;
count__11017_11027 = G__11048;
i__11018_11028 = G__11049;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__11021_11050 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js,x));
var chunk__11022_11051 = null;
var count__11023_11052 = (0);
var i__11024_11053 = (0);
while(true){
if((i__11024_11053 < count__11023_11052)){
var x_11054__$1 = chunk__11022_11051.cljs$core$IIndexed$_nth$arity$2(null,i__11024_11053);
arr.push(x_11054__$1);

var G__11055 = seq__11021_11050;
var G__11056 = chunk__11022_11051;
var G__11057 = count__11023_11052;
var G__11058 = (i__11024_11053 + (1));
seq__11021_11050 = G__11055;
chunk__11022_11051 = G__11056;
count__11023_11052 = G__11057;
i__11024_11053 = G__11058;
continue;
} else {
var temp__4126__auto___11059 = cljs.core.seq(seq__11021_11050);
if(temp__4126__auto___11059){
var seq__11021_11060__$1 = temp__4126__auto___11059;
if(cljs.core.chunked_seq_QMARK_(seq__11021_11060__$1)){
var c__4807__auto___11061 = cljs.core.chunk_first(seq__11021_11060__$1);
var G__11062 = cljs.core.chunk_rest(seq__11021_11060__$1);
var G__11063 = c__4807__auto___11061;
var G__11064 = cljs.core.count(c__4807__auto___11061);
var G__11065 = (0);
seq__11021_11050 = G__11062;
chunk__11022_11051 = G__11063;
count__11023_11052 = G__11064;
i__11024_11053 = G__11065;
continue;
} else {
var x_11066__$1 = cljs.core.first(seq__11021_11060__$1);
arr.push(x_11066__$1);

var G__11067 = cljs.core.next(seq__11021_11060__$1);
var G__11068 = null;
var G__11069 = (0);
var G__11070 = (0);
seq__11021_11050 = G__11067;
chunk__11022_11051 = G__11068;
count__11023_11052 = G__11069;
i__11024_11053 = G__11070;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj11072 = {};
return obj11072;
})();

cljs.core._js__GT_clj = (function cljs$core$_js__GT_clj(x,options){
if((function (){var and__4008__auto__ = x;
if(and__4008__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__4008__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4664__auto__ = (((x == null))?null:x);
return (function (){var or__4020__auto__ = (cljs.core._js__GT_clj[(function (){var G__11076 = x__4664__auto__;
return goog.typeOf(G__11076);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
 * Recursively transforms JavaScript arrays into ClojureScript
 * vectors, and JavaScript objects into ClojureScript maps.  With
 * option ':keywordize-keys true' will convert object fields from
 * strings to keywords.
 * @param {...*} var_args
 */
cljs.core.js__GT_clj = (function() {
var cljs$core$js__GT_clj = null;
var cljs$core$js__GT_clj__1 = (function (x){
return cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$_COLON_keywordize_keys,false], null)], 0));
});
var cljs$core$js__GT_clj__2 = (function() { 
var G__11133__delegate = function (x,opts){
var map__11106 = opts;
var map__11106__$1 = ((cljs.core.seq_QMARK_(map__11106))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__11106):map__11106);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11106__$1,cljs.core.constant$keyword$_COLON_keywordize_keys);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__11106,map__11106__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn(x__$1){
if((function (){var G__11122 = x__$1;
if(G__11122){
var bit__4701__auto__ = null;
if(cljs.core.truth_((function (){var or__4020__auto__ = bit__4701__auto__;
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return G__11122.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__11122.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__11122);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__11122);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4776__auto__ = ((function (map__11106,map__11106__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn_$_iter__11123(s__11124){
return (new cljs.core.LazySeq(null,((function (map__11106,map__11106__$1,keywordize_keys,keyfn){
return (function (){
var s__11124__$1 = s__11124;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__11124__$1);
if(temp__4126__auto__){
var s__11124__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__11124__$2)){
var c__4774__auto__ = cljs.core.chunk_first(s__11124__$2);
var size__4775__auto__ = cljs.core.count(c__4774__auto__);
var b__11126 = cljs.core.chunk_buffer(size__4775__auto__);
if((function (){var i__11125 = (0);
while(true){
if((i__11125 < size__4775__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4774__auto__,i__11125);
cljs.core.chunk_append(b__11126,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11131 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11131) : keyfn.call(null,G__11131));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null));

var G__11134 = (i__11125 + (1));
i__11125 = G__11134;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__11126),cljs$core$js__GT_clj_$_thisfn_$_iter__11123(cljs.core.chunk_rest(s__11124__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__11126),null);
}
} else {
var k = cljs.core.first(s__11124__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11132 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11132) : keyfn.call(null,G__11132));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null),cljs$core$js__GT_clj_$_thisfn_$_iter__11123(cljs.core.rest(s__11124__$2)));
}
} else {
return null;
}
break;
}
});})(map__11106,map__11106__$1,keywordize_keys,keyfn))
,null,null));
});})(map__11106,map__11106__$1,keywordize_keys,keyfn))
;
return iter__4776__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__11106,map__11106__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__11133 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__11135__i = 0, G__11135__a = new Array(arguments.length -  1);
while (G__11135__i < G__11135__a.length) {G__11135__a[G__11135__i] = arguments[G__11135__i + 1]; ++G__11135__i;}
  opts = new cljs.core.IndexedSeq(G__11135__a,0);
} 
return G__11133__delegate.call(this,x,opts);};
G__11133.cljs$lang$maxFixedArity = 1;
G__11133.cljs$lang$applyTo = (function (arglist__11136){
var x = cljs.core.first(arglist__11136);
var opts = cljs.core.rest(arglist__11136);
return G__11133__delegate(x,opts);
});
G__11133.cljs$core$IFn$_invoke$arity$variadic = G__11133__delegate;
return G__11133;
})()
;
cljs$core$js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return cljs$core$js__GT_clj__1.call(this,x);
default:
var G__11137 = null;
if (arguments.length > 1) {
var G__11138__i = 0, G__11138__a = new Array(arguments.length -  1);
while (G__11138__i < G__11138__a.length) {G__11138__a[G__11138__i] = arguments[G__11138__i + 1]; ++G__11138__i;}
G__11137 = new cljs.core.IndexedSeq(G__11138__a,0);
}
return cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11137);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs$core$js__GT_clj.cljs$lang$applyTo = cljs$core$js__GT_clj__2.cljs$lang$applyTo;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$1 = cljs$core$js__GT_clj__1;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js__GT_clj;
})()
;
/**
 * Returns a memoized version of a referentially transparent function. The
 * memoized version of the function keeps a cache of the mapping from arguments
 * to results and, when calls with the same arguments are repeated often, has
 * higher performance at the expense of higher memory use.
 */
cljs.core.memoize = (function cljs$core$memoize(f){
var mem = (function (){var G__11141 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11141) : cljs.core.atom.call(null,G__11141));
})();
return ((function (mem){
return (function() { 
var G__11143__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__11142 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11142) : cljs.core.deref.call(null,G__11142));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__11143 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11144__i = 0, G__11144__a = new Array(arguments.length -  0);
while (G__11144__i < G__11144__a.length) {G__11144__a[G__11144__i] = arguments[G__11144__i + 0]; ++G__11144__i;}
  args = new cljs.core.IndexedSeq(G__11144__a,0);
} 
return G__11143__delegate.call(this,args);};
G__11143.cljs$lang$maxFixedArity = 0;
G__11143.cljs$lang$applyTo = (function (arglist__11145){
var args = cljs.core.seq(arglist__11145);
return G__11143__delegate(args);
});
G__11143.cljs$core$IFn$_invoke$arity$variadic = G__11143__delegate;
return G__11143;
})()
;
;})(mem))
});
/**
 * trampoline can be used to convert algorithms requiring mutual
 * recursion without stack consumption. Calls f with supplied args, if
 * any. If f returns a fn, calls that fn with no arguments, and
 * continues to repeat, until the return value is not a fn, then
 * returns that non-fn value. Note that if you want to return a fn as a
 * final value, you must wrap it in some data structure and unpack it
 * after trampoline returns.
 * @param {...*} var_args
 */
cljs.core.trampoline = (function() {
var cljs$core$trampoline = null;
var cljs$core$trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__11147 = ret;
f = G__11147;
continue;
} else {
return ret;
}
break;
}
});
var cljs$core$trampoline__2 = (function() { 
var G__11148__delegate = function (f,args){
return cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__11148 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11149__i = 0, G__11149__a = new Array(arguments.length -  1);
while (G__11149__i < G__11149__a.length) {G__11149__a[G__11149__i] = arguments[G__11149__i + 1]; ++G__11149__i;}
  args = new cljs.core.IndexedSeq(G__11149__a,0);
} 
return G__11148__delegate.call(this,f,args);};
G__11148.cljs$lang$maxFixedArity = 1;
G__11148.cljs$lang$applyTo = (function (arglist__11150){
var f = cljs.core.first(arglist__11150);
var args = cljs.core.rest(arglist__11150);
return G__11148__delegate(f,args);
});
G__11148.cljs$core$IFn$_invoke$arity$variadic = G__11148__delegate;
return G__11148;
})()
;
cljs$core$trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return cljs$core$trampoline__1.call(this,f);
default:
var G__11151 = null;
if (arguments.length > 1) {
var G__11152__i = 0, G__11152__a = new Array(arguments.length -  1);
while (G__11152__i < G__11152__a.length) {G__11152__a[G__11152__i] = arguments[G__11152__i + 1]; ++G__11152__i;}
G__11151 = new cljs.core.IndexedSeq(G__11152__a,0);
}
return cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__11151);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$trampoline.cljs$lang$maxFixedArity = 1;
cljs$core$trampoline.cljs$lang$applyTo = cljs$core$trampoline__2.cljs$lang$applyTo;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1 = cljs$core$trampoline__1;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$variadic = cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$trampoline;
})()
;
/**
 * Returns a random floating point number between 0 (inclusive) and
 * n (default 1) (exclusive).
 */
cljs.core.rand = (function() {
var cljs$core$rand = null;
var cljs$core$rand__0 = (function (){
return cljs$core$rand.cljs$core$IFn$_invoke$arity$1((1));
});
var cljs$core$rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
cljs$core$rand = function(n){
switch(arguments.length){
case 0:
return cljs$core$rand__0.call(this);
case 1:
return cljs$core$rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rand.cljs$core$IFn$_invoke$arity$0 = cljs$core$rand__0;
cljs$core$rand.cljs$core$IFn$_invoke$arity$1 = cljs$core$rand__1;
return cljs$core$rand;
})()
;
/**
 * Returns a random integer between 0 (inclusive) and n (exclusive).
 */
cljs.core.rand_int = (function cljs$core$rand_int(n){
var G__11155 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11155) : Math.floor.call(null,G__11155));
});
/**
 * Return a random element of the (sequential) collection. Will have
 * the same performance characteristics as nth for the given
 * collection.
 */
cljs.core.rand_nth = (function cljs$core$rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
 * Returns a map of the elements of coll keyed by the result of
 * f on each element. The value at each key will be a vector of the
 * corresponding elements, in the order they appeared in coll.
 */
cljs.core.group_by = (function cljs$core$group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__11157 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11157) : f.call(null,G__11157));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Creates a hierarchy object for use with derive, isa? etc.
 */
cljs.core.make_hierarchy = (function cljs$core$make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$_COLON_parents,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$_COLON_descendants,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$_COLON_ancestors,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function cljs$core$get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__11159 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11159) : cljs.core.atom.call(null,G__11159));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
 * @param {...*} var_args
 */
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var cljs$core$swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var cljs$core$swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11160__i = 0, G__11160__a = new Array(arguments.length -  1);
while (G__11160__i < G__11160__a.length) {G__11160__a[G__11160__i] = arguments[G__11160__i + 1]; ++G__11160__i;}
  args = new cljs.core.IndexedSeq(G__11160__a,0);
} 
return cljs$core$swap_global_hierarchy_BANG___delegate.call(this,f,args);};
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__11161){
var f = cljs.core.first(arglist__11161);
var args = cljs.core.rest(arglist__11161);
return cljs$core$swap_global_hierarchy_BANG___delegate(f,args);
});
cljs$core$swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_global_hierarchy_BANG___delegate;
return cljs$core$swap_global_hierarchy_BANG_;
})()
;
/**
 * Returns true if (= child parent), or child is directly or indirectly derived from
 * parent, either via a JavaScript type inheritance relationship or a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy
 */
cljs.core.isa_QMARK_ = (function() {
var cljs$core$isa_QMARK_ = null;
var cljs$core$isa_QMARK___2 = (function (child,parent){
return cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11226 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11226) : cljs.core.deref.call(null,G__11226));
})(),child,parent);
});
var cljs$core$isa_QMARK___3 = (function (h,child,parent){
var or__4020__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$_COLON_ancestors.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
var and__4008__auto__ = cljs.core.vector_QMARK_(parent);
if(and__4008__auto__){
var and__4008__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__4008__auto____$1){
var and__4008__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__4008__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__11251 = cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__11249 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__11249) : child.call(null,G__11249));
})(),(function (){var G__11250 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__11250) : parent.call(null,G__11250));
})());
var G__11252 = (i + (1));
ret = G__11251;
i = G__11252;
continue;
}
break;
}
} else {
return and__4008__auto____$2;
}
} else {
return and__4008__auto____$1;
}
} else {
return and__4008__auto__;
}
}
}
});
cljs$core$isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return cljs$core$isa_QMARK___2.call(this,h,child);
case 3:
return cljs$core$isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$isa_QMARK___2;
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = cljs$core$isa_QMARK___3;
return cljs$core$isa_QMARK_;
})()
;
/**
 * Returns the immediate parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.parents = (function() {
var cljs$core$parents = null;
var cljs$core$parents__1 = (function (tag){
return cljs$core$parents.cljs$core$IFn$_invoke$arity$2((function (){var G__11256 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11256) : cljs.core.deref.call(null,G__11256));
})(),tag);
});
var cljs$core$parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$_COLON_parents.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$parents = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$parents__1.call(this,h);
case 2:
return cljs$core$parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$parents.cljs$core$IFn$_invoke$arity$1 = cljs$core$parents__1;
cljs$core$parents.cljs$core$IFn$_invoke$arity$2 = cljs$core$parents__2;
return cljs$core$parents;
})()
;
/**
 * Returns the immediate and indirect parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.ancestors = (function() {
var cljs$core$ancestors = null;
var cljs$core$ancestors__1 = (function (tag){
return cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__11260 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11260) : cljs.core.deref.call(null,G__11260));
})(),tag);
});
var cljs$core$ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$_COLON_ancestors.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$ancestors = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$ancestors__1.call(this,h);
case 2:
return cljs$core$ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$1 = cljs$core$ancestors__1;
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2 = cljs$core$ancestors__2;
return cljs$core$ancestors;
})()
;
/**
 * Returns the immediate and indirect children of tag, through a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy. Note: does not work on JavaScript type inheritance
 * relationships.
 */
cljs.core.descendants = (function() {
var cljs$core$descendants = null;
var cljs$core$descendants__1 = (function (tag){
return cljs$core$descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__11264 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11264) : cljs.core.deref.call(null,G__11264));
})(),tag);
});
var cljs$core$descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$_COLON_descendants.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$descendants = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$descendants__1.call(this,h);
case 2:
return cljs$core$descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$descendants.cljs$core$IFn$_invoke$arity$1 = cljs$core$descendants__1;
cljs$core$descendants.cljs$core$IFn$_invoke$arity$2 = cljs$core$descendants__2;
return cljs$core$descendants;
})()
;
/**
 * Establishes a parent/child relationship between parent and
 * tag. Parent must be a namespace-qualified symbol or keyword and
 * child can be either a namespace-qualified symbol or keyword or a
 * class. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.derive = (function() {
var cljs$core$derive = null;
var cljs$core$derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$_COLON_parents.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$_COLON_descendants.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$_COLON_ancestors.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__11273 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__11273) : targets.call(null,G__11273));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__11274 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__11274) : sources.call(null,G__11274));
})()));
});})(tp,td,ta))
;
var or__4020__auto__ = ((cljs.core.contains_QMARK_((function (){var G__11278 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__11278) : tp.call(null,G__11278));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__11279 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11279) : ta.call(null,G__11279));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__11280 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11280) : ta.call(null,G__11280));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$_COLON_parents,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$_COLON_parents.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$_COLON_ancestors,tf(cljs.core.constant$keyword$_COLON_ancestors.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$_COLON_descendants,tf(cljs.core.constant$keyword$_COLON_descendants.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return h;
}
});
cljs$core$derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$derive__2.call(this,h,tag);
case 3:
return cljs$core$derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$derive.cljs$core$IFn$_invoke$arity$2 = cljs$core$derive__2;
cljs$core$derive.cljs$core$IFn$_invoke$arity$3 = cljs$core$derive__3;
return cljs$core$derive;
})()
;
/**
 * Removes a parent/child relationship between parent and
 * tag. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.underive = (function() {
var cljs$core$underive = null;
var cljs$core$underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$_COLON_parents.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__11287 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11287) : parentMap.call(null,G__11287));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__11288 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11288) : parentMap.call(null,G__11288));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__11281_SHARP_){
return cljs.core.cons(cljs.core.first(p1__11281_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__11281_SHARP_),cljs.core.second(p1__11281_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__11289 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11289) : parentMap.call(null,G__11289));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__11282_SHARP_,p2__11283_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__11282_SHARP_,p2__11283_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
cljs$core$underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$underive__2.call(this,h,tag);
case 3:
return cljs$core$underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$underive.cljs$core$IFn$_invoke$arity$2 = cljs$core$underive__2;
cljs$core$underive.cljs$core$IFn$_invoke$arity$3 = cljs$core$underive__3;
return cljs$core$underive;
})()
;
cljs.core.reset_cache = (function cljs$core$reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__11292 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11292) : cljs.core.deref.call(null,G__11292));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__11293 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11293) : cljs.core.deref.call(null,G__11293));
}));
});
cljs.core.prefers_STAR_ = (function cljs$core$prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__11309 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11309) : cljs.core.deref.call(null,G__11309));
})().call(null,x);
var or__4020__auto__ = (cljs.core.truth_((function (){var and__4008__auto__ = xprefs;
if(cljs.core.truth_(and__4008__auto__)){
var G__11311 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__11311) : xprefs.call(null,G__11311));
} else {
return and__4008__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__11312 = cljs.core.rest(ps);
ps = G__11312;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__4020__auto____$1)){
return or__4020__auto____$1;
} else {
var or__4020__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__11313 = cljs.core.rest(ps);
ps = G__11313;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__4020__auto____$2)){
return or__4020__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function cljs$core$dominates(x,y,prefer_table){
var or__4020__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__4020__auto__)){
return or__4020__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__11327){
var vec__11328 = p__11327;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11328,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11328,(1),null);
var e = vec__11328;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11329 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11329) : cljs.core.deref.call(null,G__11329));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__4020__auto__ = (be == null);
if(or__4020__auto__){
return or__4020__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__11330 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11330) : cljs.core.deref.call(null,G__11330));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11331 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11331) : cljs.core.deref.call(null,G__11331));
})(),(function (){var G__11332 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11332) : cljs.core.deref.call(null,G__11332));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj11334 = {};
return obj11334;
})();

cljs.core._reset = (function cljs$core$_reset(mf){
if((function (){var and__4008__auto__ = mf;
if(and__4008__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__4008__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4664__auto__ = (((mf == null))?null:mf);
return (function (){var or__4020__auto__ = (cljs.core._reset[(function (){var G__11338 = x__4664__auto__;
return goog.typeOf(G__11338);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._reset["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function cljs$core$_add_method(mf,dispatch_val,method){
if((function (){var and__4008__auto__ = mf;
if(and__4008__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__4008__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4664__auto__ = (((mf == null))?null:mf);
return (function (){var or__4020__auto__ = (cljs.core._add_method[(function (){var G__11342 = x__4664__auto__;
return goog.typeOf(G__11342);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._add_method["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function cljs$core$_remove_method(mf,dispatch_val){
if((function (){var and__4008__auto__ = mf;
if(and__4008__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__4008__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4664__auto__ = (((mf == null))?null:mf);
return (function (){var or__4020__auto__ = (cljs.core._remove_method[(function (){var G__11346 = x__4664__auto__;
return goog.typeOf(G__11346);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._remove_method["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function cljs$core$_prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__4008__auto__ = mf;
if(and__4008__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__4008__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4664__auto__ = (((mf == null))?null:mf);
return (function (){var or__4020__auto__ = (cljs.core._prefer_method[(function (){var G__11350 = x__4664__auto__;
return goog.typeOf(G__11350);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function cljs$core$_get_method(mf,dispatch_val){
if((function (){var and__4008__auto__ = mf;
if(and__4008__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__4008__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4664__auto__ = (((mf == null))?null:mf);
return (function (){var or__4020__auto__ = (cljs.core._get_method[(function (){var G__11354 = x__4664__auto__;
return goog.typeOf(G__11354);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._get_method["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function cljs$core$_methods(mf){
if((function (){var and__4008__auto__ = mf;
if(and__4008__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__4008__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4664__auto__ = (((mf == null))?null:mf);
return (function (){var or__4020__auto__ = (cljs.core._methods[(function (){var G__11358 = x__4664__auto__;
return goog.typeOf(G__11358);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._methods["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function cljs$core$_prefers(mf){
if((function (){var and__4008__auto__ = mf;
if(and__4008__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__4008__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4664__auto__ = (((mf == null))?null:mf);
return (function (){var or__4020__auto__ = (cljs.core._prefers[(function (){var G__11362 = x__4664__auto__;
return goog.typeOf(G__11362);
})()]);
if(or__4020__auto__){
return or__4020__auto__;
} else {
var or__4020__auto____$1 = (cljs.core._prefers["_"]);
if(or__4020__auto____$1){
return or__4020__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function cljs$core$throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11364 = this$__$1;
return goog.getUid(G__11364);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11365 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11365) : cljs.core.deref.call(null,G__11365));
})(),(function (){var G__11366 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11366) : cljs.core.deref.call(null,G__11366));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__11367 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11367) : cljs.core.deref.call(null,G__11367));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__11368 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11368) : cljs.core.deref.call(null,G__11368));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11369 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11369) : cljs.core.deref.call(null,G__11369));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11370 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11370) : cljs.core.deref.call(null,G__11370));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__12211 = null;
var G__12211__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__12211__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11371 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11371) : self__.dispatch_fn.call(null,G__11371));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11372 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11372) : target_fn.call(null,G__11372));
});
var G__12211__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11373 = a;
var G__11374 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11373,G__11374) : self__.dispatch_fn.call(null,G__11373,G__11374));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11375 = a;
var G__11376 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11375,G__11376) : target_fn.call(null,G__11375,G__11376));
});
var G__12211__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11377 = a;
var G__11378 = b;
var G__11379 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11377,G__11378,G__11379) : self__.dispatch_fn.call(null,G__11377,G__11378,G__11379));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11380 = a;
var G__11381 = b;
var G__11382 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11380,G__11381,G__11382) : target_fn.call(null,G__11380,G__11381,G__11382));
});
var G__12211__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11383 = a;
var G__11384 = b;
var G__11385 = c;
var G__11386 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11383,G__11384,G__11385,G__11386) : self__.dispatch_fn.call(null,G__11383,G__11384,G__11385,G__11386));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11387 = a;
var G__11388 = b;
var G__11389 = c;
var G__11390 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11387,G__11388,G__11389,G__11390) : target_fn.call(null,G__11387,G__11388,G__11389,G__11390));
});
var G__12211__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11391 = a;
var G__11392 = b;
var G__11393 = c;
var G__11394 = d;
var G__11395 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11391,G__11392,G__11393,G__11394,G__11395) : self__.dispatch_fn.call(null,G__11391,G__11392,G__11393,G__11394,G__11395));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11396 = a;
var G__11397 = b;
var G__11398 = c;
var G__11399 = d;
var G__11400 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11396,G__11397,G__11398,G__11399,G__11400) : target_fn.call(null,G__11396,G__11397,G__11398,G__11399,G__11400));
});
var G__12211__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11401 = a;
var G__11402 = b;
var G__11403 = c;
var G__11404 = d;
var G__11405 = e;
var G__11406 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11401,G__11402,G__11403,G__11404,G__11405,G__11406) : self__.dispatch_fn.call(null,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11407 = a;
var G__11408 = b;
var G__11409 = c;
var G__11410 = d;
var G__11411 = e;
var G__11412 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11407,G__11408,G__11409,G__11410,G__11411,G__11412) : target_fn.call(null,G__11407,G__11408,G__11409,G__11410,G__11411,G__11412));
});
var G__12211__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11413 = a;
var G__11414 = b;
var G__11415 = c;
var G__11416 = d;
var G__11417 = e;
var G__11418 = f;
var G__11419 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11413,G__11414,G__11415,G__11416,G__11417,G__11418,G__11419) : self__.dispatch_fn.call(null,G__11413,G__11414,G__11415,G__11416,G__11417,G__11418,G__11419));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11420 = a;
var G__11421 = b;
var G__11422 = c;
var G__11423 = d;
var G__11424 = e;
var G__11425 = f;
var G__11426 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11420,G__11421,G__11422,G__11423,G__11424,G__11425,G__11426) : target_fn.call(null,G__11420,G__11421,G__11422,G__11423,G__11424,G__11425,G__11426));
});
var G__12211__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11427 = a;
var G__11428 = b;
var G__11429 = c;
var G__11430 = d;
var G__11431 = e;
var G__11432 = f;
var G__11433 = g;
var G__11434 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11427,G__11428,G__11429,G__11430,G__11431,G__11432,G__11433,G__11434) : self__.dispatch_fn.call(null,G__11427,G__11428,G__11429,G__11430,G__11431,G__11432,G__11433,G__11434));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11435 = a;
var G__11436 = b;
var G__11437 = c;
var G__11438 = d;
var G__11439 = e;
var G__11440 = f;
var G__11441 = g;
var G__11442 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11435,G__11436,G__11437,G__11438,G__11439,G__11440,G__11441,G__11442) : target_fn.call(null,G__11435,G__11436,G__11437,G__11438,G__11439,G__11440,G__11441,G__11442));
});
var G__12211__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11443 = a;
var G__11444 = b;
var G__11445 = c;
var G__11446 = d;
var G__11447 = e;
var G__11448 = f;
var G__11449 = g;
var G__11450 = h;
var G__11451 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11443,G__11444,G__11445,G__11446,G__11447,G__11448,G__11449,G__11450,G__11451) : self__.dispatch_fn.call(null,G__11443,G__11444,G__11445,G__11446,G__11447,G__11448,G__11449,G__11450,G__11451));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11452 = a;
var G__11453 = b;
var G__11454 = c;
var G__11455 = d;
var G__11456 = e;
var G__11457 = f;
var G__11458 = g;
var G__11459 = h;
var G__11460 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11452,G__11453,G__11454,G__11455,G__11456,G__11457,G__11458,G__11459,G__11460) : target_fn.call(null,G__11452,G__11453,G__11454,G__11455,G__11456,G__11457,G__11458,G__11459,G__11460));
});
var G__12211__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11461 = a;
var G__11462 = b;
var G__11463 = c;
var G__11464 = d;
var G__11465 = e;
var G__11466 = f;
var G__11467 = g;
var G__11468 = h;
var G__11469 = i;
var G__11470 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11461,G__11462,G__11463,G__11464,G__11465,G__11466,G__11467,G__11468,G__11469,G__11470) : self__.dispatch_fn.call(null,G__11461,G__11462,G__11463,G__11464,G__11465,G__11466,G__11467,G__11468,G__11469,G__11470));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11471 = a;
var G__11472 = b;
var G__11473 = c;
var G__11474 = d;
var G__11475 = e;
var G__11476 = f;
var G__11477 = g;
var G__11478 = h;
var G__11479 = i;
var G__11480 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11471,G__11472,G__11473,G__11474,G__11475,G__11476,G__11477,G__11478,G__11479,G__11480) : target_fn.call(null,G__11471,G__11472,G__11473,G__11474,G__11475,G__11476,G__11477,G__11478,G__11479,G__11480));
});
var G__12211__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11481 = a;
var G__11482 = b;
var G__11483 = c;
var G__11484 = d;
var G__11485 = e;
var G__11486 = f;
var G__11487 = g;
var G__11488 = h;
var G__11489 = i;
var G__11490 = j;
var G__11491 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11481,G__11482,G__11483,G__11484,G__11485,G__11486,G__11487,G__11488,G__11489,G__11490,G__11491) : self__.dispatch_fn.call(null,G__11481,G__11482,G__11483,G__11484,G__11485,G__11486,G__11487,G__11488,G__11489,G__11490,G__11491));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11492 = a;
var G__11493 = b;
var G__11494 = c;
var G__11495 = d;
var G__11496 = e;
var G__11497 = f;
var G__11498 = g;
var G__11499 = h;
var G__11500 = i;
var G__11501 = j;
var G__11502 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11492,G__11493,G__11494,G__11495,G__11496,G__11497,G__11498,G__11499,G__11500,G__11501,G__11502) : target_fn.call(null,G__11492,G__11493,G__11494,G__11495,G__11496,G__11497,G__11498,G__11499,G__11500,G__11501,G__11502));
});
var G__12211__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11503 = a;
var G__11504 = b;
var G__11505 = c;
var G__11506 = d;
var G__11507 = e;
var G__11508 = f;
var G__11509 = g;
var G__11510 = h;
var G__11511 = i;
var G__11512 = j;
var G__11513 = k;
var G__11514 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11503,G__11504,G__11505,G__11506,G__11507,G__11508,G__11509,G__11510,G__11511,G__11512,G__11513,G__11514) : self__.dispatch_fn.call(null,G__11503,G__11504,G__11505,G__11506,G__11507,G__11508,G__11509,G__11510,G__11511,G__11512,G__11513,G__11514));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11515 = a;
var G__11516 = b;
var G__11517 = c;
var G__11518 = d;
var G__11519 = e;
var G__11520 = f;
var G__11521 = g;
var G__11522 = h;
var G__11523 = i;
var G__11524 = j;
var G__11525 = k;
var G__11526 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11515,G__11516,G__11517,G__11518,G__11519,G__11520,G__11521,G__11522,G__11523,G__11524,G__11525,G__11526) : target_fn.call(null,G__11515,G__11516,G__11517,G__11518,G__11519,G__11520,G__11521,G__11522,G__11523,G__11524,G__11525,G__11526));
});
var G__12211__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11527 = a;
var G__11528 = b;
var G__11529 = c;
var G__11530 = d;
var G__11531 = e;
var G__11532 = f;
var G__11533 = g;
var G__11534 = h;
var G__11535 = i;
var G__11536 = j;
var G__11537 = k;
var G__11538 = l;
var G__11539 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11527,G__11528,G__11529,G__11530,G__11531,G__11532,G__11533,G__11534,G__11535,G__11536,G__11537,G__11538,G__11539) : self__.dispatch_fn.call(null,G__11527,G__11528,G__11529,G__11530,G__11531,G__11532,G__11533,G__11534,G__11535,G__11536,G__11537,G__11538,G__11539));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11540 = a;
var G__11541 = b;
var G__11542 = c;
var G__11543 = d;
var G__11544 = e;
var G__11545 = f;
var G__11546 = g;
var G__11547 = h;
var G__11548 = i;
var G__11549 = j;
var G__11550 = k;
var G__11551 = l;
var G__11552 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547,G__11548,G__11549,G__11550,G__11551,G__11552) : target_fn.call(null,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547,G__11548,G__11549,G__11550,G__11551,G__11552));
});
var G__12211__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11553 = a;
var G__11554 = b;
var G__11555 = c;
var G__11556 = d;
var G__11557 = e;
var G__11558 = f;
var G__11559 = g;
var G__11560 = h;
var G__11561 = i;
var G__11562 = j;
var G__11563 = k;
var G__11564 = l;
var G__11565 = m;
var G__11566 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11553,G__11554,G__11555,G__11556,G__11557,G__11558,G__11559,G__11560,G__11561,G__11562,G__11563,G__11564,G__11565,G__11566) : self__.dispatch_fn.call(null,G__11553,G__11554,G__11555,G__11556,G__11557,G__11558,G__11559,G__11560,G__11561,G__11562,G__11563,G__11564,G__11565,G__11566));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11567 = a;
var G__11568 = b;
var G__11569 = c;
var G__11570 = d;
var G__11571 = e;
var G__11572 = f;
var G__11573 = g;
var G__11574 = h;
var G__11575 = i;
var G__11576 = j;
var G__11577 = k;
var G__11578 = l;
var G__11579 = m;
var G__11580 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11567,G__11568,G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575,G__11576,G__11577,G__11578,G__11579,G__11580) : target_fn.call(null,G__11567,G__11568,G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575,G__11576,G__11577,G__11578,G__11579,G__11580));
});
var G__12211__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11581 = a;
var G__11582 = b;
var G__11583 = c;
var G__11584 = d;
var G__11585 = e;
var G__11586 = f;
var G__11587 = g;
var G__11588 = h;
var G__11589 = i;
var G__11590 = j;
var G__11591 = k;
var G__11592 = l;
var G__11593 = m;
var G__11594 = n;
var G__11595 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588,G__11589,G__11590,G__11591,G__11592,G__11593,G__11594,G__11595) : self__.dispatch_fn.call(null,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588,G__11589,G__11590,G__11591,G__11592,G__11593,G__11594,G__11595));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11596 = a;
var G__11597 = b;
var G__11598 = c;
var G__11599 = d;
var G__11600 = e;
var G__11601 = f;
var G__11602 = g;
var G__11603 = h;
var G__11604 = i;
var G__11605 = j;
var G__11606 = k;
var G__11607 = l;
var G__11608 = m;
var G__11609 = n;
var G__11610 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11596,G__11597,G__11598,G__11599,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606,G__11607,G__11608,G__11609,G__11610) : target_fn.call(null,G__11596,G__11597,G__11598,G__11599,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606,G__11607,G__11608,G__11609,G__11610));
});
var G__12211__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11611 = a;
var G__11612 = b;
var G__11613 = c;
var G__11614 = d;
var G__11615 = e;
var G__11616 = f;
var G__11617 = g;
var G__11618 = h;
var G__11619 = i;
var G__11620 = j;
var G__11621 = k;
var G__11622 = l;
var G__11623 = m;
var G__11624 = n;
var G__11625 = o;
var G__11626 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11611,G__11612,G__11613,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625,G__11626) : self__.dispatch_fn.call(null,G__11611,G__11612,G__11613,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625,G__11626));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11627 = a;
var G__11628 = b;
var G__11629 = c;
var G__11630 = d;
var G__11631 = e;
var G__11632 = f;
var G__11633 = g;
var G__11634 = h;
var G__11635 = i;
var G__11636 = j;
var G__11637 = k;
var G__11638 = l;
var G__11639 = m;
var G__11640 = n;
var G__11641 = o;
var G__11642 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642) : target_fn.call(null,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642));
});
var G__12211__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11643 = a;
var G__11644 = b;
var G__11645 = c;
var G__11646 = d;
var G__11647 = e;
var G__11648 = f;
var G__11649 = g;
var G__11650 = h;
var G__11651 = i;
var G__11652 = j;
var G__11653 = k;
var G__11654 = l;
var G__11655 = m;
var G__11656 = n;
var G__11657 = o;
var G__11658 = p;
var G__11659 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11643,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650,G__11651,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659) : self__.dispatch_fn.call(null,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650,G__11651,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11660 = a;
var G__11661 = b;
var G__11662 = c;
var G__11663 = d;
var G__11664 = e;
var G__11665 = f;
var G__11666 = g;
var G__11667 = h;
var G__11668 = i;
var G__11669 = j;
var G__11670 = k;
var G__11671 = l;
var G__11672 = m;
var G__11673 = n;
var G__11674 = o;
var G__11675 = p;
var G__11676 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11660,G__11661,G__11662,G__11663,G__11664,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676) : target_fn.call(null,G__11660,G__11661,G__11662,G__11663,G__11664,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676));
});
var G__12211__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11677 = a;
var G__11678 = b;
var G__11679 = c;
var G__11680 = d;
var G__11681 = e;
var G__11682 = f;
var G__11683 = g;
var G__11684 = h;
var G__11685 = i;
var G__11686 = j;
var G__11687 = k;
var G__11688 = l;
var G__11689 = m;
var G__11690 = n;
var G__11691 = o;
var G__11692 = p;
var G__11693 = q;
var G__11694 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11677,G__11678,G__11679,G__11680,G__11681,G__11682,G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691,G__11692,G__11693,G__11694) : self__.dispatch_fn.call(null,G__11677,G__11678,G__11679,G__11680,G__11681,G__11682,G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691,G__11692,G__11693,G__11694));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11695 = a;
var G__11696 = b;
var G__11697 = c;
var G__11698 = d;
var G__11699 = e;
var G__11700 = f;
var G__11701 = g;
var G__11702 = h;
var G__11703 = i;
var G__11704 = j;
var G__11705 = k;
var G__11706 = l;
var G__11707 = m;
var G__11708 = n;
var G__11709 = o;
var G__11710 = p;
var G__11711 = q;
var G__11712 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11695,G__11696,G__11697,G__11698,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706,G__11707,G__11708,G__11709,G__11710,G__11711,G__11712) : target_fn.call(null,G__11695,G__11696,G__11697,G__11698,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706,G__11707,G__11708,G__11709,G__11710,G__11711,G__11712));
});
var G__12211__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11713 = a;
var G__11714 = b;
var G__11715 = c;
var G__11716 = d;
var G__11717 = e;
var G__11718 = f;
var G__11719 = g;
var G__11720 = h;
var G__11721 = i;
var G__11722 = j;
var G__11723 = k;
var G__11724 = l;
var G__11725 = m;
var G__11726 = n;
var G__11727 = o;
var G__11728 = p;
var G__11729 = q;
var G__11730 = r;
var G__11731 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11713,G__11714,G__11715,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722,G__11723,G__11724,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730,G__11731) : self__.dispatch_fn.call(null,G__11713,G__11714,G__11715,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722,G__11723,G__11724,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730,G__11731));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11732 = a;
var G__11733 = b;
var G__11734 = c;
var G__11735 = d;
var G__11736 = e;
var G__11737 = f;
var G__11738 = g;
var G__11739 = h;
var G__11740 = i;
var G__11741 = j;
var G__11742 = k;
var G__11743 = l;
var G__11744 = m;
var G__11745 = n;
var G__11746 = o;
var G__11747 = p;
var G__11748 = q;
var G__11749 = r;
var G__11750 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11732,G__11733,G__11734,G__11735,G__11736,G__11737,G__11738,G__11739,G__11740,G__11741,G__11742,G__11743,G__11744,G__11745,G__11746,G__11747,G__11748,G__11749,G__11750) : target_fn.call(null,G__11732,G__11733,G__11734,G__11735,G__11736,G__11737,G__11738,G__11739,G__11740,G__11741,G__11742,G__11743,G__11744,G__11745,G__11746,G__11747,G__11748,G__11749,G__11750));
});
var G__12211__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11751 = a;
var G__11752 = b;
var G__11753 = c;
var G__11754 = d;
var G__11755 = e;
var G__11756 = f;
var G__11757 = g;
var G__11758 = h;
var G__11759 = i;
var G__11760 = j;
var G__11761 = k;
var G__11762 = l;
var G__11763 = m;
var G__11764 = n;
var G__11765 = o;
var G__11766 = p;
var G__11767 = q;
var G__11768 = r;
var G__11769 = s;
var G__11770 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11751,G__11752,G__11753,G__11754,G__11755,G__11756,G__11757,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766,G__11767,G__11768,G__11769,G__11770) : self__.dispatch_fn.call(null,G__11751,G__11752,G__11753,G__11754,G__11755,G__11756,G__11757,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766,G__11767,G__11768,G__11769,G__11770));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11771 = a;
var G__11772 = b;
var G__11773 = c;
var G__11774 = d;
var G__11775 = e;
var G__11776 = f;
var G__11777 = g;
var G__11778 = h;
var G__11779 = i;
var G__11780 = j;
var G__11781 = k;
var G__11782 = l;
var G__11783 = m;
var G__11784 = n;
var G__11785 = o;
var G__11786 = p;
var G__11787 = q;
var G__11788 = r;
var G__11789 = s;
var G__11790 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11771,G__11772,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790) : target_fn.call(null,G__11771,G__11772,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790));
});
var G__12211__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__12211 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12211__1.call(this,self__);
case 2:
return G__12211__2.call(this,self__,a);
case 3:
return G__12211__3.call(this,self__,a,b);
case 4:
return G__12211__4.call(this,self__,a,b,c);
case 5:
return G__12211__5.call(this,self__,a,b,c,d);
case 6:
return G__12211__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12211__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12211__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12211__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12211__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12211__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12211__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12211__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12211__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12211__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12211__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12211__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12211__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12211__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12211__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12211__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12211__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12211.cljs$core$IFn$_invoke$arity$1 = G__12211__1;
G__12211.cljs$core$IFn$_invoke$arity$2 = G__12211__2;
G__12211.cljs$core$IFn$_invoke$arity$3 = G__12211__3;
G__12211.cljs$core$IFn$_invoke$arity$4 = G__12211__4;
G__12211.cljs$core$IFn$_invoke$arity$5 = G__12211__5;
G__12211.cljs$core$IFn$_invoke$arity$6 = G__12211__6;
G__12211.cljs$core$IFn$_invoke$arity$7 = G__12211__7;
G__12211.cljs$core$IFn$_invoke$arity$8 = G__12211__8;
G__12211.cljs$core$IFn$_invoke$arity$9 = G__12211__9;
G__12211.cljs$core$IFn$_invoke$arity$10 = G__12211__10;
G__12211.cljs$core$IFn$_invoke$arity$11 = G__12211__11;
G__12211.cljs$core$IFn$_invoke$arity$12 = G__12211__12;
G__12211.cljs$core$IFn$_invoke$arity$13 = G__12211__13;
G__12211.cljs$core$IFn$_invoke$arity$14 = G__12211__14;
G__12211.cljs$core$IFn$_invoke$arity$15 = G__12211__15;
G__12211.cljs$core$IFn$_invoke$arity$16 = G__12211__16;
G__12211.cljs$core$IFn$_invoke$arity$17 = G__12211__17;
G__12211.cljs$core$IFn$_invoke$arity$18 = G__12211__18;
G__12211.cljs$core$IFn$_invoke$arity$19 = G__12211__19;
G__12211.cljs$core$IFn$_invoke$arity$20 = G__12211__20;
G__12211.cljs$core$IFn$_invoke$arity$21 = G__12211__21;
G__12211.cljs$core$IFn$_invoke$arity$22 = G__12211__22;
return G__12211;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args11363){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11363)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11791 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11791) : self__.dispatch_fn.call(null,G__11791));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11792 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11792) : target_fn.call(null,G__11792));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11793 = a;
var G__11794 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11793,G__11794) : self__.dispatch_fn.call(null,G__11793,G__11794));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11795 = a;
var G__11796 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11795,G__11796) : target_fn.call(null,G__11795,G__11796));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11797 = a;
var G__11798 = b;
var G__11799 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11797,G__11798,G__11799) : self__.dispatch_fn.call(null,G__11797,G__11798,G__11799));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11800 = a;
var G__11801 = b;
var G__11802 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11800,G__11801,G__11802) : target_fn.call(null,G__11800,G__11801,G__11802));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11803 = a;
var G__11804 = b;
var G__11805 = c;
var G__11806 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11803,G__11804,G__11805,G__11806) : self__.dispatch_fn.call(null,G__11803,G__11804,G__11805,G__11806));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11807 = a;
var G__11808 = b;
var G__11809 = c;
var G__11810 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11807,G__11808,G__11809,G__11810) : target_fn.call(null,G__11807,G__11808,G__11809,G__11810));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11811 = a;
var G__11812 = b;
var G__11813 = c;
var G__11814 = d;
var G__11815 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11811,G__11812,G__11813,G__11814,G__11815) : self__.dispatch_fn.call(null,G__11811,G__11812,G__11813,G__11814,G__11815));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11816 = a;
var G__11817 = b;
var G__11818 = c;
var G__11819 = d;
var G__11820 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11816,G__11817,G__11818,G__11819,G__11820) : target_fn.call(null,G__11816,G__11817,G__11818,G__11819,G__11820));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11821 = a;
var G__11822 = b;
var G__11823 = c;
var G__11824 = d;
var G__11825 = e;
var G__11826 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11821,G__11822,G__11823,G__11824,G__11825,G__11826) : self__.dispatch_fn.call(null,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11827 = a;
var G__11828 = b;
var G__11829 = c;
var G__11830 = d;
var G__11831 = e;
var G__11832 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11827,G__11828,G__11829,G__11830,G__11831,G__11832) : target_fn.call(null,G__11827,G__11828,G__11829,G__11830,G__11831,G__11832));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11833 = a;
var G__11834 = b;
var G__11835 = c;
var G__11836 = d;
var G__11837 = e;
var G__11838 = f;
var G__11839 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11833,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839) : self__.dispatch_fn.call(null,G__11833,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11840 = a;
var G__11841 = b;
var G__11842 = c;
var G__11843 = d;
var G__11844 = e;
var G__11845 = f;
var G__11846 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11840,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846) : target_fn.call(null,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11847 = a;
var G__11848 = b;
var G__11849 = c;
var G__11850 = d;
var G__11851 = e;
var G__11852 = f;
var G__11853 = g;
var G__11854 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11847,G__11848,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854) : self__.dispatch_fn.call(null,G__11847,G__11848,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11855 = a;
var G__11856 = b;
var G__11857 = c;
var G__11858 = d;
var G__11859 = e;
var G__11860 = f;
var G__11861 = g;
var G__11862 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11855,G__11856,G__11857,G__11858,G__11859,G__11860,G__11861,G__11862) : target_fn.call(null,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860,G__11861,G__11862));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11863 = a;
var G__11864 = b;
var G__11865 = c;
var G__11866 = d;
var G__11867 = e;
var G__11868 = f;
var G__11869 = g;
var G__11870 = h;
var G__11871 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11863,G__11864,G__11865,G__11866,G__11867,G__11868,G__11869,G__11870,G__11871) : self__.dispatch_fn.call(null,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868,G__11869,G__11870,G__11871));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11872 = a;
var G__11873 = b;
var G__11874 = c;
var G__11875 = d;
var G__11876 = e;
var G__11877 = f;
var G__11878 = g;
var G__11879 = h;
var G__11880 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880) : target_fn.call(null,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11881 = a;
var G__11882 = b;
var G__11883 = c;
var G__11884 = d;
var G__11885 = e;
var G__11886 = f;
var G__11887 = g;
var G__11888 = h;
var G__11889 = i;
var G__11890 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11881,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887,G__11888,G__11889,G__11890) : self__.dispatch_fn.call(null,G__11881,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887,G__11888,G__11889,G__11890));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11891 = a;
var G__11892 = b;
var G__11893 = c;
var G__11894 = d;
var G__11895 = e;
var G__11896 = f;
var G__11897 = g;
var G__11898 = h;
var G__11899 = i;
var G__11900 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900) : target_fn.call(null,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11901 = a;
var G__11902 = b;
var G__11903 = c;
var G__11904 = d;
var G__11905 = e;
var G__11906 = f;
var G__11907 = g;
var G__11908 = h;
var G__11909 = i;
var G__11910 = j;
var G__11911 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11901,G__11902,G__11903,G__11904,G__11905,G__11906,G__11907,G__11908,G__11909,G__11910,G__11911) : self__.dispatch_fn.call(null,G__11901,G__11902,G__11903,G__11904,G__11905,G__11906,G__11907,G__11908,G__11909,G__11910,G__11911));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11912 = a;
var G__11913 = b;
var G__11914 = c;
var G__11915 = d;
var G__11916 = e;
var G__11917 = f;
var G__11918 = g;
var G__11919 = h;
var G__11920 = i;
var G__11921 = j;
var G__11922 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922) : target_fn.call(null,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11923 = a;
var G__11924 = b;
var G__11925 = c;
var G__11926 = d;
var G__11927 = e;
var G__11928 = f;
var G__11929 = g;
var G__11930 = h;
var G__11931 = i;
var G__11932 = j;
var G__11933 = k;
var G__11934 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11923,G__11924,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933,G__11934) : self__.dispatch_fn.call(null,G__11923,G__11924,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933,G__11934));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11935 = a;
var G__11936 = b;
var G__11937 = c;
var G__11938 = d;
var G__11939 = e;
var G__11940 = f;
var G__11941 = g;
var G__11942 = h;
var G__11943 = i;
var G__11944 = j;
var G__11945 = k;
var G__11946 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942,G__11943,G__11944,G__11945,G__11946) : target_fn.call(null,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942,G__11943,G__11944,G__11945,G__11946));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11947 = a;
var G__11948 = b;
var G__11949 = c;
var G__11950 = d;
var G__11951 = e;
var G__11952 = f;
var G__11953 = g;
var G__11954 = h;
var G__11955 = i;
var G__11956 = j;
var G__11957 = k;
var G__11958 = l;
var G__11959 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959) : self__.dispatch_fn.call(null,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11960 = a;
var G__11961 = b;
var G__11962 = c;
var G__11963 = d;
var G__11964 = e;
var G__11965 = f;
var G__11966 = g;
var G__11967 = h;
var G__11968 = i;
var G__11969 = j;
var G__11970 = k;
var G__11971 = l;
var G__11972 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11960,G__11961,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972) : target_fn.call(null,G__11960,G__11961,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11973 = a;
var G__11974 = b;
var G__11975 = c;
var G__11976 = d;
var G__11977 = e;
var G__11978 = f;
var G__11979 = g;
var G__11980 = h;
var G__11981 = i;
var G__11982 = j;
var G__11983 = k;
var G__11984 = l;
var G__11985 = m;
var G__11986 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11973,G__11974,G__11975,G__11976,G__11977,G__11978,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986) : self__.dispatch_fn.call(null,G__11973,G__11974,G__11975,G__11976,G__11977,G__11978,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11987 = a;
var G__11988 = b;
var G__11989 = c;
var G__11990 = d;
var G__11991 = e;
var G__11992 = f;
var G__11993 = g;
var G__11994 = h;
var G__11995 = i;
var G__11996 = j;
var G__11997 = k;
var G__11998 = l;
var G__11999 = m;
var G__12000 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11987,G__11988,G__11989,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995,G__11996,G__11997,G__11998,G__11999,G__12000) : target_fn.call(null,G__11987,G__11988,G__11989,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995,G__11996,G__11997,G__11998,G__11999,G__12000));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12001 = a;
var G__12002 = b;
var G__12003 = c;
var G__12004 = d;
var G__12005 = e;
var G__12006 = f;
var G__12007 = g;
var G__12008 = h;
var G__12009 = i;
var G__12010 = j;
var G__12011 = k;
var G__12012 = l;
var G__12013 = m;
var G__12014 = n;
var G__12015 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12001,G__12002,G__12003,G__12004,G__12005,G__12006,G__12007,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015) : self__.dispatch_fn.call(null,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006,G__12007,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12016 = a;
var G__12017 = b;
var G__12018 = c;
var G__12019 = d;
var G__12020 = e;
var G__12021 = f;
var G__12022 = g;
var G__12023 = h;
var G__12024 = i;
var G__12025 = j;
var G__12026 = k;
var G__12027 = l;
var G__12028 = m;
var G__12029 = n;
var G__12030 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12016,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023,G__12024,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030) : target_fn.call(null,G__12016,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023,G__12024,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12031 = a;
var G__12032 = b;
var G__12033 = c;
var G__12034 = d;
var G__12035 = e;
var G__12036 = f;
var G__12037 = g;
var G__12038 = h;
var G__12039 = i;
var G__12040 = j;
var G__12041 = k;
var G__12042 = l;
var G__12043 = m;
var G__12044 = n;
var G__12045 = o;
var G__12046 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12031,G__12032,G__12033,G__12034,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043,G__12044,G__12045,G__12046) : self__.dispatch_fn.call(null,G__12031,G__12032,G__12033,G__12034,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043,G__12044,G__12045,G__12046));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12047 = a;
var G__12048 = b;
var G__12049 = c;
var G__12050 = d;
var G__12051 = e;
var G__12052 = f;
var G__12053 = g;
var G__12054 = h;
var G__12055 = i;
var G__12056 = j;
var G__12057 = k;
var G__12058 = l;
var G__12059 = m;
var G__12060 = n;
var G__12061 = o;
var G__12062 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054,G__12055,G__12056,G__12057,G__12058,G__12059,G__12060,G__12061,G__12062) : target_fn.call(null,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054,G__12055,G__12056,G__12057,G__12058,G__12059,G__12060,G__12061,G__12062));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12063 = a;
var G__12064 = b;
var G__12065 = c;
var G__12066 = d;
var G__12067 = e;
var G__12068 = f;
var G__12069 = g;
var G__12070 = h;
var G__12071 = i;
var G__12072 = j;
var G__12073 = k;
var G__12074 = l;
var G__12075 = m;
var G__12076 = n;
var G__12077 = o;
var G__12078 = p;
var G__12079 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070,G__12071,G__12072,G__12073,G__12074,G__12075,G__12076,G__12077,G__12078,G__12079) : self__.dispatch_fn.call(null,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070,G__12071,G__12072,G__12073,G__12074,G__12075,G__12076,G__12077,G__12078,G__12079));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12080 = a;
var G__12081 = b;
var G__12082 = c;
var G__12083 = d;
var G__12084 = e;
var G__12085 = f;
var G__12086 = g;
var G__12087 = h;
var G__12088 = i;
var G__12089 = j;
var G__12090 = k;
var G__12091 = l;
var G__12092 = m;
var G__12093 = n;
var G__12094 = o;
var G__12095 = p;
var G__12096 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__12080,G__12081,G__12082,G__12083,G__12084,G__12085,G__12086,G__12087,G__12088,G__12089,G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096) : target_fn.call(null,G__12080,G__12081,G__12082,G__12083,G__12084,G__12085,G__12086,G__12087,G__12088,G__12089,G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12097 = a;
var G__12098 = b;
var G__12099 = c;
var G__12100 = d;
var G__12101 = e;
var G__12102 = f;
var G__12103 = g;
var G__12104 = h;
var G__12105 = i;
var G__12106 = j;
var G__12107 = k;
var G__12108 = l;
var G__12109 = m;
var G__12110 = n;
var G__12111 = o;
var G__12112 = p;
var G__12113 = q;
var G__12114 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__12097,G__12098,G__12099,G__12100,G__12101,G__12102,G__12103,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114) : self__.dispatch_fn.call(null,G__12097,G__12098,G__12099,G__12100,G__12101,G__12102,G__12103,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12115 = a;
var G__12116 = b;
var G__12117 = c;
var G__12118 = d;
var G__12119 = e;
var G__12120 = f;
var G__12121 = g;
var G__12122 = h;
var G__12123 = i;
var G__12124 = j;
var G__12125 = k;
var G__12126 = l;
var G__12127 = m;
var G__12128 = n;
var G__12129 = o;
var G__12130 = p;
var G__12131 = q;
var G__12132 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__12115,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131,G__12132) : target_fn.call(null,G__12115,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131,G__12132));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12133 = a;
var G__12134 = b;
var G__12135 = c;
var G__12136 = d;
var G__12137 = e;
var G__12138 = f;
var G__12139 = g;
var G__12140 = h;
var G__12141 = i;
var G__12142 = j;
var G__12143 = k;
var G__12144 = l;
var G__12145 = m;
var G__12146 = n;
var G__12147 = o;
var G__12148 = p;
var G__12149 = q;
var G__12150 = r;
var G__12151 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__12133,G__12134,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140,G__12141,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149,G__12150,G__12151) : self__.dispatch_fn.call(null,G__12133,G__12134,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140,G__12141,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149,G__12150,G__12151));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12152 = a;
var G__12153 = b;
var G__12154 = c;
var G__12155 = d;
var G__12156 = e;
var G__12157 = f;
var G__12158 = g;
var G__12159 = h;
var G__12160 = i;
var G__12161 = j;
var G__12162 = k;
var G__12163 = l;
var G__12164 = m;
var G__12165 = n;
var G__12166 = o;
var G__12167 = p;
var G__12168 = q;
var G__12169 = r;
var G__12170 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160,G__12161,G__12162,G__12163,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170) : target_fn.call(null,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160,G__12161,G__12162,G__12163,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12171 = a;
var G__12172 = b;
var G__12173 = c;
var G__12174 = d;
var G__12175 = e;
var G__12176 = f;
var G__12177 = g;
var G__12178 = h;
var G__12179 = i;
var G__12180 = j;
var G__12181 = k;
var G__12182 = l;
var G__12183 = m;
var G__12184 = n;
var G__12185 = o;
var G__12186 = p;
var G__12187 = q;
var G__12188 = r;
var G__12189 = s;
var G__12190 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__12171,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177,G__12178,G__12179,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190) : self__.dispatch_fn.call(null,G__12171,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177,G__12178,G__12179,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12191 = a;
var G__12192 = b;
var G__12193 = c;
var G__12194 = d;
var G__12195 = e;
var G__12196 = f;
var G__12197 = g;
var G__12198 = h;
var G__12199 = i;
var G__12200 = j;
var G__12201 = k;
var G__12202 = l;
var G__12203 = m;
var G__12204 = n;
var G__12205 = o;
var G__12206 = p;
var G__12207 = q;
var G__12208 = r;
var G__12209 = s;
var G__12210 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__12191,G__12192,G__12193,G__12194,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201,G__12202,G__12203,G__12204,G__12205,G__12206,G__12207,G__12208,G__12209,G__12210) : target_fn.call(null,G__12191,G__12192,G__12193,G__12194,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201,G__12202,G__12203,G__12204,G__12205,G__12206,G__12207,G__12208,G__12209,G__12210));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function cljs$core$__GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
 * Removes all of the methods of multimethod.
 */
cljs.core.remove_all_methods = (function cljs$core$remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
 * Removes the method of multimethod associated with dispatch-value.
 */
cljs.core.remove_method = (function cljs$core$remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
 * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
 * when there is a conflict
 */
cljs.core.prefer_method = (function cljs$core$prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
 * Given a multimethod, returns a map of dispatch values -> dispatch fns
 */
cljs.core.methods$ = (function cljs$core$methods(multifn){
return cljs.core._methods(multifn);
});
/**
 * Given a multimethod and a dispatch value, returns the dispatch fn
 * that would apply to that value, or nil if none apply and no default
 */
cljs.core.get_method = (function cljs$core$get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
 * Given a multimethod, returns a map of preferred value -> set of other values
 */
cljs.core.prefers = (function cljs$core$prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12212 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__12212);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4607__auto__,writer__4608__auto__,opt__4609__auto__){
return cljs.core._write(writer__4608__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function cljs$core$__GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});

cljs.core.pr_writer_ex_info = (function cljs$core$pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
 * @constructor
 */
cljs.core.ExceptionInfo = (function cljs$core$ExceptionInfo(message,data,cause){
var e = (new Error());
var this$ = this;
this$.message = message;

this$.data = data;

this$.cause = cause;

this$.name = e.name;

this$.description = e.description;

this$.number = e.number;

this$.fileName = e.fileName;

this$.lineNumber = e.lineNumber;

this$.columnNumber = e.columnNumber;

this$.stack = e.stack;

return this$;
});
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});
cljs.core.ExceptionInfo.prototype.toString = (function (){
var this$ = this;
return cljs.core.pr_str_STAR_(this$);
});
/**
 * Alpha - subject to change.
 * Create an instance of ExceptionInfo, an Error type that carries a
 * map of additional data.
 */
cljs.core.ex_info = (function() {
var cljs$core$ex_info = null;
var cljs$core$ex_info__2 = (function (msg,data){
return cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var cljs$core$ex_info__3 = (function (msg,data,cause){
return (new cljs.core.ExceptionInfo(msg,data,cause));
});
cljs$core$ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return cljs$core$ex_info__2.call(this,msg,data);
case 3:
return cljs$core$ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$2 = cljs$core$ex_info__2;
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3 = cljs$core$ex_info__3;
return cljs$core$ex_info;
})()
;
/**
 * Alpha - subject to change.
 * Returns exception data (a map) if ex is an ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_data = (function cljs$core$ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns the message attached to the given Error / ExceptionInfo object.
 * For non-Errors returns nil.
 */
cljs.core.ex_message = (function cljs$core$ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns exception cause (an Error / ExceptionInfo) if ex is an
 * ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_cause = (function cljs$core$ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
 * Returns an JavaScript compatible comparator based upon pred.
 */
cljs.core.comparator = (function cljs$core$comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__12220 = x;
var G__12221 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12220,G__12221) : pred.call(null,G__12220,G__12221));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__12222 = y;
var G__12223 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12222,G__12223) : pred.call(null,G__12222,G__12223));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function cljs$core$special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
 * test [v] finds fn at key :test in var metadata and calls it,
 * presuming failure will throw exception
 */
cljs.core.test = (function cljs$core$test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$_COLON_ok;
} else {
return cljs.core.constant$keyword$_COLON_no_test;
}
});
